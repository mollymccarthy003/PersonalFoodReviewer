[DEBUG] 2025-10-10 17:57:08.507 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2025-10-10 17:57:08.517 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2025-10-10 17:57:08.562 [main] Version - HHH000412: Hibernate ORM core version 6.4.3.Final
[DEBUG] 2025-10-10 17:57:08.564 [main] Environment - HHH000206: 'hibernate.properties' not found
[DEBUG] 2025-10-10 17:57:08.629 [main] LocalXmlResourceResolver - Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
[DEBUG] 2025-10-10 17:57:08.638 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2025-10-10 17:57:08.909 [main] factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2025-10-10 17:57:08.914 [main] factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2025-10-10 17:57:08.914 [main] factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2025-10-10 17:57:08.915 [main] factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2025-10-10 17:57:08.915 [main] factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2025-10-10 17:57:08.916 [main] factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2025-10-10 17:57:08.917 [main] factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2025-10-10 17:57:08.917 [main] factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2025-10-10 17:57:08.918 [main] factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2025-10-10 17:57:08.919 [main] factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2025-10-10 17:57:08.919 [main] factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2025-10-10 17:57:08.919 [main] factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2025-10-10 17:57:08.920 [main] factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2025-10-10 17:57:08.929 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[INFO ] 2025-10-10 17:57:08.930 [main] RegionFactoryInitiator - HHH000026: Second-level cache disabled
[DEBUG] 2025-10-10 17:57:09.061 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3a22bad6
[DEBUG] 2025-10-10 17:57:09.061 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3a22bad6
[DEBUG] 2025-10-10 17:57:09.061 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@3a22bad6
[DEBUG] 2025-10-10 17:57:09.061 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@56afdf9a
[DEBUG] 2025-10-10 17:57:09.061 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@56afdf9a
[DEBUG] 2025-10-10 17:57:09.061 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@64fe9da7
[DEBUG] 2025-10-10 17:57:09.061 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@64fe9da7
[DEBUG] 2025-10-10 17:57:09.061 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@70cccd8f
[DEBUG] 2025-10-10 17:57:09.061 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@70cccd8f
[DEBUG] 2025-10-10 17:57:09.062 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@5f172d4a
[DEBUG] 2025-10-10 17:57:09.062 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@5f172d4a
[DEBUG] 2025-10-10 17:57:09.062 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@5f172d4a
[DEBUG] 2025-10-10 17:57:09.062 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@77ec6a3d
[DEBUG] 2025-10-10 17:57:09.062 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@77ec6a3d
[DEBUG] 2025-10-10 17:57:09.062 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@77ec6a3d
[DEBUG] 2025-10-10 17:57:09.062 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@67efd2c2
[DEBUG] 2025-10-10 17:57:09.062 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@67efd2c2
[DEBUG] 2025-10-10 17:57:09.062 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@71d9cb05
[DEBUG] 2025-10-10 17:57:09.062 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@17c2d509
[DEBUG] 2025-10-10 17:57:09.062 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@17c2d509
[DEBUG] 2025-10-10 17:57:09.062 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@36bf84e
[DEBUG] 2025-10-10 17:57:09.062 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@1a0b5323
[DEBUG] 2025-10-10 17:57:09.063 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@25b52284
[DEBUG] 2025-10-10 17:57:09.063 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@25b52284
[DEBUG] 2025-10-10 17:57:09.063 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@25b52284
[DEBUG] 2025-10-10 17:57:09.063 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@245ec1a6
[DEBUG] 2025-10-10 17:57:09.063 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@245ec1a6
[DEBUG] 2025-10-10 17:57:09.063 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@245ec1a6
[DEBUG] 2025-10-10 17:57:09.063 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@782be4eb
[DEBUG] 2025-10-10 17:57:09.063 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@782be4eb
[DEBUG] 2025-10-10 17:57:09.063 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@782be4eb
[DEBUG] 2025-10-10 17:57:09.063 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@38792286
[DEBUG] 2025-10-10 17:57:09.063 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@38792286
[DEBUG] 2025-10-10 17:57:09.063 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@38792286
[DEBUG] 2025-10-10 17:57:09.063 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@34d4860f
[DEBUG] 2025-10-10 17:57:09.064 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@34d4860f
[DEBUG] 2025-10-10 17:57:09.064 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@34d4860f
[DEBUG] 2025-10-10 17:57:09.064 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@665522c2
[DEBUG] 2025-10-10 17:57:09.064 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@665522c2
[DEBUG] 2025-10-10 17:57:09.064 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@41fe8e5f
[DEBUG] 2025-10-10 17:57:09.064 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@41fe8e5f
[DEBUG] 2025-10-10 17:57:09.064 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@3062f9f4
[DEBUG] 2025-10-10 17:57:09.064 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@3062f9f4
[DEBUG] 2025-10-10 17:57:09.064 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@3062f9f4
[DEBUG] 2025-10-10 17:57:09.064 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@2016f509
[DEBUG] 2025-10-10 17:57:09.064 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@6f1a80fb
[DEBUG] 2025-10-10 17:57:09.064 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@6f1a80fb
[DEBUG] 2025-10-10 17:57:09.065 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@5a237731
[DEBUG] 2025-10-10 17:57:09.065 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@7d2998d8
[DEBUG] 2025-10-10 17:57:09.065 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@7d2998d8
[DEBUG] 2025-10-10 17:57:09.065 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@7d2998d8
[DEBUG] 2025-10-10 17:57:09.065 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@6a0094c9
[DEBUG] 2025-10-10 17:57:09.065 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@51a6cc2a
[DEBUG] 2025-10-10 17:57:09.065 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@10fda3d0
[DEBUG] 2025-10-10 17:57:09.065 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@2123064f
[DEBUG] 2025-10-10 17:57:09.065 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@2123064f
[DEBUG] 2025-10-10 17:57:09.065 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@4f6b687e
[DEBUG] 2025-10-10 17:57:09.065 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@4f6b687e
[DEBUG] 2025-10-10 17:57:09.065 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@28cb3a25
[DEBUG] 2025-10-10 17:57:09.065 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@5555ffcf
[DEBUG] 2025-10-10 17:57:09.066 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6cfd9a54
[DEBUG] 2025-10-10 17:57:09.066 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@78c1372d
[DEBUG] 2025-10-10 17:57:09.066 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@9aa2002
[DEBUG] 2025-10-10 17:57:09.066 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@73fb1d7f
[DEBUG] 2025-10-10 17:57:09.066 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@73d4066e
[DEBUG] 2025-10-10 17:57:09.066 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@73d4066e
[DEBUG] 2025-10-10 17:57:09.066 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@25d2f66
[DEBUG] 2025-10-10 17:57:09.066 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@25d2f66
[DEBUG] 2025-10-10 17:57:09.066 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@5a2fa51f
[DEBUG] 2025-10-10 17:57:09.066 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@5a2fa51f
[DEBUG] 2025-10-10 17:57:09.066 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@71945bc0
[DEBUG] 2025-10-10 17:57:09.066 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@71945bc0
[DEBUG] 2025-10-10 17:57:09.066 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@22a0d4ea
[DEBUG] 2025-10-10 17:57:09.066 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@22a0d4ea
[DEBUG] 2025-10-10 17:57:09.067 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@49ede9c7
[DEBUG] 2025-10-10 17:57:09.067 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6ecdbab8
[DEBUG] 2025-10-10 17:57:09.067 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@3dd4a6fa
[DEBUG] 2025-10-10 17:57:09.067 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@3dd4a6fa
[DEBUG] 2025-10-10 17:57:09.067 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@19f7222e
[DEBUG] 2025-10-10 17:57:09.067 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3f725306
[DEBUG] 2025-10-10 17:57:09.067 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3c69362a
[DEBUG] 2025-10-10 17:57:09.067 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@2412a42b
[DEBUG] 2025-10-10 17:57:09.067 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@2412a42b
[DEBUG] 2025-10-10 17:57:09.067 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@45404d5
[DEBUG] 2025-10-10 17:57:09.067 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@29138d3a
[DEBUG] 2025-10-10 17:57:09.067 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@5cbe2654
[DEBUG] 2025-10-10 17:57:09.068 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@5cbe2654
[DEBUG] 2025-10-10 17:57:09.068 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@6dbcf214
[DEBUG] 2025-10-10 17:57:09.068 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@6dbcf214
[DEBUG] 2025-10-10 17:57:09.068 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@496a31da
[DEBUG] 2025-10-10 17:57:09.068 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@496a31da
[DEBUG] 2025-10-10 17:57:09.068 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@496a31da
[DEBUG] 2025-10-10 17:57:09.068 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@7c251f90
[DEBUG] 2025-10-10 17:57:09.068 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@7c251f90
[DEBUG] 2025-10-10 17:57:09.068 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@7c251f90
[DEBUG] 2025-10-10 17:57:09.068 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@51841ac6
[DEBUG] 2025-10-10 17:57:09.068 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@5ba26eb0
[DEBUG] 2025-10-10 17:57:09.068 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@435e60ff
[DEBUG] 2025-10-10 17:57:09.068 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@435e60ff
[DEBUG] 2025-10-10 17:57:09.068 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@17d32e9b
[DEBUG] 2025-10-10 17:57:09.069 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@17d32e9b
[DEBUG] 2025-10-10 17:57:09.069 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@17d32e9b
[DEBUG] 2025-10-10 17:57:09.069 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@66f0548d
[DEBUG] 2025-10-10 17:57:09.069 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@2e6f610d
[DEBUG] 2025-10-10 17:57:09.069 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@1e86a5a7
[DEBUG] 2025-10-10 17:57:09.069 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@1e86a5a7
[DEBUG] 2025-10-10 17:57:09.069 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@10afe71a
[DEBUG] 2025-10-10 17:57:09.069 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@10afe71a
[DEBUG] 2025-10-10 17:57:09.069 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@10afe71a
[DEBUG] 2025-10-10 17:57:09.069 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@741f8dbe
[DEBUG] 2025-10-10 17:57:09.069 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@741f8dbe
[DEBUG] 2025-10-10 17:57:09.069 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@212dfd39
[DEBUG] 2025-10-10 17:57:09.069 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@212dfd39
[DEBUG] 2025-10-10 17:57:09.070 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@a2ddf26
[DEBUG] 2025-10-10 17:57:09.070 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@a2ddf26
[DEBUG] 2025-10-10 17:57:09.070 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@65d57e4e
[DEBUG] 2025-10-10 17:57:09.070 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@65d57e4e
[DEBUG] 2025-10-10 17:57:09.070 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@6daf7d37
[DEBUG] 2025-10-10 17:57:09.070 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@6daf7d37
[DEBUG] 2025-10-10 17:57:09.070 [main] BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@23a5818e
[DEBUG] 2025-10-10 17:57:09.070 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@4715ae33
[DEBUG] 2025-10-10 17:57:09.077 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@109a2025
[DEBUG] 2025-10-10 17:57:09.077 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@109a2025
[DEBUG] 2025-10-10 17:57:09.078 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@7915bca3
[DEBUG] 2025-10-10 17:57:09.079 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@68d651f2
[DEBUG] 2025-10-10 17:57:09.079 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@3ad4a7d6
[DEBUG] 2025-10-10 17:57:09.079 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@1e43e323
[DEBUG] 2025-10-10 17:57:09.079 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@4a67b4ec
[DEBUG] 2025-10-10 17:57:09.079 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@10643593
[DEBUG] 2025-10-10 17:57:09.079 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@f91da5e
[DEBUG] 2025-10-10 17:57:09.079 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@eca6a74
[DEBUG] 2025-10-10 17:57:09.079 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@79fd6f95
[INFO ] 2025-10-10 17:57:09.115 [main] c3p0 - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3307/hungryBadger_test
[INFO ] 2025-10-10 17:57:09.115 [main] c3p0 - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2025-10-10 17:57:09.116 [main] c3p0 - HHH10001003: Autocommit mode: false
[INFO ] 2025-10-10 17:57:09.232 [main] c3p0 - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2025-10-10 17:57:09.325 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 9.4.0
      major : 9
      minor : 4
[DEBUG] 2025-10-10 17:57:09.325 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2025-10-10 17:57:09.325 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[DEBUG] 2025-10-10 17:57:09.390 [main] dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 9.4
[DEBUG] 2025-10-10 17:57:09.400 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2025-10-10 17:57:09.400 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2025-10-10 17:57:09.422 [main] DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@60a19573) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@44a085e5)
[DEBUG] 2025-10-10 17:57:09.423 [main] DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@134ff8f8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@619f2afc)
[DEBUG] 2025-10-10 17:57:09.423 [main] DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@df921b1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4db60246)
[DEBUG] 2025-10-10 17:57:09.423 [main] DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2152ab30) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3902bd2c)
[DEBUG] 2025-10-10 17:57:09.423 [main] DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7d32e714) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@eb6ec6)
[DEBUG] 2025-10-10 17:57:09.423 [main] DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@34d45ec0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@18137eab)
[DEBUG] 2025-10-10 17:57:09.423 [main] DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@727320fa) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2935fd2c)
[DEBUG] 2025-10-10 17:57:09.423 [main] DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3f018494) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3ce443f9)
[DEBUG] 2025-10-10 17:57:09.423 [main] DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@57fbc06f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@51a18b21)
[DEBUG] 2025-10-10 17:57:09.425 [main] JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2025-10-10 17:57:09.425 [main] JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2025-10-10 17:57:09.426 [main] JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2025-10-10 17:57:09.429 [main] JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2025-10-10 17:57:09.429 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2025-10-10 17:57:09.433 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@2b38b1f
[DEBUG] 2025-10-10 17:57:09.433 [main] BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@7915bca3`
[DEBUG] 2025-10-10 17:57:09.442 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
[DEBUG] 2025-10-10 17:57:09.442 [main] BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2025-10-10 17:57:09.442 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2025-10-10 17:57:09.446 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2025-10-10 17:57:09.446 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2025-10-10 17:57:09.446 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2025-10-10 17:57:09.446 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2025-10-10 17:57:09.446 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2025-10-10 17:57:09.447 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2025-10-10 17:57:09.448 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2025-10-10 17:57:09.448 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2025-10-10 17:57:09.448 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2025-10-10 17:57:09.449 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@77f905e3] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@221a2068]
[DEBUG] 2025-10-10 17:57:09.506 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2025-10-10 17:57:09.541 [main] EntityBinder - Binding entity from annotated class: org.hungrybadger.entity.Review
[DEBUG] 2025-10-10 17:57:09.554 [main] EntityBinder - Import with entity name Review
[DEBUG] 2025-10-10 17:57:09.563 [main] EntityBinder - Bind entity org.hungrybadger.entity.Review on table review
[DEBUG] 2025-10-10 17:57:09.575 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2025-10-10 17:57:09.597 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2025-10-10 17:57:09.598 [main] ClassLoaderAccessImpl - Not known whether passed class name [org.hungrybadger.entity.Review] is safe
[DEBUG] 2025-10-10 17:57:09.598 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.hungrybadger.entity.Review
[DEBUG] 2025-10-10 17:57:09.601 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2025-10-10 17:57:09.606 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.hungrybadger.entity.Review:id]
[DEBUG] 2025-10-10 17:57:09.612 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2025-10-10 17:57:09.617 [main] BasicValue - Skipping column re-registration: review.id
[DEBUG] 2025-10-10 17:57:09.618 [main] PropertyBinder - Building property id
[DEBUG] 2025-10-10 17:57:09.622 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2025-10-10 17:57:09.628 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='cuisine_type')
[DEBUG] 2025-10-10 17:57:09.628 [main] PropertyBinder - MetadataSourceProcessor property cuisineType with lazy=false
[DEBUG] 2025-10-10 17:57:09.628 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.hungrybadger.entity.Review:cuisineType]
[DEBUG] 2025-10-10 17:57:09.629 [main] BasicValueBinder - building BasicValue for cuisineType
[DEBUG] 2025-10-10 17:57:09.629 [main] BasicValue - Skipping column re-registration: review.cuisine_type
[DEBUG] 2025-10-10 17:57:09.629 [main] PropertyBinder - Building property cuisineType
[DEBUG] 2025-10-10 17:57:09.629 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='personal_notes')
[DEBUG] 2025-10-10 17:57:09.630 [main] PropertyBinder - MetadataSourceProcessor property personalNotes with lazy=false
[DEBUG] 2025-10-10 17:57:09.630 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.hungrybadger.entity.Review:personalNotes]
[DEBUG] 2025-10-10 17:57:09.630 [main] BasicValueBinder - building BasicValue for personalNotes
[DEBUG] 2025-10-10 17:57:09.630 [main] BasicValue - Skipping column re-registration: review.personal_notes
[DEBUG] 2025-10-10 17:57:09.630 [main] PropertyBinder - Building property personalNotes
[DEBUG] 2025-10-10 17:57:09.630 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='personal_rating')
[DEBUG] 2025-10-10 17:57:09.630 [main] PropertyBinder - MetadataSourceProcessor property personalRating with lazy=false
[DEBUG] 2025-10-10 17:57:09.630 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.hungrybadger.entity.Review:personalRating]
[DEBUG] 2025-10-10 17:57:09.630 [main] BasicValueBinder - building BasicValue for personalRating
[DEBUG] 2025-10-10 17:57:09.630 [main] BasicValue - Skipping column re-registration: review.personal_rating
[DEBUG] 2025-10-10 17:57:09.631 [main] PropertyBinder - Building property personalRating
[DEBUG] 2025-10-10 17:57:09.631 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='restaurant_name')
[DEBUG] 2025-10-10 17:57:09.631 [main] PropertyBinder - MetadataSourceProcessor property restaurantName with lazy=false
[DEBUG] 2025-10-10 17:57:09.631 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.hungrybadger.entity.Review:restaurantName]
[DEBUG] 2025-10-10 17:57:09.631 [main] BasicValueBinder - building BasicValue for restaurantName
[DEBUG] 2025-10-10 17:57:09.631 [main] BasicValue - Skipping column re-registration: review.restaurant_name
[DEBUG] 2025-10-10 17:57:09.631 [main] PropertyBinder - Building property restaurantName
[DEBUG] 2025-10-10 17:57:09.633 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: org.hungrybadger.entity
[DEBUG] 2025-10-10 17:57:09.640 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2025-10-10 17:57:09.640 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for cuisineType
[DEBUG] 2025-10-10 17:57:09.642 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for personalNotes
[DEBUG] 2025-10-10 17:57:09.642 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for personalRating
[DEBUG] 2025-10-10 17:57:09.642 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for restaurantName
[DEBUG] 2025-10-10 17:57:09.646 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [review]
[DEBUG] 2025-10-10 17:57:09.874 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2025-10-10 17:57:09.928 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2025-10-10 17:57:09.929 [main] SessionFactoryImpl - Instantiating SessionFactory with settings: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=11, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, java.class.path=C:\Program Files\JetBrains\IntelliJ IDEA 2025.2.1\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2025.2.1\plugins\junit\lib\junit5-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2025.2.1\plugins\junit\lib\junit-rt.jar;C:\Users\mamcc\IdeaProjects\PersonalFoodReviewer\target\test-classes;C:\Users\mamcc\IdeaProjects\PersonalFoodReviewer\target\classes;C:\Users\mamcc\.m2\repository\org\hibernate\orm\hibernate-core\6.4.3.Final\hibernate-core-6.4.3.Final.jar;C:\Users\mamcc\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\mamcc\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\mamcc\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\mamcc\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\mamcc\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\mamcc\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\mamcc\.m2\repository\net\bytebuddy\byte-buddy\1.14.7\byte-buddy-1.14.7.jar;C:\Users\mamcc\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\mamcc\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\mamcc\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\mamcc\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\mamcc\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\mamcc\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\mamcc\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\mamcc\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\mamcc\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\mamcc\.m2\repository\org\hibernate\orm\hibernate-c3p0\6.4.3.Final\hibernate-c3p0-6.4.3.Final.jar;C:\Users\mamcc\.m2\repository\com\mchange\c3p0\0.9.5.5\c3p0-0.9.5.5.jar;C:\Users\mamcc\.m2\repository\com\mchange\mchange-commons-java\0.2.19\mchange-commons-java-0.2.19.jar;C:\Users\mamcc\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\mamcc\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\mamcc\.m2\repository\javax\javaee-web-api\7.0\javaee-web-api-7.0.jar;C:\Users\mamcc\.m2\repository\mysql\mysql-connector-java\8.0.16\mysql-connector-java-8.0.16.jar;C:\Users\mamcc\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\mamcc\.m2\repository\org\apache\logging\log4j\log4j-api\2.17.1\log4j-api-2.17.1.jar;C:\Users\mamcc\.m2\repository\org\apache\logging\log4j\log4j-core\2.17.1\log4j-core-2.17.1.jar;C:\Users\mamcc\.m2\repository\jstl\jstl\1.2\jstl-1.2.jar;C:\Users\mamcc\.m2\repository\org\junit\platform\junit-platform-runner\1.0.0\junit-platform-runner-1.0.0.jar;C:\Users\mamcc\.m2\repository\org\apiguardian\apiguardian-api\1.0.0\apiguardian-api-1.0.0.jar;C:\Users\mamcc\.m2\repository\org\junit\platform\junit-platform-launcher\1.0.0\junit-platform-launcher-1.0.0.jar;C:\Users\mamcc\.m2\repository\org\junit\platform\junit-platform-suite-api\1.0.0\junit-platform-suite-api-1.0.0.jar;C:\Users\mamcc\.m2\repository\org\junit\platform\junit-platform-commons\1.0.0\junit-platform-commons-1.0.0.jar;C:\Users\mamcc\.m2\repository\org\junit\vintage\junit-vintage-engine\4.12.0\junit-vintage-engine-4.12.0.jar;C:\Users\mamcc\.m2\repository\org\junit\platform\junit-platform-engine\1.0.0\junit-platform-engine-1.0.0.jar;C:\Users\mamcc\.m2\repository\org\opentest4j\opentest4j\1.0.0\opentest4j-1.0.0.jar;C:\Users\mamcc\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.0.0\junit-jupiter-engine-5.0.0.jar;C:\Users\mamcc\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.0.0\junit-jupiter-api-5.0.0.jar, kotlinx.coroutines.debug.enable.mutable.state.flows.stack.trace=true, java.vm.vendor=Eclipse Adoptium, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=https://adoptium.net/, user.timezone=America/Chicago, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Eclipse Adoptium\jdk-11.0.28.6-hotspot\bin, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 org.hungrybadger.persistence.ReviewDaoTest, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\mamcc, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2025-07-15, java.home=C:\Program Files\Eclipse Adoptium\jdk-11.0.28.6-hotspot, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, intellij.debug.agent=true, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, user.script=, connection.password=Marthacodes, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=11.0.28+6, user.name=Test, path.separator=;, kotlinx.coroutines.debug.enable.creation.stack.trace=false, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3307/hungryBadger_test, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, java.vendor.version=Temurin-11.0.28+6, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=C:\Users\mamcc\AppData\Local\Temp\, java.version=11.0.28, jboss.modules.system.pkgs=com.intellij.rt, user.dir=C:\Users\mamcc\IdeaProjects\PersonalFoodReviewer, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7ab2a07e, kotlinx.coroutines.debug.enable.flows.stack.trace=true, java.library.path=C:\Program Files\Eclipse Adoptium\jdk-11.0.28.6-hotspot\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Microsoft\jdk-21.0.2.13-hotspot\bin;C:\Program Files\Eclipse Adoptium\jdk-11.0.28.6-hotspot\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\dotnet\;C:\Program Files\Amazon\AWSCLIV2\;C:\Program Files\nodejs\;C:\Program Files\MySQL\MySQL Server 9.0\bin;C:\Program Files\NVIDIA Corporation\NVIDIA app\NvDLISR;C:\Program Files\Git\cmd;C:\Users\mamcc\AppData\Local\Microsoft\WindowsApps;;C:\Users\mamcc\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\mamcc\AppData\Roaming\npm;., java.vendor=Eclipse Adoptium, java.vm.info=mixed mode, java.vm.version=11.0.28+6, java.specification.maintenance.version=3, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3307/hungryBadger_test, debugger.agent.enable.coroutines=true, java.class.version=55.0}
[DEBUG] 2025-10-10 17:57:09.934 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2025-10-10 17:57:09.942 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2025-10-10 17:57:09.990 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2025-10-10 17:57:09.990 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2025-10-10 17:57:09.990 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2025-10-10 17:57:09.991 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2025-10-10 17:57:09.993 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@45037e16] under count; prior registration was null
[DEBUG] 2025-10-10 17:57:09.994 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@14b4340c] under every; prior registration was null
[DEBUG] 2025-10-10 17:57:09.994 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@12abcd1e] under any; prior registration was null
[DEBUG] 2025-10-10 17:57:09.995 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2025-10-10 17:57:09.995 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2025-10-10 17:57:09.995 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2025-10-10 17:57:09.995 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2025-10-10 17:57:09.995 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2025-10-10 17:57:09.995 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2025-10-10 17:57:09.995 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2025-10-10 17:57:09.995 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2025-10-10 17:57:09.995 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2025-10-10 17:57:09.996 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2025-10-10 17:57:09.996 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2025-10-10 17:57:09.996 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2025-10-10 17:57:09.996 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2025-10-10 17:57:09.996 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2025-10-10 17:57:09.996 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2025-10-10 17:57:09.996 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2025-10-10 17:57:09.996 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2025-10-10 17:57:09.998 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5a592c70] under sinh; prior registration was null
[DEBUG] 2025-10-10 17:57:09.999 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@252ec02e] under cosh; prior registration was null
[DEBUG] 2025-10-10 17:57:09.999 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@11e9ac24] under tanh; prior registration was null
[DEBUG] 2025-10-10 17:57:09.999 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@74f280bd] under pi; prior registration was null
[DEBUG] 2025-10-10 17:57:09.999 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@675b18ff] under log; prior registration was null
[DEBUG] 2025-10-10 17:57:10.000 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2025-10-10 17:57:10.000 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2025-10-10 17:57:10.000 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2025-10-10 17:57:10.000 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2025-10-10 17:57:10.000 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2025-10-10 17:57:10.000 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2025-10-10 17:57:10.000 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2025-10-10 17:57:10.000 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2025-10-10 17:57:10.000 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2025-10-10 17:57:10.001 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2025-10-10 17:57:10.001 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2025-10-10 17:57:10.001 [main] SqmFunctionRegistry - Registering alternate key : length -> character_length
[DEBUG] 2025-10-10 17:57:10.001 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@4ffced4e] under position; prior registration was null
[DEBUG] 2025-10-10 17:57:10.003 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@3caee3a8] under overlay; prior registration was null
[DEBUG] 2025-10-10 17:57:10.004 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@2dd178f3] under trim; prior registration was null
[DEBUG] 2025-10-10 17:57:10.005 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@2dfa02c1] under cast; prior registration was null
[DEBUG] 2025-10-10 17:57:10.005 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6314df3c] under collate; prior registration was null
[DEBUG] 2025-10-10 17:57:10.006 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@2801827a] under extract; prior registration was null
[DEBUG] 2025-10-10 17:57:10.006 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2025-10-10 17:57:10.006 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2025-10-10 17:57:10.007 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@64f4f12] under ifnull; prior registration was null
[DEBUG] 2025-10-10 17:57:10.007 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2025-10-10 17:57:10.007 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2025-10-10 17:57:10.007 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@6b0f266e] under pad; prior registration was null
[DEBUG] 2025-10-10 17:57:10.008 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@70881123] under str; prior registration was null
[DEBUG] 2025-10-10 17:57:10.009 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@7b9088f2] under format; prior registration was null
[DEBUG] 2025-10-10 17:57:10.009 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@350323a0] under timestampadd; prior registration was null
[DEBUG] 2025-10-10 17:57:10.010 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@5111de7c] under timestampdiff; prior registration was null
[DEBUG] 2025-10-10 17:57:10.010 [main] SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
[DEBUG] 2025-10-10 17:57:10.010 [main] SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
[DEBUG] 2025-10-10 17:57:10.011 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@342ee097] under current_date; prior registration was null
[DEBUG] 2025-10-10 17:57:10.011 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6ac45c0c] under current_time; prior registration was null
[DEBUG] 2025-10-10 17:57:10.011 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@12192604] under current_timestamp; prior registration was null
[DEBUG] 2025-10-10 17:57:10.011 [main] SqmFunctionRegistry - Registering alternate key : current date -> current_date
[DEBUG] 2025-10-10 17:57:10.011 [main] SqmFunctionRegistry - Registering alternate key : current time -> current_time
[DEBUG] 2025-10-10 17:57:10.011 [main] SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2025-10-10 17:57:10.011 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6075b369] under local_date; prior registration was null
[DEBUG] 2025-10-10 17:57:10.011 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@231cdda8] under local_time; prior registration was null
[DEBUG] 2025-10-10 17:57:10.011 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6b70d1fb] under local_datetime; prior registration was null
[DEBUG] 2025-10-10 17:57:10.011 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3002e397] under offset_datetime; prior registration was null
[DEBUG] 2025-10-10 17:57:10.011 [main] SqmFunctionRegistry - Registering alternate key : local date -> local_date
[DEBUG] 2025-10-10 17:57:10.011 [main] SqmFunctionRegistry - Registering alternate key : local time -> local_time
[DEBUG] 2025-10-10 17:57:10.011 [main] SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
[DEBUG] 2025-10-10 17:57:10.011 [main] SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2025-10-10 17:57:10.012 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7da1e005] under instant; prior registration was null
[DEBUG] 2025-10-10 17:57:10.012 [main] SqmFunctionRegistry - Registering alternate key : current_instant -> instant
[DEBUG] 2025-10-10 17:57:10.012 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@6d4a82] under sql; prior registration was null
[DEBUG] 2025-10-10 17:57:10.012 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2025-10-10 17:57:10.012 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2025-10-10 17:57:10.012 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2025-10-10 17:57:10.012 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2025-10-10 17:57:10.012 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@675b18ff
[DEBUG] 2025-10-10 17:57:10.012 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
[DEBUG] 2025-10-10 17:57:10.013 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2025-10-10 17:57:10.013 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2025-10-10 17:57:10.013 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2025-10-10 17:57:10.013 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2025-10-10 17:57:10.013 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
[DEBUG] 2025-10-10 17:57:10.013 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2025-10-10 17:57:10.013 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2025-10-10 17:57:10.013 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@130cfc47] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
[DEBUG] 2025-10-10 17:57:10.014 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@4eeab3e] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
[DEBUG] 2025-10-10 17:57:10.014 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
[DEBUG] 2025-10-10 17:57:10.014 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2025-10-10 17:57:10.014 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2025-10-10 17:57:10.014 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2025-10-10 17:57:10.014 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2025-10-10 17:57:10.014 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2025-10-10 17:57:10.014 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2025-10-10 17:57:10.014 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2025-10-10 17:57:10.014 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
[DEBUG] 2025-10-10 17:57:10.014 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
[DEBUG] 2025-10-10 17:57:10.014 [main] SqmFunctionRegistry - Registering alternate key : day -> dayofmonth
[DEBUG] 2025-10-10 17:57:10.014 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
[DEBUG] 2025-10-10 17:57:10.014 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2025-10-10 17:57:10.014 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2025-10-10 17:57:10.015 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2025-10-10 17:57:10.015 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2025-10-10 17:57:10.015 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
[DEBUG] 2025-10-10 17:57:10.015 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
[DEBUG] 2025-10-10 17:57:10.015 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
[DEBUG] 2025-10-10 17:57:10.015 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
[DEBUG] 2025-10-10 17:57:10.015 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
[DEBUG] 2025-10-10 17:57:10.015 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
[DEBUG] 2025-10-10 17:57:10.015 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
[DEBUG] 2025-10-10 17:57:10.015 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2025-10-10 17:57:10.015 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
[DEBUG] 2025-10-10 17:57:10.015 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
[DEBUG] 2025-10-10 17:57:10.015 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
[DEBUG] 2025-10-10 17:57:10.015 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
[DEBUG] 2025-10-10 17:57:10.015 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2025-10-10 17:57:10.015 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2025-10-10 17:57:10.016 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2025-10-10 17:57:10.016 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2025-10-10 17:57:10.016 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2025-10-10 17:57:10.016 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2b6fb197] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@4ffced4e
[DEBUG] 2025-10-10 17:57:10.016 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2025-10-10 17:57:10.016 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2025-10-10 17:57:10.016 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2025-10-10 17:57:10.020 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@10d18696] under trunc; prior registration was null
[DEBUG] 2025-10-10 17:57:10.020 [main] SqmFunctionRegistry - Registering alternate key : truncate -> trunc
[DEBUG] 2025-10-10 17:57:10.020 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2025-10-10 17:57:10.021 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6b8b5020] under bitand; prior registration was null
[DEBUG] 2025-10-10 17:57:10.021 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7d37ee0c] under bitor; prior registration was null
[DEBUG] 2025-10-10 17:57:10.021 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5a7b309b] under bitxor; prior registration was null
[DEBUG] 2025-10-10 17:57:10.021 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4602f874] under bitnot; prior registration was null
[DEBUG] 2025-10-10 17:57:10.021 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2025-10-10 17:57:10.021 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2025-10-10 17:57:10.021 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
[DEBUG] 2025-10-10 17:57:10.021 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2025-10-10 17:57:10.021 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2025-10-10 17:57:10.021 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
[DEBUG] 2025-10-10 17:57:10.021 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2025-10-10 17:57:10.022 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2025-10-10 17:57:10.022 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
[DEBUG] 2025-10-10 17:57:10.022 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
[DEBUG] 2025-10-10 17:57:10.022 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
[DEBUG] 2025-10-10 17:57:10.022 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
[DEBUG] 2025-10-10 17:57:10.022 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
[DEBUG] 2025-10-10 17:57:10.022 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@7739aac4] under format; prior registration was org.hibernate.dialect.function.FormatFunction@7b9088f2
[DEBUG] 2025-10-10 17:57:10.022 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
[DEBUG] 2025-10-10 17:57:10.022 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
[DEBUG] 2025-10-10 17:57:10.022 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2025-10-10 17:57:10.022 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2025-10-10 17:57:10.022 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@231cdda8
[DEBUG] 2025-10-10 17:57:10.022 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@6b70d1fb
[DEBUG] 2025-10-10 17:57:10.022 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
[DEBUG] 2025-10-10 17:57:10.023 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@353c6da1] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@74f280bd
[DEBUG] 2025-10-10 17:57:10.023 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@36c07c75] under chr; prior registration was null
[DEBUG] 2025-10-10 17:57:10.023 [main] SqmFunctionRegistry - Registering alternate key : char -> chr
[DEBUG] 2025-10-10 17:57:10.023 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6750e381] under sysdate; prior registration was null
[DEBUG] 2025-10-10 17:57:10.023 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2025-10-10 17:57:10.023 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2025-10-10 17:57:10.023 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2025-10-10 17:57:10.023 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2025-10-10 17:57:10.023 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2025-10-10 17:57:10.023 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2025-10-10 17:57:10.025 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@3a3f96ab] under rank; prior registration was null
[DEBUG] 2025-10-10 17:57:10.025 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@4def7d36] under dense_rank; prior registration was null
[DEBUG] 2025-10-10 17:57:10.025 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@43c7fe8a] under percent_rank; prior registration was null
[DEBUG] 2025-10-10 17:57:10.025 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@67f946c3] under cume_dist; prior registration was null
[DEBUG] 2025-10-10 17:57:10.026 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@46a8c2b4] under listagg; prior registration was null
[DEBUG] 2025-10-10 17:57:10.030 [main] HQL_FUNCTIONS - abs(NUMERIC arg)
[DEBUG] 2025-10-10 17:57:10.030 [main] HQL_FUNCTIONS - Double acos(NUMERIC arg)
[DEBUG] 2025-10-10 17:57:10.030 [main] HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days)
[DEBUG] 2025-10-10 17:57:10.030 [main] HQL_FUNCTIONS - addtime(TIME datetime, TIME time)
[DEBUG] 2025-10-10 17:57:10.030 [main] HQL_FUNCTIONS - Boolean any(BOOLEAN arg)
[DEBUG] 2025-10-10 17:57:10.031 [main] HQL_FUNCTIONS - Integer ascii(STRING arg)
[DEBUG] 2025-10-10 17:57:10.031 [main] HQL_FUNCTIONS - Double asin(NUMERIC arg)
[DEBUG] 2025-10-10 17:57:10.031 [main] HQL_FUNCTIONS - Double atan(NUMERIC arg)
[DEBUG] 2025-10-10 17:57:10.031 [main] HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2025-10-10 17:57:10.031 [main] HQL_FUNCTIONS - avg(arg)
[DEBUG] 2025-10-10 17:57:10.031 [main] HQL_FUNCTIONS - bit_and(arg)
[DEBUG] 2025-10-10 17:57:10.031 [main] HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2025-10-10 17:57:10.031 [main] HQL_FUNCTIONS - bit_or(arg)
[DEBUG] 2025-10-10 17:57:10.031 [main] HQL_FUNCTIONS - bitand(arg0, arg1)
[DEBUG] 2025-10-10 17:57:10.031 [main] HQL_FUNCTIONS - bitnot(arg)
[DEBUG] 2025-10-10 17:57:10.031 [main] HQL_FUNCTIONS - bitor(arg0, arg1)
[DEBUG] 2025-10-10 17:57:10.031 [main] HQL_FUNCTIONS - bitxor(arg0, arg1)
[DEBUG] 2025-10-10 17:57:10.031 [main] HQL_FUNCTIONS - cast(arg as Type)
[DEBUG] 2025-10-10 17:57:10.031 [main] HQL_FUNCTIONS - ceiling(NUMERIC arg)
[DEBUG] 2025-10-10 17:57:10.031 [main] HQL_FUNCTIONS - Character char(INTEGER arg)
[DEBUG] 2025-10-10 17:57:10.031 [main] HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2025-10-10 17:57:10.031 [main] HQL_FUNCTIONS - Character chr(INTEGER arg)
[DEBUG] 2025-10-10 17:57:10.031 [main] HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
[DEBUG] 2025-10-10 17:57:10.031 [main] HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
[DEBUG] 2025-10-10 17:57:10.031 [main] HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2025-10-10 17:57:10.031 [main] HQL_FUNCTIONS - Double cos(NUMERIC arg)
[DEBUG] 2025-10-10 17:57:10.032 [main] HQL_FUNCTIONS - Double cosh(NUMERIC arg)
[DEBUG] 2025-10-10 17:57:10.032 [main] HQL_FUNCTIONS - Double cot(NUMERIC arg)
[DEBUG] 2025-10-10 17:57:10.032 [main] HQL_FUNCTIONS - Long count([distinct ]{arg|*})
[DEBUG] 2025-10-10 17:57:10.032 [main] HQL_FUNCTIONS - Integer crc32(arg)
[DEBUG] 2025-10-10 17:57:10.032 [main] HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
[DEBUG] 2025-10-10 17:57:10.032 [main] HQL_FUNCTIONS - Date curdate()
[DEBUG] 2025-10-10 17:57:10.032 [main] HQL_FUNCTIONS - Date current date
[DEBUG] 2025-10-10 17:57:10.032 [main] HQL_FUNCTIONS - Time current time
[DEBUG] 2025-10-10 17:57:10.032 [main] HQL_FUNCTIONS - Timestamp current timestamp
[DEBUG] 2025-10-10 17:57:10.032 [main] HQL_FUNCTIONS - Date current_date
[DEBUG] 2025-10-10 17:57:10.032 [main] HQL_FUNCTIONS - Instant current_instant
[DEBUG] 2025-10-10 17:57:10.032 [main] HQL_FUNCTIONS - Time current_time
[DEBUG] 2025-10-10 17:57:10.032 [main] HQL_FUNCTIONS - Timestamp current_timestamp
[DEBUG] 2025-10-10 17:57:10.032 [main] HQL_FUNCTIONS - Time curtime()
[DEBUG] 2025-10-10 17:57:10.032 [main] HQL_FUNCTIONS - Date date(arg)
[DEBUG] 2025-10-10 17:57:10.032 [main] HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2025-10-10 17:57:10.032 [main] HQL_FUNCTIONS - Integer datediff(DATE end, DATE start)
[DEBUG] 2025-10-10 17:57:10.032 [main] HQL_FUNCTIONS - Integer day(DATE arg)
[DEBUG] 2025-10-10 17:57:10.032 [main] HQL_FUNCTIONS - String dayname(DATE arg)
[DEBUG] 2025-10-10 17:57:10.032 [main] HQL_FUNCTIONS - Integer dayofmonth(DATE arg)
[DEBUG] 2025-10-10 17:57:10.032 [main] HQL_FUNCTIONS - Integer dayofweek(DATE arg)
[DEBUG] 2025-10-10 17:57:10.032 [main] HQL_FUNCTIONS - Integer dayofyear(DATE arg)
[DEBUG] 2025-10-10 17:57:10.032 [main] HQL_FUNCTIONS - Double degrees(NUMERIC arg)
[DEBUG] 2025-10-10 17:57:10.032 [main] HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
[DEBUG] 2025-10-10 17:57:10.032 [main] HQL_FUNCTIONS - Boolean every(BOOLEAN arg)
[DEBUG] 2025-10-10 17:57:10.032 [main] HQL_FUNCTIONS - Double exp(NUMERIC arg)
[DEBUG] 2025-10-10 17:57:10.032 [main] HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2025-10-10 17:57:10.032 [main] HQL_FUNCTIONS - first_valueANY value
[DEBUG] 2025-10-10 17:57:10.033 [main] HQL_FUNCTIONS - floor(NUMERIC arg)
[DEBUG] 2025-10-10 17:57:10.033 [main] HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2025-10-10 17:57:10.033 [main] HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2025-10-10 17:57:10.033 [main] HQL_FUNCTIONS - Integer hour(TIME arg)
[DEBUG] 2025-10-10 17:57:10.033 [main] HQL_FUNCTIONS - ifnull(arg0, arg1)
[DEBUG] 2025-10-10 17:57:10.033 [main] HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2025-10-10 17:57:10.033 [main] HQL_FUNCTIONS - Instant instant
[DEBUG] 2025-10-10 17:57:10.033 [main] HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2025-10-10 17:57:10.033 [main] HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2025-10-10 17:57:10.033 [main] HQL_FUNCTIONS - Date last_day(DATE arg)
[DEBUG] 2025-10-10 17:57:10.033 [main] HQL_FUNCTIONS - last_valueANY value
[DEBUG] 2025-10-10 17:57:10.033 [main] HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2025-10-10 17:57:10.033 [main] HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2025-10-10 17:57:10.033 [main] HQL_FUNCTIONS - String left(STRING string, INTEGER length)
[DEBUG] 2025-10-10 17:57:10.033 [main] HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
[DEBUG] 2025-10-10 17:57:10.033 [main] HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
[DEBUG] 2025-10-10 17:57:10.033 [main] HQL_FUNCTIONS - Double ln(NUMERIC arg)
[DEBUG] 2025-10-10 17:57:10.033 [main] HQL_FUNCTIONS - LocalDate local date
[DEBUG] 2025-10-10 17:57:10.033 [main] HQL_FUNCTIONS - LocalDateTime local datetime
[DEBUG] 2025-10-10 17:57:10.033 [main] HQL_FUNCTIONS - LocalTime local time
[DEBUG] 2025-10-10 17:57:10.033 [main] HQL_FUNCTIONS - LocalDate local_date
[DEBUG] 2025-10-10 17:57:10.033 [main] HQL_FUNCTIONS - LocalDateTime local_datetime
[DEBUG] 2025-10-10 17:57:10.033 [main] HQL_FUNCTIONS - LocalTime local_time
[DEBUG] 2025-10-10 17:57:10.033 [main] HQL_FUNCTIONS - Timestamp localtime
[DEBUG] 2025-10-10 17:57:10.033 [main] HQL_FUNCTIONS - Timestamp localtimestamp
[DEBUG] 2025-10-10 17:57:10.033 [main] HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2025-10-10 17:57:10.033 [main] HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
[DEBUG] 2025-10-10 17:57:10.033 [main] HQL_FUNCTIONS - Double log10(NUMERIC arg)
[DEBUG] 2025-10-10 17:57:10.034 [main] HQL_FUNCTIONS - Double log2(NUMERIC arg)
[DEBUG] 2025-10-10 17:57:10.034 [main] HQL_FUNCTIONS - String lower(STRING string)
[DEBUG] 2025-10-10 17:57:10.034 [main] HQL_FUNCTIONS - String lpad(string, length[, padding])
[DEBUG] 2025-10-10 17:57:10.034 [main] HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
[DEBUG] 2025-10-10 17:57:10.034 [main] HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear)
[DEBUG] 2025-10-10 17:57:10.034 [main] HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
[DEBUG] 2025-10-10 17:57:10.034 [main] HQL_FUNCTIONS - max(COMPARABLE arg)
[DEBUG] 2025-10-10 17:57:10.034 [main] HQL_FUNCTIONS - String md5(arg)
[DEBUG] 2025-10-10 17:57:10.034 [main] HQL_FUNCTIONS - Integer microsecond(TIME arg)
[DEBUG] 2025-10-10 17:57:10.034 [main] HQL_FUNCTIONS - min(COMPARABLE arg)
[DEBUG] 2025-10-10 17:57:10.034 [main] HQL_FUNCTIONS - Integer minute(TIME arg)
[DEBUG] 2025-10-10 17:57:10.034 [main] HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2025-10-10 17:57:10.034 [main] HQL_FUNCTIONS - Integer month(DATE arg)
[DEBUG] 2025-10-10 17:57:10.034 [main] HQL_FUNCTIONS - String monthname(DATE arg)
[DEBUG] 2025-10-10 17:57:10.034 [main] HQL_FUNCTIONS - Timestamp now()
[DEBUG] 2025-10-10 17:57:10.034 [main] HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
[DEBUG] 2025-10-10 17:57:10.034 [main] HQL_FUNCTIONS - nullif(arg0, arg1)
[DEBUG] 2025-10-10 17:57:10.034 [main] HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2025-10-10 17:57:10.034 [main] HQL_FUNCTIONS - OffsetDateTime offset datetime
[DEBUG] 2025-10-10 17:57:10.034 [main] HQL_FUNCTIONS - OffsetDateTime offset_datetime
[DEBUG] 2025-10-10 17:57:10.034 [main] HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2025-10-10 17:57:10.035 [main] HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2025-10-10 17:57:10.035 [main] HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
[DEBUG] 2025-10-10 17:57:10.035 [main] HQL_FUNCTIONS - Double pi
[DEBUG] 2025-10-10 17:57:10.035 [main] HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
[DEBUG] 2025-10-10 17:57:10.035 [main] HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2025-10-10 17:57:10.035 [main] HQL_FUNCTIONS - Integer quarter(DATE arg)
[DEBUG] 2025-10-10 17:57:10.035 [main] HQL_FUNCTIONS - Double radians(NUMERIC arg)
[DEBUG] 2025-10-10 17:57:10.035 [main] HQL_FUNCTIONS - Double rand([INTEGER seed])
[DEBUG] 2025-10-10 17:57:10.035 [main] HQL_FUNCTIONS - Long rank([arg0[, ...]])
[DEBUG] 2025-10-10 17:57:10.035 [main] HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
[DEBUG] 2025-10-10 17:57:10.035 [main] HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2025-10-10 17:57:10.035 [main] HQL_FUNCTIONS - String reverse(STRING arg)
[DEBUG] 2025-10-10 17:57:10.035 [main] HQL_FUNCTIONS - String right(STRING string, INTEGER length)
[DEBUG] 2025-10-10 17:57:10.035 [main] HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
[DEBUG] 2025-10-10 17:57:10.035 [main] HQL_FUNCTIONS - Long row_number()
[DEBUG] 2025-10-10 17:57:10.035 [main] HQL_FUNCTIONS - String rpad(string, length[, padding])
[DEBUG] 2025-10-10 17:57:10.035 [main] HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
[DEBUG] 2025-10-10 17:57:10.035 [main] HQL_FUNCTIONS - Integer second(TIME arg)
[DEBUG] 2025-10-10 17:57:10.035 [main] HQL_FUNCTIONS - String sha(arg)
[DEBUG] 2025-10-10 17:57:10.035 [main] HQL_FUNCTIONS - String sha1(arg)
[DEBUG] 2025-10-10 17:57:10.035 [main] HQL_FUNCTIONS - String sha2(arg0, arg1)
[DEBUG] 2025-10-10 17:57:10.035 [main] HQL_FUNCTIONS - Integer sign(NUMERIC arg)
[DEBUG] 2025-10-10 17:57:10.035 [main] HQL_FUNCTIONS - Double sin(NUMERIC arg)
[DEBUG] 2025-10-10 17:57:10.035 [main] HQL_FUNCTIONS - Double sinh(NUMERIC arg)
[DEBUG] 2025-10-10 17:57:10.035 [main] HQL_FUNCTIONS - String soundex(arg)
[DEBUG] 2025-10-10 17:57:10.035 [main] HQL_FUNCTIONS - String space(INTEGER arg)
[DEBUG] 2025-10-10 17:57:10.035 [main] HQL_FUNCTIONS - Object sql
[DEBUG] 2025-10-10 17:57:10.035 [main] HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
[DEBUG] 2025-10-10 17:57:10.036 [main] HQL_FUNCTIONS - Double stddev(NUMERIC arg)
[DEBUG] 2025-10-10 17:57:10.036 [main] HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
[DEBUG] 2025-10-10 17:57:10.036 [main] HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
[DEBUG] 2025-10-10 17:57:10.036 [main] HQL_FUNCTIONS - String str(arg)
[DEBUG] 2025-10-10 17:57:10.036 [main] HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days)
[DEBUG] 2025-10-10 17:57:10.036 [main] HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2025-10-10 17:57:10.036 [main] HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2025-10-10 17:57:10.036 [main] HQL_FUNCTIONS - subtime(TIME datetime, TIME time)
[DEBUG] 2025-10-10 17:57:10.036 [main] HQL_FUNCTIONS - sum(arg)
[DEBUG] 2025-10-10 17:57:10.036 [main] HQL_FUNCTIONS - Timestamp sysdate()
[DEBUG] 2025-10-10 17:57:10.036 [main] HQL_FUNCTIONS - Double tan(NUMERIC arg)
[DEBUG] 2025-10-10 17:57:10.036 [main] HQL_FUNCTIONS - Double tanh(NUMERIC arg)
[DEBUG] 2025-10-10 17:57:10.036 [main] HQL_FUNCTIONS - String time(arg)
[DEBUG] 2025-10-10 17:57:10.036 [main] HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1])
[DEBUG] 2025-10-10 17:57:10.036 [main] HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2025-10-10 17:57:10.036 [main] HQL_FUNCTIONS - basicType@14(java.lang.Long,-5)|basicType@17(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2025-10-10 17:57:10.037 [main] HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2025-10-10 17:57:10.037 [main] HQL_FUNCTIONS - trunc( ... )
[DEBUG] 2025-10-10 17:57:10.037 [main] HQL_FUNCTIONS - truncate( ... )
[DEBUG] 2025-10-10 17:57:10.037 [main] HQL_FUNCTIONS - String upper(STRING string)
[DEBUG] 2025-10-10 17:57:10.037 [main] HQL_FUNCTIONS - Date utc_date
[DEBUG] 2025-10-10 17:57:10.037 [main] HQL_FUNCTIONS - Time utc_time
[DEBUG] 2025-10-10 17:57:10.037 [main] HQL_FUNCTIONS - Timestamp utc_timestamp
[DEBUG] 2025-10-10 17:57:10.037 [main] HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
[DEBUG] 2025-10-10 17:57:10.037 [main] HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
[DEBUG] 2025-10-10 17:57:10.037 [main] HQL_FUNCTIONS - Double variance(NUMERIC arg)
[DEBUG] 2025-10-10 17:57:10.037 [main] HQL_FUNCTIONS - Integer week(DATE arg)
[DEBUG] 2025-10-10 17:57:10.037 [main] HQL_FUNCTIONS - Integer year(DATE arg)
[DEBUG] 2025-10-10 17:57:10.049 [main] cache - Starting QueryInterpretationCache(2048)
[DEBUG] 2025-10-10 17:57:10.158 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2025-10-10 17:57:10.159 [main] EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
[DEBUG] 2025-10-10 17:57:10.265 [main] ClassLoaderAccessImpl - Not known whether passed class name [org.hungrybadger.entity.Review] is safe
[DEBUG] 2025-10-10 17:57:10.265 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.hungrybadger.entity.Review
[DEBUG] 2025-10-10 17:57:10.480 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.hungrybadger.entity.Review]: private accessor [cuisineType]
[DEBUG] 2025-10-10 17:57:10.532 [main] creation - Starting post-init callbacks
[DEBUG] 2025-10-10 17:57:10.532 [main] creation - Starting PostInitCallbackEntry : Entity(org.hungrybadger.entity.Review) `staticFetchableList` generator
[DEBUG] 2025-10-10 17:57:10.620 [main] create - Created new SQL alias : r1_0
[DEBUG] 2025-10-10 17:57:10.623 [main] create - Registration of TableGroup [StandardTableGroup(org.hungrybadger.entity.Review)] with identifierForTableGroup [org.hungrybadger.entity.Review] for NavigablePath [org.hungrybadger.entity.Review] 
[DEBUG] 2025-10-10 17:57:10.641 [main] AST - DomainResult Graph:
 \-EntityResultImpl [org.hungrybadger.entity.Review]
 |  +-BasicFetch [org.hungrybadger.entity.Review.cuisineType]
 |  +-BasicFetch [org.hungrybadger.entity.Review.personalNotes]
 |  +-BasicFetch [org.hungrybadger.entity.Review.personalRating]
 |  \-BasicFetch [org.hungrybadger.entity.Review.restaurantName]

[DEBUG] 2025-10-10 17:57:10.651 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.hungrybadger.entity.Review) {
          primaryTableReference : review as r1_0
        }
      }
    }

[DEBUG] 2025-10-10 17:57:10.662 [main] AbstractEntityPersister - Static SQL for entity: org.hungrybadger.entity.Review
[DEBUG] 2025-10-10 17:57:10.663 [main] AbstractEntityPersister -  Version select: select id from review where id=?
[DEBUG] 2025-10-10 17:57:10.663 [main] AbstractEntityPersister -  Insert (0): insert into review (cuisine_type,personal_notes,personal_rating,restaurant_name) values (?,?,?,?)
[DEBUG] 2025-10-10 17:57:10.663 [main] AbstractEntityPersister -  Update (0): update review set cuisine_type=?,personal_notes=?,personal_rating=?,restaurant_name=? where id=?
[DEBUG] 2025-10-10 17:57:10.663 [main] AbstractEntityPersister -  Delete (0): delete from review where id=?
[DEBUG] 2025-10-10 17:57:10.697 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2025-10-10 17:57:10.698 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2025-10-10 17:57:10.705 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2025-10-10 17:57:10.705 [main] JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[DEBUG] 2025-10-10 17:57:10.706 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@77f905e3] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@11180750]
[DEBUG] 2025-10-10 17:57:10.707 [main] NamedObjectRepository - Checking 0 named HQL queries
[DEBUG] 2025-10-10 17:57:10.707 [main] NamedObjectRepository - Checking 0 named SQL queries
[DEBUG] 2025-10-10 17:57:10.708 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2025-10-10 17:57:10.708 [main] SchemaManagementToolCoordinator - No actions found; doing nothing
[DEBUG] 2025-10-10 17:57:10.711 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2e159116
[DEBUG] 2025-10-10 17:57:10.711 [main] SessionFactoryRegistry - Registering SessionFactory: 9a87c49d-a901-45c1-bb6d-5821ea10e6d0 (<unnamed>)
[DEBUG] 2025-10-10 17:57:10.711 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2025-10-10 17:57:10.711 [main] SessionFactoryImpl - Instantiated SessionFactory
[DEBUG] 2025-10-10 17:57:10.759 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2025-10-10 17:57:10.782 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2025-10-10 17:57:10.795 [main] results - Initializer list:
	  org.hungrybadger.entity.Review -> EntityResultInitializer(org.hungrybadger.entity.Review)@1451757974 (SingleTableEntityPersister(org.hungrybadger.entity.Review))

[DEBUG] 2025-10-10 17:57:10.802 [main] SQL - select r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from review r1_0 where r1_0.id=?
[DEBUG] 2025-10-10 17:57:10.825 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review): 2
[DEBUG] 2025-10-10 17:57:10.827 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Review#2] : 531204642
[DEBUG] 2025-10-10 17:57:10.828 [main] results - Extracted JDBC value [1] - [American]
[DEBUG] 2025-10-10 17:57:10.828 [main] results - Extracted JDBC value [2] - [Wraps, good after a long day]
[DEBUG] 2025-10-10 17:57:10.828 [main] results - Extracted JDBC value [3] - [4]
[DEBUG] 2025-10-10 17:57:10.828 [main] results - Extracted JDBC value [4] - [Conrads]
[DEBUG] 2025-10-10 17:57:10.833 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Review#2
[DEBUG] 2025-10-10 17:57:10.833 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4c41a177
[DEBUG] 2025-10-10 17:57:10.836 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-10 17:57:10.838 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2025-10-10 17:57:10.839 [main] TransactionImpl - begin
[DEBUG] 2025-10-10 17:57:10.849 [main] TransactionImpl - committing
[DEBUG] 2025-10-10 17:57:10.850 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2025-10-10 17:57:10.851 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2025-10-10 17:57:10.855 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
[DEBUG] 2025-10-10 17:57:10.855 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2025-10-10 17:57:10.857 [main] EntityPrinter - Listing entities:
[DEBUG] 2025-10-10 17:57:10.858 [main] EntityPrinter - org.hungrybadger.entity.Review{personalNotes=Wraps, good after a long day, personalRating=4, restaurantName=Conrads, id=2, cuisineType=American}
[DEBUG] 2025-10-10 17:57:10.866 [main] SQL - delete from review where id=?
[DEBUG] 2025-10-10 17:57:10.873 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-10 17:57:10.873 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-10 17:57:10.874 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2025-10-10 17:57:10.874 [main] results - Initializer list:
	  org.hungrybadger.entity.Review -> EntityResultInitializer(org.hungrybadger.entity.Review)@1332177152 (SingleTableEntityPersister(org.hungrybadger.entity.Review))

[DEBUG] 2025-10-10 17:57:10.874 [main] SQL - select r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from review r1_0 where r1_0.id=?
[DEBUG] 2025-10-10 17:57:10.876 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-10 17:57:11.035 [main] create - Created new SQL alias : r1_0
[DEBUG] 2025-10-10 17:57:11.035 [main] create - Registration of TableGroup [StandardTableGroup(org.hungrybadger.entity.Review(30436840120400))] with identifierForTableGroup [org.hungrybadger.entity.Review] for NavigablePath [org.hungrybadger.entity.Review] 
[DEBUG] 2025-10-10 17:57:11.052 [main] AST - DomainResult Graph:
 \-EntityResultImpl [org.hungrybadger.entity.Review(30436840120400)]
 |  +-BasicFetch [org.hungrybadger.entity.Review(30436840120400).cuisineType]
 |  +-BasicFetch [org.hungrybadger.entity.Review(30436840120400).personalNotes]
 |  +-BasicFetch [org.hungrybadger.entity.Review(30436840120400).personalRating]
 |  \-BasicFetch [org.hungrybadger.entity.Review(30436840120400).restaurantName]

[DEBUG] 2025-10-10 17:57:11.053 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.hungrybadger.entity.Review(30436840120400)) {
          primaryTableReference : review as r1_0
        }
      }
    }

[DEBUG] 2025-10-10 17:57:11.056 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
[DEBUG] 2025-10-10 17:57:11.056 [main] results - Initializer list:
	  org.hungrybadger.entity.Review(30436840120400) -> EntityResultInitializer(org.hungrybadger.entity.Review(30436840120400))@145382068 (SingleTableEntityPersister(org.hungrybadger.entity.Review))

[DEBUG] 2025-10-10 17:57:11.056 [main] SQL - select r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from review r1_0
[DEBUG] 2025-10-10 17:57:11.058 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2025-10-10 17:57:11.058 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review(30436840120400)): 1
[DEBUG] 2025-10-10 17:57:11.058 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Review(30436840120400)#1] : 2055183685
[DEBUG] 2025-10-10 17:57:11.059 [main] results - Extracted JDBC value [1] - [Japanese]
[DEBUG] 2025-10-10 17:57:11.059 [main] results - Extracted JDBC value [2] - [Good cheap rolls. Togo or sit down are both great]
[DEBUG] 2025-10-10 17:57:11.059 [main] results - Extracted JDBC value [3] - [5]
[DEBUG] 2025-10-10 17:57:11.059 [main] results - Extracted JDBC value [4] - [Sushi Express]
[DEBUG] 2025-10-10 17:57:11.059 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Review(30436840120400)#1
[DEBUG] 2025-10-10 17:57:11.059 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@949d347
[DEBUG] 2025-10-10 17:57:11.059 [main] results - Extracted JDBC value [0] - [2]
[DEBUG] 2025-10-10 17:57:11.059 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review(30436840120400)): 2
[DEBUG] 2025-10-10 17:57:11.059 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Review(30436840120400)#2] : 257614494
[DEBUG] 2025-10-10 17:57:11.059 [main] results - Extracted JDBC value [1] - [American]
[DEBUG] 2025-10-10 17:57:11.059 [main] results - Extracted JDBC value [2] - [Wraps, good after a long day]
[DEBUG] 2025-10-10 17:57:11.059 [main] results - Extracted JDBC value [3] - [4]
[DEBUG] 2025-10-10 17:57:11.059 [main] results - Extracted JDBC value [4] - [Conrads]
[DEBUG] 2025-10-10 17:57:11.059 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Review(30436840120400)#2
[DEBUG] 2025-10-10 17:57:11.060 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@949d347
[DEBUG] 2025-10-10 17:57:11.060 [main] results - Extracted JDBC value [0] - [3]
[DEBUG] 2025-10-10 17:57:11.060 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review(30436840120400)): 3
[DEBUG] 2025-10-10 17:57:11.060 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Review(30436840120400)#3] : 533053618
[DEBUG] 2025-10-10 17:57:11.060 [main] results - Extracted JDBC value [1] - [American]
[DEBUG] 2025-10-10 17:57:11.060 [main] results - Extracted JDBC value [2] - [Mac and Cheese Slice for the win!]
[DEBUG] 2025-10-10 17:57:11.060 [main] results - Extracted JDBC value [3] - [5]
[DEBUG] 2025-10-10 17:57:11.060 [main] results - Extracted JDBC value [4] - [Ians Pizza]
[DEBUG] 2025-10-10 17:57:11.060 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Review(30436840120400)#3
[DEBUG] 2025-10-10 17:57:11.060 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@949d347
[DEBUG] 2025-10-10 17:57:11.061 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-10 17:57:11.061 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-10 17:57:11.150 [main] create - Created new SQL alias : r1_0
[DEBUG] 2025-10-10 17:57:11.150 [main] create - Registration of TableGroup [StandardTableGroup(org.hungrybadger.entity.Review(30436998558800))] with identifierForTableGroup [org.hungrybadger.entity.Review] for NavigablePath [org.hungrybadger.entity.Review] 
[DEBUG] 2025-10-10 17:57:11.155 [main] BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1c411474
[DEBUG] 2025-10-10 17:57:11.155 [main] BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.hungrybadger.entity.Review(30436998558800).restaurantName) 
[DEBUG] 2025-10-10 17:57:11.158 [main] AST - DomainResult Graph:
 \-EntityResultImpl [org.hungrybadger.entity.Review(30436998558800)]
 |  +-BasicFetch [org.hungrybadger.entity.Review(30436998558800).cuisineType]
 |  +-BasicFetch [org.hungrybadger.entity.Review(30436998558800).personalNotes]
 |  +-BasicFetch [org.hungrybadger.entity.Review(30436998558800).personalRating]
 |  \-BasicFetch [org.hungrybadger.entity.Review(30436998558800).restaurantName]

[DEBUG] 2025-10-10 17:57:11.158 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.hungrybadger.entity.Review(30436998558800)) {
          primaryTableReference : review as r1_0
        }
      }
    }

[DEBUG] 2025-10-10 17:57:11.159 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
[DEBUG] 2025-10-10 17:57:11.159 [main] results - Initializer list:
	  org.hungrybadger.entity.Review(30436998558800) -> EntityResultInitializer(org.hungrybadger.entity.Review(30436998558800))@1053273441 (SingleTableEntityPersister(org.hungrybadger.entity.Review))

[DEBUG] 2025-10-10 17:57:11.159 [main] SQL - select r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from review r1_0 where r1_0.restaurant_name like ? escape ''
[DEBUG] 2025-10-10 17:57:11.162 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2025-10-10 17:57:11.162 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review(30436998558800)): 1
[DEBUG] 2025-10-10 17:57:11.162 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Review(30436998558800)#1] : 159851247
[DEBUG] 2025-10-10 17:57:11.162 [main] results - Extracted JDBC value [1] - [Japanese]
[DEBUG] 2025-10-10 17:57:11.162 [main] results - Extracted JDBC value [2] - [Good cheap rolls. Togo or sit down are both great]
[DEBUG] 2025-10-10 17:57:11.162 [main] results - Extracted JDBC value [3] - [5]
[DEBUG] 2025-10-10 17:57:11.162 [main] results - Extracted JDBC value [4] - [Sushi Express]
[DEBUG] 2025-10-10 17:57:11.162 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Review(30436998558800)#1
[DEBUG] 2025-10-10 17:57:11.162 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@459e120b
[DEBUG] 2025-10-10 17:57:11.162 [main] results - Extracted JDBC value [0] - [2]
[DEBUG] 2025-10-10 17:57:11.162 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review(30436998558800)): 2
[DEBUG] 2025-10-10 17:57:11.162 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Review(30436998558800)#2] : 265722243
[DEBUG] 2025-10-10 17:57:11.162 [main] results - Extracted JDBC value [1] - [American]
[DEBUG] 2025-10-10 17:57:11.162 [main] results - Extracted JDBC value [2] - [Wraps, good after a long day]
[DEBUG] 2025-10-10 17:57:11.163 [main] results - Extracted JDBC value [3] - [4]
[DEBUG] 2025-10-10 17:57:11.163 [main] results - Extracted JDBC value [4] - [Conrads]
[DEBUG] 2025-10-10 17:57:11.163 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Review(30436998558800)#2
[DEBUG] 2025-10-10 17:57:11.163 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@459e120b
[DEBUG] 2025-10-10 17:57:11.163 [main] results - Extracted JDBC value [0] - [3]
[DEBUG] 2025-10-10 17:57:11.163 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review(30436998558800)): 3
[DEBUG] 2025-10-10 17:57:11.163 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Review(30436998558800)#3] : 574790161
[DEBUG] 2025-10-10 17:57:11.163 [main] results - Extracted JDBC value [1] - [American]
[DEBUG] 2025-10-10 17:57:11.163 [main] results - Extracted JDBC value [2] - [Mac and Cheese Slice for the win!]
[DEBUG] 2025-10-10 17:57:11.163 [main] results - Extracted JDBC value [3] - [5]
[DEBUG] 2025-10-10 17:57:11.163 [main] results - Extracted JDBC value [4] - [Ians Pizza]
[DEBUG] 2025-10-10 17:57:11.163 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Review(30436998558800)#3
[DEBUG] 2025-10-10 17:57:11.163 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@459e120b
[DEBUG] 2025-10-10 17:57:11.163 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-10 17:57:11.164 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-10 17:57:11.214 [main] create - Created new SQL alias : r1_0
[DEBUG] 2025-10-10 17:57:11.214 [main] create - Registration of TableGroup [StandardTableGroup(org.hungrybadger.entity.Review(30437088368000))] with identifierForTableGroup [org.hungrybadger.entity.Review] for NavigablePath [org.hungrybadger.entity.Review] 
[DEBUG] 2025-10-10 17:57:11.214 [main] BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2adc1e84
[DEBUG] 2025-10-10 17:57:11.214 [main] BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.hungrybadger.entity.Review(30437088368000).restaurantName) 
[DEBUG] 2025-10-10 17:57:11.214 [main] AST - DomainResult Graph:
 \-EntityResultImpl [org.hungrybadger.entity.Review(30437088368000)]
 |  +-BasicFetch [org.hungrybadger.entity.Review(30437088368000).cuisineType]
 |  +-BasicFetch [org.hungrybadger.entity.Review(30437088368000).personalNotes]
 |  +-BasicFetch [org.hungrybadger.entity.Review(30437088368000).personalRating]
 |  \-BasicFetch [org.hungrybadger.entity.Review(30437088368000).restaurantName]

[DEBUG] 2025-10-10 17:57:11.214 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.hungrybadger.entity.Review(30437088368000)) {
          primaryTableReference : review as r1_0
        }
      }
    }

[DEBUG] 2025-10-10 17:57:11.215 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
[DEBUG] 2025-10-10 17:57:11.215 [main] results - Initializer list:
	  org.hungrybadger.entity.Review(30437088368000) -> EntityResultInitializer(org.hungrybadger.entity.Review(30437088368000))@1469217737 (SingleTableEntityPersister(org.hungrybadger.entity.Review))

[DEBUG] 2025-10-10 17:57:11.215 [main] SQL - select r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from review r1_0 where r1_0.restaurant_name like ? escape ''
[DEBUG] 2025-10-10 17:57:11.216 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2025-10-10 17:57:11.217 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review(30437088368000)): 1
[DEBUG] 2025-10-10 17:57:11.217 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Review(30437088368000)#1] : 2006056784
[DEBUG] 2025-10-10 17:57:11.217 [main] results - Extracted JDBC value [1] - [Japanese]
[DEBUG] 2025-10-10 17:57:11.217 [main] results - Extracted JDBC value [2] - [Good cheap rolls. Togo or sit down are both great]
[DEBUG] 2025-10-10 17:57:11.217 [main] results - Extracted JDBC value [3] - [5]
[DEBUG] 2025-10-10 17:57:11.217 [main] results - Extracted JDBC value [4] - [Sushi Express]
[DEBUG] 2025-10-10 17:57:11.217 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Review(30437088368000)#1
[DEBUG] 2025-10-10 17:57:11.217 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@46de118b
[DEBUG] 2025-10-10 17:57:11.217 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-10 17:57:11.218 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-10 17:57:11.269 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2025-10-10 17:57:11.269 [main] results - Initializer list:
	  org.hungrybadger.entity.Review -> EntityResultInitializer(org.hungrybadger.entity.Review)@2040509534 (SingleTableEntityPersister(org.hungrybadger.entity.Review))

[DEBUG] 2025-10-10 17:57:11.269 [main] SQL - select r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from review r1_0 where r1_0.id=?
[DEBUG] 2025-10-10 17:57:11.271 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review): 1
[DEBUG] 2025-10-10 17:57:11.271 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Review#1] : 409957428
[DEBUG] 2025-10-10 17:57:11.271 [main] results - Extracted JDBC value [1] - [Japanese]
[DEBUG] 2025-10-10 17:57:11.271 [main] results - Extracted JDBC value [2] - [Good cheap rolls. Togo or sit down are both great]
[DEBUG] 2025-10-10 17:57:11.271 [main] results - Extracted JDBC value [3] - [5]
[DEBUG] 2025-10-10 17:57:11.271 [main] results - Extracted JDBC value [4] - [Sushi Express]
[DEBUG] 2025-10-10 17:57:11.271 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Review#1
[DEBUG] 2025-10-10 17:57:11.271 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2374452a
[DEBUG] 2025-10-10 17:57:11.272 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-10 17:57:11.325 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2025-10-10 17:57:11.325 [main] results - Initializer list:
	  org.hungrybadger.entity.Review -> EntityResultInitializer(org.hungrybadger.entity.Review)@337509625 (SingleTableEntityPersister(org.hungrybadger.entity.Review))

[DEBUG] 2025-10-10 17:57:11.325 [main] SQL - select r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from review r1_0 where r1_0.id=?
[DEBUG] 2025-10-10 17:57:11.328 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review): 1
[DEBUG] 2025-10-10 17:57:11.328 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Review#1] : 671967776
[DEBUG] 2025-10-10 17:57:11.328 [main] results - Extracted JDBC value [1] - [Japanese]
[DEBUG] 2025-10-10 17:57:11.328 [main] results - Extracted JDBC value [2] - [Good cheap rolls. Togo or sit down are both great]
[DEBUG] 2025-10-10 17:57:11.328 [main] results - Extracted JDBC value [3] - [5]
[DEBUG] 2025-10-10 17:57:11.328 [main] results - Extracted JDBC value [4] - [Sushi Express]
[DEBUG] 2025-10-10 17:57:11.328 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Review#1
[DEBUG] 2025-10-10 17:57:11.328 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@56f72909
[DEBUG] 2025-10-10 17:57:11.328 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-10 17:57:11.329 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2025-10-10 17:57:11.329 [main] TransactionImpl - begin
[DEBUG] 2025-10-10 17:57:11.333 [main] create - Created new SQL alias : r1_0
[DEBUG] 2025-10-10 17:57:11.333 [main] create - Registration of TableGroup [StandardTableGroup(org.hungrybadger.entity.Review)] with identifierForTableGroup [org.hungrybadger.entity.Review] for NavigablePath [org.hungrybadger.entity.Review] 
[DEBUG] 2025-10-10 17:57:11.334 [main] AST - DomainResult Graph:
 \-EntityResultImpl [org.hungrybadger.entity.Review]
 |  +-BasicFetch [org.hungrybadger.entity.Review.cuisineType]
 |  +-BasicFetch [org.hungrybadger.entity.Review.personalNotes]
 |  +-BasicFetch [org.hungrybadger.entity.Review.personalRating]
 |  \-BasicFetch [org.hungrybadger.entity.Review.restaurantName]

[DEBUG] 2025-10-10 17:57:11.334 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.hungrybadger.entity.Review) {
          primaryTableReference : review as r1_0
        }
      }
    }

[DEBUG] 2025-10-10 17:57:11.334 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2025-10-10 17:57:11.334 [main] results - Initializer list:
	  org.hungrybadger.entity.Review -> EntityResultInitializer(org.hungrybadger.entity.Review)@347042785 (SingleTableEntityPersister(org.hungrybadger.entity.Review))

[DEBUG] 2025-10-10 17:57:11.334 [main] SQL - select r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from review r1_0 where r1_0.id=?
[DEBUG] 2025-10-10 17:57:11.335 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review): 1
[DEBUG] 2025-10-10 17:57:11.335 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Review#1] : 1868914109
[DEBUG] 2025-10-10 17:57:11.335 [main] results - Extracted JDBC value [1] - [Japanese]
[DEBUG] 2025-10-10 17:57:11.335 [main] results - Extracted JDBC value [2] - [Good cheap rolls. Togo or sit down are both great]
[DEBUG] 2025-10-10 17:57:11.336 [main] results - Extracted JDBC value [3] - [5]
[DEBUG] 2025-10-10 17:57:11.336 [main] results - Extracted JDBC value [4] - [Sushi Express]
[DEBUG] 2025-10-10 17:57:11.336 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Review#1
[DEBUG] 2025-10-10 17:57:11.336 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@546083d6
[DEBUG] 2025-10-10 17:57:11.336 [main] TransactionImpl - committing
[DEBUG] 2025-10-10 17:57:11.336 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2025-10-10 17:57:11.336 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2025-10-10 17:57:11.338 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
[DEBUG] 2025-10-10 17:57:11.338 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2025-10-10 17:57:11.338 [main] EntityPrinter - Listing entities:
[DEBUG] 2025-10-10 17:57:11.338 [main] EntityPrinter - org.hungrybadger.entity.Review{personalNotes=Good cheap rolls. Togo or sit down are both great, personalRating=5, restaurantName=Conrads Wraps, id=1, cuisineType=Japanese}
[DEBUG] 2025-10-10 17:57:11.342 [main] SQL - update review set cuisine_type=?,personal_notes=?,personal_rating=?,restaurant_name=? where id=?
[DEBUG] 2025-10-10 17:57:11.347 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-10 17:57:11.348 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-10 17:57:11.348 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2025-10-10 17:57:11.348 [main] results - Initializer list:
	  org.hungrybadger.entity.Review -> EntityResultInitializer(org.hungrybadger.entity.Review)@293583290 (SingleTableEntityPersister(org.hungrybadger.entity.Review))

[DEBUG] 2025-10-10 17:57:11.348 [main] SQL - select r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from review r1_0 where r1_0.id=?
[DEBUG] 2025-10-10 17:57:11.349 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review): 1
[DEBUG] 2025-10-10 17:57:11.350 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Review#1] : 691200351
[DEBUG] 2025-10-10 17:57:11.350 [main] results - Extracted JDBC value [1] - [Japanese]
[DEBUG] 2025-10-10 17:57:11.350 [main] results - Extracted JDBC value [2] - [Good cheap rolls. Togo or sit down are both great]
[DEBUG] 2025-10-10 17:57:11.350 [main] results - Extracted JDBC value [3] - [5]
[DEBUG] 2025-10-10 17:57:11.350 [main] results - Extracted JDBC value [4] - [Conrads Wraps]
[DEBUG] 2025-10-10 17:57:11.350 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Review#1
[DEBUG] 2025-10-10 17:57:11.350 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3d98729a
[DEBUG] 2025-10-10 17:57:11.350 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-10 17:57:11.404 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2025-10-10 17:57:11.404 [main] TransactionImpl - begin
[DEBUG] 2025-10-10 17:57:11.407 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2025-10-10 17:57:11.410 [main] SQL - insert into review (cuisine_type,personal_notes,personal_rating,restaurant_name) values (?,?,?,?)
[DEBUG] 2025-10-10 17:57:11.416 [main] IdentifierGeneratorHelper - Natively generated identity (org.hungrybadger.entity.Review) : 4
[DEBUG] 2025-10-10 17:57:11.417 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2025-10-10 17:57:11.422 [main] ResourceRegistryStandardImpl - Exception clearing maxRows/queryTimeout [You can't operate on a closed Statement!!!]
[DEBUG] 2025-10-10 17:57:11.425 [main] TransactionImpl - committing
[DEBUG] 2025-10-10 17:57:11.425 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2025-10-10 17:57:11.425 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2025-10-10 17:57:11.425 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2025-10-10 17:57:11.425 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2025-10-10 17:57:11.425 [main] EntityPrinter - Listing entities:
[DEBUG] 2025-10-10 17:57:11.425 [main] EntityPrinter - org.hungrybadger.entity.Review{personalNotes=Worked here for 2 years, gluten free!, personalRating=4, restaurantName=Madison Chocolate Company, id=4, cuisineType=French}
[DEBUG] 2025-10-10 17:57:11.427 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-10 17:57:11.428 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-10 17:57:11.429 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2025-10-10 17:57:11.429 [main] results - Initializer list:
	  org.hungrybadger.entity.Review -> EntityResultInitializer(org.hungrybadger.entity.Review)@581318464 (SingleTableEntityPersister(org.hungrybadger.entity.Review))

[DEBUG] 2025-10-10 17:57:11.429 [main] SQL - select r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from review r1_0 where r1_0.id=?
[DEBUG] 2025-10-10 17:57:11.430 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review): 4
[DEBUG] 2025-10-10 17:57:11.431 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Review#4] : 677521178
[DEBUG] 2025-10-10 17:57:11.431 [main] results - Extracted JDBC value [1] - [French]
[DEBUG] 2025-10-10 17:57:11.431 [main] results - Extracted JDBC value [2] - [Worked here for 2 years, gluten free!]
[DEBUG] 2025-10-10 17:57:11.431 [main] results - Extracted JDBC value [3] - [4]
[DEBUG] 2025-10-10 17:57:11.431 [main] results - Extracted JDBC value [4] - [Madison Chocolate Company]
[DEBUG] 2025-10-10 17:57:11.431 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Review#4
[DEBUG] 2025-10-10 17:57:11.431 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2419fe6f
[DEBUG] 2025-10-10 17:57:11.431 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 09:47:30.637 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2025-10-15 09:47:30.651 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2025-10-15 09:47:30.700 [main] Version - HHH000412: Hibernate ORM core version 6.4.3.Final
[DEBUG] 2025-10-15 09:47:30.703 [main] Environment - HHH000206: 'hibernate.properties' not found
[DEBUG] 2025-10-15 09:47:30.797 [main] LocalXmlResourceResolver - Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
[DEBUG] 2025-10-15 09:47:30.805 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2025-10-15 09:47:31.113 [main] factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2025-10-15 09:47:31.120 [main] factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2025-10-15 09:47:31.121 [main] factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2025-10-15 09:47:31.122 [main] factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2025-10-15 09:47:31.122 [main] factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2025-10-15 09:47:31.122 [main] factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2025-10-15 09:47:31.123 [main] factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2025-10-15 09:47:31.124 [main] factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2025-10-15 09:47:31.125 [main] factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2025-10-15 09:47:31.126 [main] factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2025-10-15 09:47:31.126 [main] factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2025-10-15 09:47:31.126 [main] factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2025-10-15 09:47:31.127 [main] factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2025-10-15 09:47:31.139 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[INFO ] 2025-10-15 09:47:31.141 [main] RegionFactoryInitiator - HHH000026: Second-level cache disabled
[DEBUG] 2025-10-15 09:47:31.303 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7c251f90
[DEBUG] 2025-10-15 09:47:31.303 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7c251f90
[DEBUG] 2025-10-15 09:47:31.303 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@7c251f90
[DEBUG] 2025-10-15 09:47:31.303 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@51841ac6
[DEBUG] 2025-10-15 09:47:31.303 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@51841ac6
[DEBUG] 2025-10-15 09:47:31.304 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@5ba26eb0
[DEBUG] 2025-10-15 09:47:31.304 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@5ba26eb0
[DEBUG] 2025-10-15 09:47:31.304 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@435e60ff
[DEBUG] 2025-10-15 09:47:31.304 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@435e60ff
[DEBUG] 2025-10-15 09:47:31.304 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@17d32e9b
[DEBUG] 2025-10-15 09:47:31.304 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@17d32e9b
[DEBUG] 2025-10-15 09:47:31.304 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@17d32e9b
[DEBUG] 2025-10-15 09:47:31.304 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@66f0548d
[DEBUG] 2025-10-15 09:47:31.304 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@66f0548d
[DEBUG] 2025-10-15 09:47:31.304 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@66f0548d
[DEBUG] 2025-10-15 09:47:31.304 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2e6f610d
[DEBUG] 2025-10-15 09:47:31.305 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2e6f610d
[DEBUG] 2025-10-15 09:47:31.305 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@1e86a5a7
[DEBUG] 2025-10-15 09:47:31.305 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@10afe71a
[DEBUG] 2025-10-15 09:47:31.305 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@10afe71a
[DEBUG] 2025-10-15 09:47:31.305 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@741f8dbe
[DEBUG] 2025-10-15 09:47:31.305 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@212dfd39
[DEBUG] 2025-10-15 09:47:31.305 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@a2ddf26
[DEBUG] 2025-10-15 09:47:31.306 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@a2ddf26
[DEBUG] 2025-10-15 09:47:31.306 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@a2ddf26
[DEBUG] 2025-10-15 09:47:31.306 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@65d57e4e
[DEBUG] 2025-10-15 09:47:31.306 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@65d57e4e
[DEBUG] 2025-10-15 09:47:31.306 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@65d57e4e
[DEBUG] 2025-10-15 09:47:31.306 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@6daf7d37
[DEBUG] 2025-10-15 09:47:31.306 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@6daf7d37
[DEBUG] 2025-10-15 09:47:31.306 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@6daf7d37
[DEBUG] 2025-10-15 09:47:31.306 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@23a5818e
[DEBUG] 2025-10-15 09:47:31.306 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@23a5818e
[DEBUG] 2025-10-15 09:47:31.307 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@23a5818e
[DEBUG] 2025-10-15 09:47:31.307 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@4715ae33
[DEBUG] 2025-10-15 09:47:31.307 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@4715ae33
[DEBUG] 2025-10-15 09:47:31.307 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@4715ae33
[DEBUG] 2025-10-15 09:47:31.307 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@9fc9f91
[DEBUG] 2025-10-15 09:47:31.307 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@9fc9f91
[DEBUG] 2025-10-15 09:47:31.307 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@1fac1d5c
[DEBUG] 2025-10-15 09:47:31.307 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@1fac1d5c
[DEBUG] 2025-10-15 09:47:31.307 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@108a46d6
[DEBUG] 2025-10-15 09:47:31.307 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@108a46d6
[DEBUG] 2025-10-15 09:47:31.308 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@108a46d6
[DEBUG] 2025-10-15 09:47:31.308 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@7a8406c2
[DEBUG] 2025-10-15 09:47:31.308 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@17690e14
[DEBUG] 2025-10-15 09:47:31.308 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@17690e14
[DEBUG] 2025-10-15 09:47:31.308 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@6850b758
[DEBUG] 2025-10-15 09:47:31.308 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@2a2ef072
[DEBUG] 2025-10-15 09:47:31.308 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@2a2ef072
[DEBUG] 2025-10-15 09:47:31.308 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@2a2ef072
[DEBUG] 2025-10-15 09:47:31.308 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@704641e3
[DEBUG] 2025-10-15 09:47:31.308 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@2f00f851
[DEBUG] 2025-10-15 09:47:31.308 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@4207609e
[DEBUG] 2025-10-15 09:47:31.308 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@1f77b5cc
[DEBUG] 2025-10-15 09:47:31.308 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@1f77b5cc
[DEBUG] 2025-10-15 09:47:31.308 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@5d7ca698
[DEBUG] 2025-10-15 09:47:31.309 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@5d7ca698
[DEBUG] 2025-10-15 09:47:31.309 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@75961f16
[DEBUG] 2025-10-15 09:47:31.309 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@c6c82aa
[DEBUG] 2025-10-15 09:47:31.309 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@2e179f3e
[DEBUG] 2025-10-15 09:47:31.309 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@16e7b402
[DEBUG] 2025-10-15 09:47:31.309 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@534c6767
[DEBUG] 2025-10-15 09:47:31.309 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@3bddc676
[DEBUG] 2025-10-15 09:47:31.309 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@29a1505c
[DEBUG] 2025-10-15 09:47:31.309 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@29a1505c
[DEBUG] 2025-10-15 09:47:31.309 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@24db6ce
[DEBUG] 2025-10-15 09:47:31.309 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@24db6ce
[DEBUG] 2025-10-15 09:47:31.309 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@320a8ebf
[DEBUG] 2025-10-15 09:47:31.309 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@320a8ebf
[DEBUG] 2025-10-15 09:47:31.310 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@67b100fe
[DEBUG] 2025-10-15 09:47:31.310 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@67b100fe
[DEBUG] 2025-10-15 09:47:31.310 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@44b18fe4
[DEBUG] 2025-10-15 09:47:31.310 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@44b18fe4
[DEBUG] 2025-10-15 09:47:31.310 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2ba5aa7a
[DEBUG] 2025-10-15 09:47:31.310 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4d3ca6c7
[DEBUG] 2025-10-15 09:47:31.310 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@22e5f96e
[DEBUG] 2025-10-15 09:47:31.310 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@22e5f96e
[DEBUG] 2025-10-15 09:47:31.310 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@6a638c79
[DEBUG] 2025-10-15 09:47:31.310 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6c931d35
[DEBUG] 2025-10-15 09:47:31.310 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@44b194fe
[DEBUG] 2025-10-15 09:47:31.310 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@49122b8f
[DEBUG] 2025-10-15 09:47:31.310 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@49122b8f
[DEBUG] 2025-10-15 09:47:31.310 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3fe46690
[DEBUG] 2025-10-15 09:47:31.311 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4beabeec
[DEBUG] 2025-10-15 09:47:31.311 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@3b4d50b
[DEBUG] 2025-10-15 09:47:31.311 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@3b4d50b
[DEBUG] 2025-10-15 09:47:31.311 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@5b22d8a1
[DEBUG] 2025-10-15 09:47:31.311 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@5b22d8a1
[DEBUG] 2025-10-15 09:47:31.311 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@476ee5b3
[DEBUG] 2025-10-15 09:47:31.311 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@476ee5b3
[DEBUG] 2025-10-15 09:47:31.311 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@476ee5b3
[DEBUG] 2025-10-15 09:47:31.311 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@59ed3e6c
[DEBUG] 2025-10-15 09:47:31.311 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@59ed3e6c
[DEBUG] 2025-10-15 09:47:31.312 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@59ed3e6c
[DEBUG] 2025-10-15 09:47:31.312 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@7cd4a4d7
[DEBUG] 2025-10-15 09:47:31.312 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@317e9c3c
[DEBUG] 2025-10-15 09:47:31.312 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@18da4dd
[DEBUG] 2025-10-15 09:47:31.312 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@18da4dd
[DEBUG] 2025-10-15 09:47:31.312 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@31a3f4de
[DEBUG] 2025-10-15 09:47:31.312 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@31a3f4de
[DEBUG] 2025-10-15 09:47:31.312 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@31a3f4de
[DEBUG] 2025-10-15 09:47:31.312 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@68880c21
[DEBUG] 2025-10-15 09:47:31.312 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@2dd2e270
[DEBUG] 2025-10-15 09:47:31.312 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@4195105b
[DEBUG] 2025-10-15 09:47:31.313 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@4195105b
[DEBUG] 2025-10-15 09:47:31.313 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@6f3e19b3
[DEBUG] 2025-10-15 09:47:31.313 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@6f3e19b3
[DEBUG] 2025-10-15 09:47:31.313 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@6f3e19b3
[DEBUG] 2025-10-15 09:47:31.313 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@47ffe971
[DEBUG] 2025-10-15 09:47:31.313 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@47ffe971
[DEBUG] 2025-10-15 09:47:31.313 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@7d04529c
[DEBUG] 2025-10-15 09:47:31.313 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@7d04529c
[DEBUG] 2025-10-15 09:47:31.313 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@14fa92af
[DEBUG] 2025-10-15 09:47:31.314 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@14fa92af
[DEBUG] 2025-10-15 09:47:31.314 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@b16e202
[DEBUG] 2025-10-15 09:47:31.314 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@b16e202
[DEBUG] 2025-10-15 09:47:31.314 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@339a3670
[DEBUG] 2025-10-15 09:47:31.314 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@339a3670
[DEBUG] 2025-10-15 09:47:31.314 [main] BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@6cd5122d
[DEBUG] 2025-10-15 09:47:31.314 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@2c7a8af2
[DEBUG] 2025-10-15 09:47:31.321 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@65c33b92
[DEBUG] 2025-10-15 09:47:31.321 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@65c33b92
[DEBUG] 2025-10-15 09:47:31.323 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@1f11f64e
[DEBUG] 2025-10-15 09:47:31.324 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@2b2f5fcf
[DEBUG] 2025-10-15 09:47:31.324 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@858d8b4
[DEBUG] 2025-10-15 09:47:31.324 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@711d1a52
[DEBUG] 2025-10-15 09:47:31.324 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@612e21b9
[DEBUG] 2025-10-15 09:47:31.324 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@302edb74
[DEBUG] 2025-10-15 09:47:31.324 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@7efd28bd
[DEBUG] 2025-10-15 09:47:31.325 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@672b72ba
[DEBUG] 2025-10-15 09:47:31.325 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@7718a40f
[INFO ] 2025-10-15 09:47:31.369 [main] c3p0 - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3307/hungryBadger_test
[INFO ] 2025-10-15 09:47:31.370 [main] c3p0 - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2025-10-15 09:47:31.370 [main] c3p0 - HHH10001003: Autocommit mode: false
[INFO ] 2025-10-15 09:47:31.508 [main] c3p0 - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2025-10-15 09:47:31.618 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 9.4.0
      major : 9
      minor : 4
[DEBUG] 2025-10-15 09:47:31.618 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2025-10-15 09:47:31.618 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[DEBUG] 2025-10-15 09:47:31.693 [main] dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 9.4
[DEBUG] 2025-10-15 09:47:31.704 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2025-10-15 09:47:31.704 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2025-10-15 09:47:31.725 [main] DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7165d530) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@12f49ca8)
[DEBUG] 2025-10-15 09:47:31.725 [main] DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1fd9893c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1b2df3aa)
[DEBUG] 2025-10-15 09:47:31.726 [main] DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@44be69aa) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7219ac49)
[DEBUG] 2025-10-15 09:47:31.726 [main] DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@21da4b5f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@551e4c6d)
[DEBUG] 2025-10-15 09:47:31.726 [main] DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@625a9c5d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5d1e0fbb)
[DEBUG] 2025-10-15 09:47:31.726 [main] DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2eed37f4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@9b76b60)
[DEBUG] 2025-10-15 09:47:31.726 [main] DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3fb9a67f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@127705e4)
[DEBUG] 2025-10-15 09:47:31.726 [main] DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5562c2c9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@673c4f6e)
[DEBUG] 2025-10-15 09:47:31.726 [main] DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@15c487a8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3f36e8d1)
[DEBUG] 2025-10-15 09:47:31.729 [main] JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2025-10-15 09:47:31.729 [main] JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2025-10-15 09:47:31.729 [main] JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2025-10-15 09:47:31.732 [main] JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2025-10-15 09:47:31.732 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2025-10-15 09:47:31.736 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@1ee27d73
[DEBUG] 2025-10-15 09:47:31.736 [main] BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@1f11f64e`
[DEBUG] 2025-10-15 09:47:31.743 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
[DEBUG] 2025-10-15 09:47:31.743 [main] BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2025-10-15 09:47:31.743 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2025-10-15 09:47:31.748 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2025-10-15 09:47:31.748 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2025-10-15 09:47:31.748 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2025-10-15 09:47:31.748 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2025-10-15 09:47:31.748 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2025-10-15 09:47:31.748 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2025-10-15 09:47:31.749 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2025-10-15 09:47:31.749 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2025-10-15 09:47:31.749 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2025-10-15 09:47:31.750 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5e8507f1] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4bcaa195]
[DEBUG] 2025-10-15 09:47:31.946 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2025-10-15 09:47:31.947 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2025-10-15 09:47:31.953 [main] LocalXmlResourceResolver - Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
[DEBUG] 2025-10-15 09:47:31.954 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2025-10-15 09:47:31.974 [main] factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2025-10-15 09:47:31.976 [main] factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2025-10-15 09:47:31.976 [main] factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2025-10-15 09:47:31.976 [main] factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2025-10-15 09:47:31.976 [main] factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2025-10-15 09:47:31.976 [main] factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2025-10-15 09:47:31.976 [main] factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2025-10-15 09:47:31.976 [main] factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2025-10-15 09:47:31.976 [main] factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2025-10-15 09:47:31.976 [main] factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2025-10-15 09:47:31.976 [main] factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2025-10-15 09:47:31.976 [main] factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2025-10-15 09:47:31.976 [main] factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2025-10-15 09:47:31.976 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[INFO ] 2025-10-15 09:47:31.977 [main] RegionFactoryInitiator - HHH000026: Second-level cache disabled
[DEBUG] 2025-10-15 09:47:31.977 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7c251f90
[DEBUG] 2025-10-15 09:47:31.977 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7c251f90
[DEBUG] 2025-10-15 09:47:31.977 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@7c251f90
[DEBUG] 2025-10-15 09:47:31.977 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@51841ac6
[DEBUG] 2025-10-15 09:47:31.977 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@51841ac6
[DEBUG] 2025-10-15 09:47:31.977 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@5ba26eb0
[DEBUG] 2025-10-15 09:47:31.977 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@5ba26eb0
[DEBUG] 2025-10-15 09:47:31.977 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@435e60ff
[DEBUG] 2025-10-15 09:47:31.977 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@435e60ff
[DEBUG] 2025-10-15 09:47:31.977 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@17d32e9b
[DEBUG] 2025-10-15 09:47:31.977 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@17d32e9b
[DEBUG] 2025-10-15 09:47:31.977 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@17d32e9b
[DEBUG] 2025-10-15 09:47:31.978 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@66f0548d
[DEBUG] 2025-10-15 09:47:31.978 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@66f0548d
[DEBUG] 2025-10-15 09:47:31.978 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@66f0548d
[DEBUG] 2025-10-15 09:47:31.978 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2e6f610d
[DEBUG] 2025-10-15 09:47:31.978 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2e6f610d
[DEBUG] 2025-10-15 09:47:31.978 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@1e86a5a7
[DEBUG] 2025-10-15 09:47:31.978 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@10afe71a
[DEBUG] 2025-10-15 09:47:31.978 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@10afe71a
[DEBUG] 2025-10-15 09:47:31.978 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@741f8dbe
[DEBUG] 2025-10-15 09:47:31.978 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@212dfd39
[DEBUG] 2025-10-15 09:47:31.978 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@a2ddf26
[DEBUG] 2025-10-15 09:47:31.978 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@a2ddf26
[DEBUG] 2025-10-15 09:47:31.978 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@a2ddf26
[DEBUG] 2025-10-15 09:47:31.978 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@65d57e4e
[DEBUG] 2025-10-15 09:47:31.978 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@65d57e4e
[DEBUG] 2025-10-15 09:47:31.978 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@65d57e4e
[DEBUG] 2025-10-15 09:47:31.978 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@6daf7d37
[DEBUG] 2025-10-15 09:47:31.978 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@6daf7d37
[DEBUG] 2025-10-15 09:47:31.979 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@6daf7d37
[DEBUG] 2025-10-15 09:47:31.979 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@23a5818e
[DEBUG] 2025-10-15 09:47:31.979 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@23a5818e
[DEBUG] 2025-10-15 09:47:31.979 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@23a5818e
[DEBUG] 2025-10-15 09:47:31.979 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@4715ae33
[DEBUG] 2025-10-15 09:47:31.979 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@4715ae33
[DEBUG] 2025-10-15 09:47:31.979 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@4715ae33
[DEBUG] 2025-10-15 09:47:31.979 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@9fc9f91
[DEBUG] 2025-10-15 09:47:31.979 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@9fc9f91
[DEBUG] 2025-10-15 09:47:31.979 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@1fac1d5c
[DEBUG] 2025-10-15 09:47:31.979 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@1fac1d5c
[DEBUG] 2025-10-15 09:47:31.979 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@108a46d6
[DEBUG] 2025-10-15 09:47:31.979 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@108a46d6
[DEBUG] 2025-10-15 09:47:31.979 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@108a46d6
[DEBUG] 2025-10-15 09:47:31.979 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@7a8406c2
[DEBUG] 2025-10-15 09:47:31.979 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@17690e14
[DEBUG] 2025-10-15 09:47:31.979 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@17690e14
[DEBUG] 2025-10-15 09:47:31.980 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@6850b758
[DEBUG] 2025-10-15 09:47:31.980 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@2a2ef072
[DEBUG] 2025-10-15 09:47:31.980 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@2a2ef072
[DEBUG] 2025-10-15 09:47:31.980 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@2a2ef072
[DEBUG] 2025-10-15 09:47:31.980 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@704641e3
[DEBUG] 2025-10-15 09:47:31.980 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@2f00f851
[DEBUG] 2025-10-15 09:47:31.980 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@4207609e
[DEBUG] 2025-10-15 09:47:31.980 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@1f77b5cc
[DEBUG] 2025-10-15 09:47:31.980 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@1f77b5cc
[DEBUG] 2025-10-15 09:47:31.980 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@5d7ca698
[DEBUG] 2025-10-15 09:47:31.980 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@5d7ca698
[DEBUG] 2025-10-15 09:47:31.980 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@75961f16
[DEBUG] 2025-10-15 09:47:31.980 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@c6c82aa
[DEBUG] 2025-10-15 09:47:31.980 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@2e179f3e
[DEBUG] 2025-10-15 09:47:31.981 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@16e7b402
[DEBUG] 2025-10-15 09:47:31.981 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@534c6767
[DEBUG] 2025-10-15 09:47:31.981 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@3bddc676
[DEBUG] 2025-10-15 09:47:31.981 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@29a1505c
[DEBUG] 2025-10-15 09:47:31.981 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@29a1505c
[DEBUG] 2025-10-15 09:47:31.981 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@24db6ce
[DEBUG] 2025-10-15 09:47:31.981 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@24db6ce
[DEBUG] 2025-10-15 09:47:31.981 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@320a8ebf
[DEBUG] 2025-10-15 09:47:31.981 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@320a8ebf
[DEBUG] 2025-10-15 09:47:31.981 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@67b100fe
[DEBUG] 2025-10-15 09:47:31.981 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@67b100fe
[DEBUG] 2025-10-15 09:47:31.981 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@44b18fe4
[DEBUG] 2025-10-15 09:47:31.981 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@44b18fe4
[DEBUG] 2025-10-15 09:47:31.981 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2ba5aa7a
[DEBUG] 2025-10-15 09:47:31.981 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4d3ca6c7
[DEBUG] 2025-10-15 09:47:31.981 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@22e5f96e
[DEBUG] 2025-10-15 09:47:31.981 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@22e5f96e
[DEBUG] 2025-10-15 09:47:31.981 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@6a638c79
[DEBUG] 2025-10-15 09:47:31.981 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6c931d35
[DEBUG] 2025-10-15 09:47:31.982 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@44b194fe
[DEBUG] 2025-10-15 09:47:31.982 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@49122b8f
[DEBUG] 2025-10-15 09:47:31.982 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@49122b8f
[DEBUG] 2025-10-15 09:47:31.982 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3fe46690
[DEBUG] 2025-10-15 09:47:31.982 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4beabeec
[DEBUG] 2025-10-15 09:47:31.982 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@3b4d50b
[DEBUG] 2025-10-15 09:47:31.982 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@3b4d50b
[DEBUG] 2025-10-15 09:47:31.982 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@5b22d8a1
[DEBUG] 2025-10-15 09:47:31.982 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@5b22d8a1
[DEBUG] 2025-10-15 09:47:31.982 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@476ee5b3
[DEBUG] 2025-10-15 09:47:31.982 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@476ee5b3
[DEBUG] 2025-10-15 09:47:31.982 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@476ee5b3
[DEBUG] 2025-10-15 09:47:31.982 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@59ed3e6c
[DEBUG] 2025-10-15 09:47:31.982 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@59ed3e6c
[DEBUG] 2025-10-15 09:47:31.982 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@59ed3e6c
[DEBUG] 2025-10-15 09:47:31.982 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@7cd4a4d7
[DEBUG] 2025-10-15 09:47:31.982 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@317e9c3c
[DEBUG] 2025-10-15 09:47:31.982 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@18da4dd
[DEBUG] 2025-10-15 09:47:31.982 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@18da4dd
[DEBUG] 2025-10-15 09:47:31.983 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@31a3f4de
[DEBUG] 2025-10-15 09:47:31.983 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@31a3f4de
[DEBUG] 2025-10-15 09:47:31.983 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@31a3f4de
[DEBUG] 2025-10-15 09:47:31.983 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@68880c21
[DEBUG] 2025-10-15 09:47:31.983 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@2dd2e270
[DEBUG] 2025-10-15 09:47:31.983 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@4195105b
[DEBUG] 2025-10-15 09:47:31.983 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@4195105b
[DEBUG] 2025-10-15 09:47:31.983 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@6f3e19b3
[DEBUG] 2025-10-15 09:47:31.983 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@6f3e19b3
[DEBUG] 2025-10-15 09:47:31.983 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@6f3e19b3
[DEBUG] 2025-10-15 09:47:31.983 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@47ffe971
[DEBUG] 2025-10-15 09:47:31.983 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@47ffe971
[DEBUG] 2025-10-15 09:47:31.983 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@7d04529c
[DEBUG] 2025-10-15 09:47:31.983 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@7d04529c
[DEBUG] 2025-10-15 09:47:31.983 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@14fa92af
[DEBUG] 2025-10-15 09:47:31.983 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@14fa92af
[DEBUG] 2025-10-15 09:47:31.983 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@b16e202
[DEBUG] 2025-10-15 09:47:31.983 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@b16e202
[DEBUG] 2025-10-15 09:47:31.983 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@339a3670
[DEBUG] 2025-10-15 09:47:31.983 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@339a3670
[DEBUG] 2025-10-15 09:47:31.984 [main] BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@6cd5122d
[DEBUG] 2025-10-15 09:47:31.984 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@2c7a8af2
[DEBUG] 2025-10-15 09:47:31.984 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@65c33b92
[DEBUG] 2025-10-15 09:47:31.984 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@65c33b92
[DEBUG] 2025-10-15 09:47:31.984 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@1f11f64e
[DEBUG] 2025-10-15 09:47:31.984 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@22c53d82
[DEBUG] 2025-10-15 09:47:31.984 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@3a6045c6
[DEBUG] 2025-10-15 09:47:31.984 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@68d6d775
[DEBUG] 2025-10-15 09:47:31.984 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@b67cc70
[DEBUG] 2025-10-15 09:47:31.984 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@45c9b3
[DEBUG] 2025-10-15 09:47:31.984 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@38b3f208
[DEBUG] 2025-10-15 09:47:31.984 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@6680f714
[DEBUG] 2025-10-15 09:47:31.984 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@53b1a3f8
[INFO ] 2025-10-15 09:47:31.988 [main] c3p0 - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3307/hungryBadger_test
[INFO ] 2025-10-15 09:47:31.988 [main] c3p0 - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2025-10-15 09:47:31.988 [main] c3p0 - HHH10001003: Autocommit mode: false
[INFO ] 2025-10-15 09:47:32.017 [main] c3p0 - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2025-10-15 09:47:32.037 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 9.4.0
      major : 9
      minor : 4
[DEBUG] 2025-10-15 09:47:32.037 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2025-10-15 09:47:32.037 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[DEBUG] 2025-10-15 09:47:32.039 [main] dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 9.4
[DEBUG] 2025-10-15 09:47:32.039 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2025-10-15 09:47:32.039 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2025-10-15 09:47:32.041 [main] DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@58af5076) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@49469ffa)
[DEBUG] 2025-10-15 09:47:32.041 [main] DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4d9754a8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7a3b7122)
[DEBUG] 2025-10-15 09:47:32.041 [main] DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@58b5a2f3) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@25f15f50)
[DEBUG] 2025-10-15 09:47:32.041 [main] DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@52b46d52) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7327a447)
[DEBUG] 2025-10-15 09:47:32.041 [main] DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@67022ea) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2954f6ab)
[DEBUG] 2025-10-15 09:47:32.041 [main] DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@58fbd02e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@163042ea)
[DEBUG] 2025-10-15 09:47:32.041 [main] DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@11d045b4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1fbf088b)
[DEBUG] 2025-10-15 09:47:32.042 [main] DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1943c1f2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@d70f722)
[DEBUG] 2025-10-15 09:47:32.042 [main] DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1e1eeedd) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@798256c5)
[DEBUG] 2025-10-15 09:47:32.042 [main] JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2025-10-15 09:47:32.042 [main] JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2025-10-15 09:47:32.042 [main] JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2025-10-15 09:47:32.042 [main] JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2025-10-15 09:47:32.042 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2025-10-15 09:47:32.042 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@7ec95456
[DEBUG] 2025-10-15 09:47:32.042 [main] BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@1f11f64e`
[DEBUG] 2025-10-15 09:47:32.044 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@5(java.time.Duration,2)
[DEBUG] 2025-10-15 09:47:32.044 [main] BasicTypeRegistry - Adding type registration Duration -> basicType@5(java.time.Duration,2)
[DEBUG] 2025-10-15 09:47:32.044 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@5(java.time.Duration,2)
[DEBUG] 2025-10-15 09:47:32.044 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@6(java.time.OffsetDateTime,3003)
[DEBUG] 2025-10-15 09:47:32.044 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@6(java.time.OffsetDateTime,3003)
[DEBUG] 2025-10-15 09:47:32.044 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@6(java.time.OffsetDateTime,3003)
[DEBUG] 2025-10-15 09:47:32.044 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@7(java.time.ZonedDateTime,3003)
[DEBUG] 2025-10-15 09:47:32.044 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@7(java.time.ZonedDateTime,3003)
[DEBUG] 2025-10-15 09:47:32.044 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@7(java.time.ZonedDateTime,3003)
[DEBUG] 2025-10-15 09:47:32.045 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@8(java.time.OffsetTime,3007)
[DEBUG] 2025-10-15 09:47:32.045 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@8(java.time.OffsetTime,3007)
[DEBUG] 2025-10-15 09:47:32.045 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@8(java.time.OffsetTime,3007)
[DEBUG] 2025-10-15 09:47:32.045 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@748a654a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1d8b0500]
[DEBUG] 2025-10-15 09:47:32.157 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2025-10-15 09:47:32.157 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2025-10-15 09:47:32.163 [main] LocalXmlResourceResolver - Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
[DEBUG] 2025-10-15 09:47:32.164 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2025-10-15 09:47:32.179 [main] factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2025-10-15 09:47:32.180 [main] factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2025-10-15 09:47:32.180 [main] factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2025-10-15 09:47:32.180 [main] factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2025-10-15 09:47:32.180 [main] factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2025-10-15 09:47:32.180 [main] factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2025-10-15 09:47:32.180 [main] factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2025-10-15 09:47:32.180 [main] factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2025-10-15 09:47:32.180 [main] factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2025-10-15 09:47:32.180 [main] factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2025-10-15 09:47:32.180 [main] factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2025-10-15 09:47:32.180 [main] factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2025-10-15 09:47:32.181 [main] factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2025-10-15 09:47:32.181 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[INFO ] 2025-10-15 09:47:32.181 [main] RegionFactoryInitiator - HHH000026: Second-level cache disabled
[DEBUG] 2025-10-15 09:47:32.181 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7c251f90
[DEBUG] 2025-10-15 09:47:32.181 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7c251f90
[DEBUG] 2025-10-15 09:47:32.181 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@7c251f90
[DEBUG] 2025-10-15 09:47:32.181 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@51841ac6
[DEBUG] 2025-10-15 09:47:32.181 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@51841ac6
[DEBUG] 2025-10-15 09:47:32.181 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@5ba26eb0
[DEBUG] 2025-10-15 09:47:32.181 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@5ba26eb0
[DEBUG] 2025-10-15 09:47:32.181 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@435e60ff
[DEBUG] 2025-10-15 09:47:32.181 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@435e60ff
[DEBUG] 2025-10-15 09:47:32.182 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@17d32e9b
[DEBUG] 2025-10-15 09:47:32.182 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@17d32e9b
[DEBUG] 2025-10-15 09:47:32.182 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@17d32e9b
[DEBUG] 2025-10-15 09:47:32.182 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@66f0548d
[DEBUG] 2025-10-15 09:47:32.182 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@66f0548d
[DEBUG] 2025-10-15 09:47:32.182 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@66f0548d
[DEBUG] 2025-10-15 09:47:32.182 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2e6f610d
[DEBUG] 2025-10-15 09:47:32.182 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2e6f610d
[DEBUG] 2025-10-15 09:47:32.182 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@1e86a5a7
[DEBUG] 2025-10-15 09:47:32.182 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@10afe71a
[DEBUG] 2025-10-15 09:47:32.182 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@10afe71a
[DEBUG] 2025-10-15 09:47:32.182 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@741f8dbe
[DEBUG] 2025-10-15 09:47:32.182 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@212dfd39
[DEBUG] 2025-10-15 09:47:32.182 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@a2ddf26
[DEBUG] 2025-10-15 09:47:32.182 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@a2ddf26
[DEBUG] 2025-10-15 09:47:32.182 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@a2ddf26
[DEBUG] 2025-10-15 09:47:32.182 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@65d57e4e
[DEBUG] 2025-10-15 09:47:32.182 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@65d57e4e
[DEBUG] 2025-10-15 09:47:32.182 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@65d57e4e
[DEBUG] 2025-10-15 09:47:32.182 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@6daf7d37
[DEBUG] 2025-10-15 09:47:32.182 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@6daf7d37
[DEBUG] 2025-10-15 09:47:32.183 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@6daf7d37
[DEBUG] 2025-10-15 09:47:32.183 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@23a5818e
[DEBUG] 2025-10-15 09:47:32.183 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@23a5818e
[DEBUG] 2025-10-15 09:47:32.183 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@23a5818e
[DEBUG] 2025-10-15 09:47:32.183 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@4715ae33
[DEBUG] 2025-10-15 09:47:32.183 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@4715ae33
[DEBUG] 2025-10-15 09:47:32.183 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@4715ae33
[DEBUG] 2025-10-15 09:47:32.183 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@9fc9f91
[DEBUG] 2025-10-15 09:47:32.183 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@9fc9f91
[DEBUG] 2025-10-15 09:47:32.183 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@1fac1d5c
[DEBUG] 2025-10-15 09:47:32.183 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@1fac1d5c
[DEBUG] 2025-10-15 09:47:32.183 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@108a46d6
[DEBUG] 2025-10-15 09:47:32.183 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@108a46d6
[DEBUG] 2025-10-15 09:47:32.183 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@108a46d6
[DEBUG] 2025-10-15 09:47:32.183 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@7a8406c2
[DEBUG] 2025-10-15 09:47:32.183 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@17690e14
[DEBUG] 2025-10-15 09:47:32.183 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@17690e14
[DEBUG] 2025-10-15 09:47:32.183 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@6850b758
[DEBUG] 2025-10-15 09:47:32.183 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@2a2ef072
[DEBUG] 2025-10-15 09:47:32.184 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@2a2ef072
[DEBUG] 2025-10-15 09:47:32.184 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@2a2ef072
[DEBUG] 2025-10-15 09:47:32.184 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@704641e3
[DEBUG] 2025-10-15 09:47:32.184 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@2f00f851
[DEBUG] 2025-10-15 09:47:32.184 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@4207609e
[DEBUG] 2025-10-15 09:47:32.184 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@1f77b5cc
[DEBUG] 2025-10-15 09:47:32.184 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@1f77b5cc
[DEBUG] 2025-10-15 09:47:32.184 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@5d7ca698
[DEBUG] 2025-10-15 09:47:32.184 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@5d7ca698
[DEBUG] 2025-10-15 09:47:32.184 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@75961f16
[DEBUG] 2025-10-15 09:47:32.184 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@c6c82aa
[DEBUG] 2025-10-15 09:47:32.184 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@2e179f3e
[DEBUG] 2025-10-15 09:47:32.184 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@16e7b402
[DEBUG] 2025-10-15 09:47:32.184 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@534c6767
[DEBUG] 2025-10-15 09:47:32.184 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@3bddc676
[DEBUG] 2025-10-15 09:47:32.184 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@29a1505c
[DEBUG] 2025-10-15 09:47:32.184 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@29a1505c
[DEBUG] 2025-10-15 09:47:32.184 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@24db6ce
[DEBUG] 2025-10-15 09:47:32.184 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@24db6ce
[DEBUG] 2025-10-15 09:47:32.184 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@320a8ebf
[DEBUG] 2025-10-15 09:47:32.184 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@320a8ebf
[DEBUG] 2025-10-15 09:47:32.184 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@67b100fe
[DEBUG] 2025-10-15 09:47:32.184 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@67b100fe
[DEBUG] 2025-10-15 09:47:32.185 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@44b18fe4
[DEBUG] 2025-10-15 09:47:32.185 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@44b18fe4
[DEBUG] 2025-10-15 09:47:32.185 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2ba5aa7a
[DEBUG] 2025-10-15 09:47:32.185 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4d3ca6c7
[DEBUG] 2025-10-15 09:47:32.185 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@22e5f96e
[DEBUG] 2025-10-15 09:47:32.185 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@22e5f96e
[DEBUG] 2025-10-15 09:47:32.185 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@6a638c79
[DEBUG] 2025-10-15 09:47:32.185 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6c931d35
[DEBUG] 2025-10-15 09:47:32.185 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@44b194fe
[DEBUG] 2025-10-15 09:47:32.185 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@49122b8f
[DEBUG] 2025-10-15 09:47:32.185 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@49122b8f
[DEBUG] 2025-10-15 09:47:32.185 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3fe46690
[DEBUG] 2025-10-15 09:47:32.185 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4beabeec
[DEBUG] 2025-10-15 09:47:32.185 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@3b4d50b
[DEBUG] 2025-10-15 09:47:32.185 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@3b4d50b
[DEBUG] 2025-10-15 09:47:32.185 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@5b22d8a1
[DEBUG] 2025-10-15 09:47:32.185 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@5b22d8a1
[DEBUG] 2025-10-15 09:47:32.185 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@476ee5b3
[DEBUG] 2025-10-15 09:47:32.185 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@476ee5b3
[DEBUG] 2025-10-15 09:47:32.186 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@476ee5b3
[DEBUG] 2025-10-15 09:47:32.186 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@59ed3e6c
[DEBUG] 2025-10-15 09:47:32.186 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@59ed3e6c
[DEBUG] 2025-10-15 09:47:32.186 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@59ed3e6c
[DEBUG] 2025-10-15 09:47:32.186 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@7cd4a4d7
[DEBUG] 2025-10-15 09:47:32.186 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@317e9c3c
[DEBUG] 2025-10-15 09:47:32.186 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@18da4dd
[DEBUG] 2025-10-15 09:47:32.186 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@18da4dd
[DEBUG] 2025-10-15 09:47:32.186 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@31a3f4de
[DEBUG] 2025-10-15 09:47:32.186 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@31a3f4de
[DEBUG] 2025-10-15 09:47:32.186 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@31a3f4de
[DEBUG] 2025-10-15 09:47:32.186 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@68880c21
[DEBUG] 2025-10-15 09:47:32.186 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@2dd2e270
[DEBUG] 2025-10-15 09:47:32.186 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@4195105b
[DEBUG] 2025-10-15 09:47:32.186 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@4195105b
[DEBUG] 2025-10-15 09:47:32.186 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@6f3e19b3
[DEBUG] 2025-10-15 09:47:32.186 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@6f3e19b3
[DEBUG] 2025-10-15 09:47:32.186 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@6f3e19b3
[DEBUG] 2025-10-15 09:47:32.187 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@47ffe971
[DEBUG] 2025-10-15 09:47:32.187 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@47ffe971
[DEBUG] 2025-10-15 09:47:32.187 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@7d04529c
[DEBUG] 2025-10-15 09:47:32.187 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@7d04529c
[DEBUG] 2025-10-15 09:47:32.187 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@14fa92af
[DEBUG] 2025-10-15 09:47:32.187 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@14fa92af
[DEBUG] 2025-10-15 09:47:32.187 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@b16e202
[DEBUG] 2025-10-15 09:47:32.187 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@b16e202
[DEBUG] 2025-10-15 09:47:32.187 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@339a3670
[DEBUG] 2025-10-15 09:47:32.187 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@339a3670
[DEBUG] 2025-10-15 09:47:32.187 [main] BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@6cd5122d
[DEBUG] 2025-10-15 09:47:32.187 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@2c7a8af2
[DEBUG] 2025-10-15 09:47:32.187 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@65c33b92
[DEBUG] 2025-10-15 09:47:32.187 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@65c33b92
[DEBUG] 2025-10-15 09:47:32.187 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@1f11f64e
[DEBUG] 2025-10-15 09:47:32.187 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@3b55dd15
[DEBUG] 2025-10-15 09:47:32.187 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@f3560d4
[DEBUG] 2025-10-15 09:47:32.187 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@3ba3d4b6
[DEBUG] 2025-10-15 09:47:32.187 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@51b77cdf
[DEBUG] 2025-10-15 09:47:32.187 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@441fbe89
[DEBUG] 2025-10-15 09:47:32.187 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@6088451e
[DEBUG] 2025-10-15 09:47:32.187 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@45ab3bdd
[DEBUG] 2025-10-15 09:47:32.187 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@2f10f633
[INFO ] 2025-10-15 09:47:32.191 [main] c3p0 - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3307/hungryBadger_test
[INFO ] 2025-10-15 09:47:32.191 [main] c3p0 - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2025-10-15 09:47:32.191 [main] c3p0 - HHH10001003: Autocommit mode: false
[INFO ] 2025-10-15 09:47:32.216 [main] c3p0 - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2025-10-15 09:47:32.232 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 9.4.0
      major : 9
      minor : 4
[DEBUG] 2025-10-15 09:47:32.232 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2025-10-15 09:47:32.233 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[DEBUG] 2025-10-15 09:47:32.235 [main] dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 9.4
[DEBUG] 2025-10-15 09:47:32.235 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2025-10-15 09:47:32.235 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2025-10-15 09:47:32.237 [main] DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@27abb6ca) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@696db620)
[DEBUG] 2025-10-15 09:47:32.237 [main] DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6968c1d6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7d986d83)
[DEBUG] 2025-10-15 09:47:32.237 [main] DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@77f991c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3a7e365)
[DEBUG] 2025-10-15 09:47:32.237 [main] DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2ceee4b6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@12a470dd)
[DEBUG] 2025-10-15 09:47:32.237 [main] DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6968bcec) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5568c66f)
[DEBUG] 2025-10-15 09:47:32.237 [main] DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@e784320) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3f6bf8aa)
[DEBUG] 2025-10-15 09:47:32.237 [main] DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@13c8ac77) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4bdf)
[DEBUG] 2025-10-15 09:47:32.237 [main] DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4cad79bc) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2c63762b)
[DEBUG] 2025-10-15 09:47:32.237 [main] DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7a9eccc4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@78422efb)
[DEBUG] 2025-10-15 09:47:32.237 [main] JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2025-10-15 09:47:32.237 [main] JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2025-10-15 09:47:32.237 [main] JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2025-10-15 09:47:32.237 [main] JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2025-10-15 09:47:32.238 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2025-10-15 09:47:32.238 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@5f05c8d6
[DEBUG] 2025-10-15 09:47:32.238 [main] BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@1f11f64e`
[DEBUG] 2025-10-15 09:47:32.239 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@9(java.time.Duration,2)
[DEBUG] 2025-10-15 09:47:32.239 [main] BasicTypeRegistry - Adding type registration Duration -> basicType@9(java.time.Duration,2)
[DEBUG] 2025-10-15 09:47:32.239 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@9(java.time.Duration,2)
[DEBUG] 2025-10-15 09:47:32.240 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@10(java.time.OffsetDateTime,3003)
[DEBUG] 2025-10-15 09:47:32.240 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@10(java.time.OffsetDateTime,3003)
[DEBUG] 2025-10-15 09:47:32.240 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@10(java.time.OffsetDateTime,3003)
[DEBUG] 2025-10-15 09:47:32.240 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@11(java.time.ZonedDateTime,3003)
[DEBUG] 2025-10-15 09:47:32.240 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@11(java.time.ZonedDateTime,3003)
[DEBUG] 2025-10-15 09:47:32.240 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@11(java.time.ZonedDateTime,3003)
[DEBUG] 2025-10-15 09:47:32.240 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@12(java.time.OffsetTime,3007)
[DEBUG] 2025-10-15 09:47:32.240 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@12(java.time.OffsetTime,3007)
[DEBUG] 2025-10-15 09:47:32.240 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@12(java.time.OffsetTime,3007)
[DEBUG] 2025-10-15 09:47:32.240 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@68e02f33] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@64942607]
[DEBUG] 2025-10-15 09:47:32.359 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2025-10-15 09:47:32.359 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2025-10-15 09:47:32.364 [main] LocalXmlResourceResolver - Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
[DEBUG] 2025-10-15 09:47:32.365 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2025-10-15 09:47:32.380 [main] factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2025-10-15 09:47:32.381 [main] factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2025-10-15 09:47:32.381 [main] factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2025-10-15 09:47:32.381 [main] factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2025-10-15 09:47:32.381 [main] factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2025-10-15 09:47:32.381 [main] factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2025-10-15 09:47:32.381 [main] factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2025-10-15 09:47:32.381 [main] factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2025-10-15 09:47:32.381 [main] factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2025-10-15 09:47:32.381 [main] factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2025-10-15 09:47:32.381 [main] factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2025-10-15 09:47:32.381 [main] factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2025-10-15 09:47:32.381 [main] factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2025-10-15 09:47:32.383 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[INFO ] 2025-10-15 09:47:32.383 [main] RegionFactoryInitiator - HHH000026: Second-level cache disabled
[DEBUG] 2025-10-15 09:47:32.383 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7c251f90
[DEBUG] 2025-10-15 09:47:32.383 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7c251f90
[DEBUG] 2025-10-15 09:47:32.383 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@7c251f90
[DEBUG] 2025-10-15 09:47:32.383 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@51841ac6
[DEBUG] 2025-10-15 09:47:32.383 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@51841ac6
[DEBUG] 2025-10-15 09:47:32.383 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@5ba26eb0
[DEBUG] 2025-10-15 09:47:32.383 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@5ba26eb0
[DEBUG] 2025-10-15 09:47:32.383 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@435e60ff
[DEBUG] 2025-10-15 09:47:32.383 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@435e60ff
[DEBUG] 2025-10-15 09:47:32.383 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@17d32e9b
[DEBUG] 2025-10-15 09:47:32.383 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@17d32e9b
[DEBUG] 2025-10-15 09:47:32.383 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@17d32e9b
[DEBUG] 2025-10-15 09:47:32.383 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@66f0548d
[DEBUG] 2025-10-15 09:47:32.383 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@66f0548d
[DEBUG] 2025-10-15 09:47:32.383 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@66f0548d
[DEBUG] 2025-10-15 09:47:32.383 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2e6f610d
[DEBUG] 2025-10-15 09:47:32.383 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2e6f610d
[DEBUG] 2025-10-15 09:47:32.384 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@1e86a5a7
[DEBUG] 2025-10-15 09:47:32.384 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@10afe71a
[DEBUG] 2025-10-15 09:47:32.384 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@10afe71a
[DEBUG] 2025-10-15 09:47:32.384 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@741f8dbe
[DEBUG] 2025-10-15 09:47:32.384 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@212dfd39
[DEBUG] 2025-10-15 09:47:32.384 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@a2ddf26
[DEBUG] 2025-10-15 09:47:32.384 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@a2ddf26
[DEBUG] 2025-10-15 09:47:32.384 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@a2ddf26
[DEBUG] 2025-10-15 09:47:32.384 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@65d57e4e
[DEBUG] 2025-10-15 09:47:32.384 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@65d57e4e
[DEBUG] 2025-10-15 09:47:32.384 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@65d57e4e
[DEBUG] 2025-10-15 09:47:32.384 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@6daf7d37
[DEBUG] 2025-10-15 09:47:32.384 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@6daf7d37
[DEBUG] 2025-10-15 09:47:32.384 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@6daf7d37
[DEBUG] 2025-10-15 09:47:32.384 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@23a5818e
[DEBUG] 2025-10-15 09:47:32.384 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@23a5818e
[DEBUG] 2025-10-15 09:47:32.384 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@23a5818e
[DEBUG] 2025-10-15 09:47:32.384 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@4715ae33
[DEBUG] 2025-10-15 09:47:32.384 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@4715ae33
[DEBUG] 2025-10-15 09:47:32.384 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@4715ae33
[DEBUG] 2025-10-15 09:47:32.384 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@9fc9f91
[DEBUG] 2025-10-15 09:47:32.384 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@9fc9f91
[DEBUG] 2025-10-15 09:47:32.384 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@1fac1d5c
[DEBUG] 2025-10-15 09:47:32.384 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@1fac1d5c
[DEBUG] 2025-10-15 09:47:32.384 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@108a46d6
[DEBUG] 2025-10-15 09:47:32.384 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@108a46d6
[DEBUG] 2025-10-15 09:47:32.385 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@108a46d6
[DEBUG] 2025-10-15 09:47:32.385 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@7a8406c2
[DEBUG] 2025-10-15 09:47:32.385 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@17690e14
[DEBUG] 2025-10-15 09:47:32.385 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@17690e14
[DEBUG] 2025-10-15 09:47:32.385 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@6850b758
[DEBUG] 2025-10-15 09:47:32.385 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@2a2ef072
[DEBUG] 2025-10-15 09:47:32.385 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@2a2ef072
[DEBUG] 2025-10-15 09:47:32.385 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@2a2ef072
[DEBUG] 2025-10-15 09:47:32.385 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@704641e3
[DEBUG] 2025-10-15 09:47:32.385 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@2f00f851
[DEBUG] 2025-10-15 09:47:32.385 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@4207609e
[DEBUG] 2025-10-15 09:47:32.385 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@1f77b5cc
[DEBUG] 2025-10-15 09:47:32.385 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@1f77b5cc
[DEBUG] 2025-10-15 09:47:32.385 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@5d7ca698
[DEBUG] 2025-10-15 09:47:32.385 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@5d7ca698
[DEBUG] 2025-10-15 09:47:32.385 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@75961f16
[DEBUG] 2025-10-15 09:47:32.385 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@c6c82aa
[DEBUG] 2025-10-15 09:47:32.385 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@2e179f3e
[DEBUG] 2025-10-15 09:47:32.385 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@16e7b402
[DEBUG] 2025-10-15 09:47:32.385 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@534c6767
[DEBUG] 2025-10-15 09:47:32.385 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@3bddc676
[DEBUG] 2025-10-15 09:47:32.385 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@29a1505c
[DEBUG] 2025-10-15 09:47:32.385 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@29a1505c
[DEBUG] 2025-10-15 09:47:32.385 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@24db6ce
[DEBUG] 2025-10-15 09:47:32.385 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@24db6ce
[DEBUG] 2025-10-15 09:47:32.385 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@320a8ebf
[DEBUG] 2025-10-15 09:47:32.385 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@320a8ebf
[DEBUG] 2025-10-15 09:47:32.386 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@67b100fe
[DEBUG] 2025-10-15 09:47:32.386 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@67b100fe
[DEBUG] 2025-10-15 09:47:32.386 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@44b18fe4
[DEBUG] 2025-10-15 09:47:32.386 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@44b18fe4
[DEBUG] 2025-10-15 09:47:32.386 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2ba5aa7a
[DEBUG] 2025-10-15 09:47:32.386 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4d3ca6c7
[DEBUG] 2025-10-15 09:47:32.386 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@22e5f96e
[DEBUG] 2025-10-15 09:47:32.386 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@22e5f96e
[DEBUG] 2025-10-15 09:47:32.386 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@6a638c79
[DEBUG] 2025-10-15 09:47:32.386 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6c931d35
[DEBUG] 2025-10-15 09:47:32.386 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@44b194fe
[DEBUG] 2025-10-15 09:47:32.386 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@49122b8f
[DEBUG] 2025-10-15 09:47:32.386 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@49122b8f
[DEBUG] 2025-10-15 09:47:32.386 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3fe46690
[DEBUG] 2025-10-15 09:47:32.386 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4beabeec
[DEBUG] 2025-10-15 09:47:32.386 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@3b4d50b
[DEBUG] 2025-10-15 09:47:32.386 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@3b4d50b
[DEBUG] 2025-10-15 09:47:32.386 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@5b22d8a1
[DEBUG] 2025-10-15 09:47:32.386 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@5b22d8a1
[DEBUG] 2025-10-15 09:47:32.386 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@476ee5b3
[DEBUG] 2025-10-15 09:47:32.386 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@476ee5b3
[DEBUG] 2025-10-15 09:47:32.386 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@476ee5b3
[DEBUG] 2025-10-15 09:47:32.386 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@59ed3e6c
[DEBUG] 2025-10-15 09:47:32.386 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@59ed3e6c
[DEBUG] 2025-10-15 09:47:32.386 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@59ed3e6c
[DEBUG] 2025-10-15 09:47:32.386 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@7cd4a4d7
[DEBUG] 2025-10-15 09:47:32.386 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@317e9c3c
[DEBUG] 2025-10-15 09:47:32.387 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@18da4dd
[DEBUG] 2025-10-15 09:47:32.387 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@18da4dd
[DEBUG] 2025-10-15 09:47:32.387 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@31a3f4de
[DEBUG] 2025-10-15 09:47:32.387 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@31a3f4de
[DEBUG] 2025-10-15 09:47:32.387 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@31a3f4de
[DEBUG] 2025-10-15 09:47:32.387 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@68880c21
[DEBUG] 2025-10-15 09:47:32.387 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@2dd2e270
[DEBUG] 2025-10-15 09:47:32.387 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@4195105b
[DEBUG] 2025-10-15 09:47:32.387 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@4195105b
[DEBUG] 2025-10-15 09:47:32.387 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@6f3e19b3
[DEBUG] 2025-10-15 09:47:32.387 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@6f3e19b3
[DEBUG] 2025-10-15 09:47:32.387 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@6f3e19b3
[DEBUG] 2025-10-15 09:47:32.387 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@47ffe971
[DEBUG] 2025-10-15 09:47:32.387 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@47ffe971
[DEBUG] 2025-10-15 09:47:32.387 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@7d04529c
[DEBUG] 2025-10-15 09:47:32.387 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@7d04529c
[DEBUG] 2025-10-15 09:47:32.387 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@14fa92af
[DEBUG] 2025-10-15 09:47:32.387 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@14fa92af
[DEBUG] 2025-10-15 09:47:32.387 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@b16e202
[DEBUG] 2025-10-15 09:47:32.387 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@b16e202
[DEBUG] 2025-10-15 09:47:32.387 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@339a3670
[DEBUG] 2025-10-15 09:47:32.387 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@339a3670
[DEBUG] 2025-10-15 09:47:32.387 [main] BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@6cd5122d
[DEBUG] 2025-10-15 09:47:32.387 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@2c7a8af2
[DEBUG] 2025-10-15 09:47:32.387 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@65c33b92
[DEBUG] 2025-10-15 09:47:32.387 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@65c33b92
[DEBUG] 2025-10-15 09:47:32.387 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@1f11f64e
[DEBUG] 2025-10-15 09:47:32.387 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@60a7e509
[DEBUG] 2025-10-15 09:47:32.387 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@2e13f304
[DEBUG] 2025-10-15 09:47:32.388 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@787508ca
[DEBUG] 2025-10-15 09:47:32.388 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@3d24420b
[DEBUG] 2025-10-15 09:47:32.388 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@6274670b
[DEBUG] 2025-10-15 09:47:32.388 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@53ce2392
[DEBUG] 2025-10-15 09:47:32.388 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@32d5279
[DEBUG] 2025-10-15 09:47:32.388 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@1c067c0d
[INFO ] 2025-10-15 09:47:32.391 [main] c3p0 - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3307/hungryBadger_test
[INFO ] 2025-10-15 09:47:32.391 [main] c3p0 - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2025-10-15 09:47:32.392 [main] c3p0 - HHH10001003: Autocommit mode: false
[INFO ] 2025-10-15 09:47:32.416 [main] c3p0 - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2025-10-15 09:47:32.432 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 9.4.0
      major : 9
      minor : 4
[DEBUG] 2025-10-15 09:47:32.432 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2025-10-15 09:47:32.432 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[DEBUG] 2025-10-15 09:47:32.433 [main] dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 9.4
[DEBUG] 2025-10-15 09:47:32.434 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2025-10-15 09:47:32.434 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2025-10-15 09:47:32.435 [main] DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@294f9d50) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@27443560)
[DEBUG] 2025-10-15 09:47:32.435 [main] DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3ddb774f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2582b0ef)
[DEBUG] 2025-10-15 09:47:32.435 [main] DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@70721c12) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@769bd849)
[DEBUG] 2025-10-15 09:47:32.435 [main] DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@101ca8da) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@20a967fe)
[DEBUG] 2025-10-15 09:47:32.435 [main] DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@405b6d75) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@682abca7)
[DEBUG] 2025-10-15 09:47:32.435 [main] DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1d858300) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@76f881d9)
[DEBUG] 2025-10-15 09:47:32.436 [main] DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6dd36ab6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@50a13c2f)
[DEBUG] 2025-10-15 09:47:32.436 [main] DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@610d28b8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@53c99b09)
[DEBUG] 2025-10-15 09:47:32.436 [main] DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2539cd1c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7c20cdd0)
[DEBUG] 2025-10-15 09:47:32.436 [main] JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2025-10-15 09:47:32.436 [main] JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2025-10-15 09:47:32.436 [main] JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2025-10-15 09:47:32.436 [main] JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2025-10-15 09:47:32.436 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2025-10-15 09:47:32.436 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@74606204
[DEBUG] 2025-10-15 09:47:32.436 [main] BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@1f11f64e`
[DEBUG] 2025-10-15 09:47:32.438 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@13(java.time.Duration,2)
[DEBUG] 2025-10-15 09:47:32.438 [main] BasicTypeRegistry - Adding type registration Duration -> basicType@13(java.time.Duration,2)
[DEBUG] 2025-10-15 09:47:32.438 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@13(java.time.Duration,2)
[DEBUG] 2025-10-15 09:47:32.438 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@14(java.time.OffsetDateTime,3003)
[DEBUG] 2025-10-15 09:47:32.438 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@14(java.time.OffsetDateTime,3003)
[DEBUG] 2025-10-15 09:47:32.438 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@14(java.time.OffsetDateTime,3003)
[DEBUG] 2025-10-15 09:47:32.438 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@15(java.time.ZonedDateTime,3003)
[DEBUG] 2025-10-15 09:47:32.438 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@15(java.time.ZonedDateTime,3003)
[DEBUG] 2025-10-15 09:47:32.438 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@15(java.time.ZonedDateTime,3003)
[DEBUG] 2025-10-15 09:47:32.438 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@16(java.time.OffsetTime,3007)
[DEBUG] 2025-10-15 09:47:32.438 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@16(java.time.OffsetTime,3007)
[DEBUG] 2025-10-15 09:47:32.438 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@16(java.time.OffsetTime,3007)
[DEBUG] 2025-10-15 09:47:32.439 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6b6eae52] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@d4df0e]
[DEBUG] 2025-10-15 09:47:32.561 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2025-10-15 09:47:32.561 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2025-10-15 09:47:32.567 [main] LocalXmlResourceResolver - Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
[DEBUG] 2025-10-15 09:47:32.568 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2025-10-15 09:47:32.584 [main] factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2025-10-15 09:47:32.584 [main] factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2025-10-15 09:47:32.585 [main] factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2025-10-15 09:47:32.585 [main] factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2025-10-15 09:47:32.585 [main] factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2025-10-15 09:47:32.585 [main] factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2025-10-15 09:47:32.585 [main] factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2025-10-15 09:47:32.585 [main] factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2025-10-15 09:47:32.585 [main] factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2025-10-15 09:47:32.585 [main] factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2025-10-15 09:47:32.585 [main] factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2025-10-15 09:47:32.585 [main] factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2025-10-15 09:47:32.585 [main] factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2025-10-15 09:47:32.585 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[INFO ] 2025-10-15 09:47:32.585 [main] RegionFactoryInitiator - HHH000026: Second-level cache disabled
[DEBUG] 2025-10-15 09:47:32.585 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7c251f90
[DEBUG] 2025-10-15 09:47:32.585 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7c251f90
[DEBUG] 2025-10-15 09:47:32.585 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@7c251f90
[DEBUG] 2025-10-15 09:47:32.585 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@51841ac6
[DEBUG] 2025-10-15 09:47:32.585 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@51841ac6
[DEBUG] 2025-10-15 09:47:32.585 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@5ba26eb0
[DEBUG] 2025-10-15 09:47:32.585 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@5ba26eb0
[DEBUG] 2025-10-15 09:47:32.585 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@435e60ff
[DEBUG] 2025-10-15 09:47:32.585 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@435e60ff
[DEBUG] 2025-10-15 09:47:32.585 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@17d32e9b
[DEBUG] 2025-10-15 09:47:32.585 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@17d32e9b
[DEBUG] 2025-10-15 09:47:32.586 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@17d32e9b
[DEBUG] 2025-10-15 09:47:32.586 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@66f0548d
[DEBUG] 2025-10-15 09:47:32.586 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@66f0548d
[DEBUG] 2025-10-15 09:47:32.586 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@66f0548d
[DEBUG] 2025-10-15 09:47:32.586 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2e6f610d
[DEBUG] 2025-10-15 09:47:32.586 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2e6f610d
[DEBUG] 2025-10-15 09:47:32.586 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@1e86a5a7
[DEBUG] 2025-10-15 09:47:32.586 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@10afe71a
[DEBUG] 2025-10-15 09:47:32.586 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@10afe71a
[DEBUG] 2025-10-15 09:47:32.586 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@741f8dbe
[DEBUG] 2025-10-15 09:47:32.586 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@212dfd39
[DEBUG] 2025-10-15 09:47:32.586 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@a2ddf26
[DEBUG] 2025-10-15 09:47:32.586 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@a2ddf26
[DEBUG] 2025-10-15 09:47:32.586 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@a2ddf26
[DEBUG] 2025-10-15 09:47:32.586 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@65d57e4e
[DEBUG] 2025-10-15 09:47:32.586 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@65d57e4e
[DEBUG] 2025-10-15 09:47:32.586 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@65d57e4e
[DEBUG] 2025-10-15 09:47:32.586 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@6daf7d37
[DEBUG] 2025-10-15 09:47:32.586 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@6daf7d37
[DEBUG] 2025-10-15 09:47:32.586 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@6daf7d37
[DEBUG] 2025-10-15 09:47:32.586 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@23a5818e
[DEBUG] 2025-10-15 09:47:32.586 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@23a5818e
[DEBUG] 2025-10-15 09:47:32.586 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@23a5818e
[DEBUG] 2025-10-15 09:47:32.586 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@4715ae33
[DEBUG] 2025-10-15 09:47:32.586 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@4715ae33
[DEBUG] 2025-10-15 09:47:32.586 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@4715ae33
[DEBUG] 2025-10-15 09:47:32.586 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@9fc9f91
[DEBUG] 2025-10-15 09:47:32.586 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@9fc9f91
[DEBUG] 2025-10-15 09:47:32.586 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@1fac1d5c
[DEBUG] 2025-10-15 09:47:32.586 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@1fac1d5c
[DEBUG] 2025-10-15 09:47:32.586 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@108a46d6
[DEBUG] 2025-10-15 09:47:32.586 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@108a46d6
[DEBUG] 2025-10-15 09:47:32.586 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@108a46d6
[DEBUG] 2025-10-15 09:47:32.586 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@7a8406c2
[DEBUG] 2025-10-15 09:47:32.587 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@17690e14
[DEBUG] 2025-10-15 09:47:32.587 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@17690e14
[DEBUG] 2025-10-15 09:47:32.587 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@6850b758
[DEBUG] 2025-10-15 09:47:32.587 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@2a2ef072
[DEBUG] 2025-10-15 09:47:32.587 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@2a2ef072
[DEBUG] 2025-10-15 09:47:32.587 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@2a2ef072
[DEBUG] 2025-10-15 09:47:32.587 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@704641e3
[DEBUG] 2025-10-15 09:47:32.587 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@2f00f851
[DEBUG] 2025-10-15 09:47:32.587 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@4207609e
[DEBUG] 2025-10-15 09:47:32.587 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@1f77b5cc
[DEBUG] 2025-10-15 09:47:32.587 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@1f77b5cc
[DEBUG] 2025-10-15 09:47:32.587 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@5d7ca698
[DEBUG] 2025-10-15 09:47:32.587 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@5d7ca698
[DEBUG] 2025-10-15 09:47:32.587 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@75961f16
[DEBUG] 2025-10-15 09:47:32.587 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@c6c82aa
[DEBUG] 2025-10-15 09:47:32.587 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@2e179f3e
[DEBUG] 2025-10-15 09:47:32.587 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@16e7b402
[DEBUG] 2025-10-15 09:47:32.587 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@534c6767
[DEBUG] 2025-10-15 09:47:32.587 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@3bddc676
[DEBUG] 2025-10-15 09:47:32.587 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@29a1505c
[DEBUG] 2025-10-15 09:47:32.587 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@29a1505c
[DEBUG] 2025-10-15 09:47:32.587 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@24db6ce
[DEBUG] 2025-10-15 09:47:32.587 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@24db6ce
[DEBUG] 2025-10-15 09:47:32.587 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@320a8ebf
[DEBUG] 2025-10-15 09:47:32.587 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@320a8ebf
[DEBUG] 2025-10-15 09:47:32.587 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@67b100fe
[DEBUG] 2025-10-15 09:47:32.587 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@67b100fe
[DEBUG] 2025-10-15 09:47:32.587 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@44b18fe4
[DEBUG] 2025-10-15 09:47:32.587 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@44b18fe4
[DEBUG] 2025-10-15 09:47:32.587 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2ba5aa7a
[DEBUG] 2025-10-15 09:47:32.587 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4d3ca6c7
[DEBUG] 2025-10-15 09:47:32.587 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@22e5f96e
[DEBUG] 2025-10-15 09:47:32.587 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@22e5f96e
[DEBUG] 2025-10-15 09:47:32.588 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@6a638c79
[DEBUG] 2025-10-15 09:47:32.588 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6c931d35
[DEBUG] 2025-10-15 09:47:32.588 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@44b194fe
[DEBUG] 2025-10-15 09:47:32.588 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@49122b8f
[DEBUG] 2025-10-15 09:47:32.588 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@49122b8f
[DEBUG] 2025-10-15 09:47:32.588 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3fe46690
[DEBUG] 2025-10-15 09:47:32.588 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4beabeec
[DEBUG] 2025-10-15 09:47:32.588 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@3b4d50b
[DEBUG] 2025-10-15 09:47:32.588 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@3b4d50b
[DEBUG] 2025-10-15 09:47:32.588 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@5b22d8a1
[DEBUG] 2025-10-15 09:47:32.588 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@5b22d8a1
[DEBUG] 2025-10-15 09:47:32.588 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@476ee5b3
[DEBUG] 2025-10-15 09:47:32.588 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@476ee5b3
[DEBUG] 2025-10-15 09:47:32.588 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@476ee5b3
[DEBUG] 2025-10-15 09:47:32.588 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@59ed3e6c
[DEBUG] 2025-10-15 09:47:32.588 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@59ed3e6c
[DEBUG] 2025-10-15 09:47:32.588 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@59ed3e6c
[DEBUG] 2025-10-15 09:47:32.588 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@7cd4a4d7
[DEBUG] 2025-10-15 09:47:32.588 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@317e9c3c
[DEBUG] 2025-10-15 09:47:32.588 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@18da4dd
[DEBUG] 2025-10-15 09:47:32.588 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@18da4dd
[DEBUG] 2025-10-15 09:47:32.588 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@31a3f4de
[DEBUG] 2025-10-15 09:47:32.588 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@31a3f4de
[DEBUG] 2025-10-15 09:47:32.588 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@31a3f4de
[DEBUG] 2025-10-15 09:47:32.588 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@68880c21
[DEBUG] 2025-10-15 09:47:32.588 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@2dd2e270
[DEBUG] 2025-10-15 09:47:32.588 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@4195105b
[DEBUG] 2025-10-15 09:47:32.588 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@4195105b
[DEBUG] 2025-10-15 09:47:32.588 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@6f3e19b3
[DEBUG] 2025-10-15 09:47:32.588 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@6f3e19b3
[DEBUG] 2025-10-15 09:47:32.588 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@6f3e19b3
[DEBUG] 2025-10-15 09:47:32.589 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@47ffe971
[DEBUG] 2025-10-15 09:47:32.589 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@47ffe971
[DEBUG] 2025-10-15 09:47:32.589 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@7d04529c
[DEBUG] 2025-10-15 09:47:32.589 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@7d04529c
[DEBUG] 2025-10-15 09:47:32.589 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@14fa92af
[DEBUG] 2025-10-15 09:47:32.589 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@14fa92af
[DEBUG] 2025-10-15 09:47:32.589 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@b16e202
[DEBUG] 2025-10-15 09:47:32.589 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@b16e202
[DEBUG] 2025-10-15 09:47:32.589 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@339a3670
[DEBUG] 2025-10-15 09:47:32.589 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@339a3670
[DEBUG] 2025-10-15 09:47:32.589 [main] BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@6cd5122d
[DEBUG] 2025-10-15 09:47:32.589 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@2c7a8af2
[DEBUG] 2025-10-15 09:47:32.589 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@65c33b92
[DEBUG] 2025-10-15 09:47:32.589 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@65c33b92
[DEBUG] 2025-10-15 09:47:32.589 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@1f11f64e
[DEBUG] 2025-10-15 09:47:32.589 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@383c3eb3
[DEBUG] 2025-10-15 09:47:32.589 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@20ab76ee
[DEBUG] 2025-10-15 09:47:32.589 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@485caa8f
[DEBUG] 2025-10-15 09:47:32.589 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@2703d91
[DEBUG] 2025-10-15 09:47:32.589 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@5be052ca
[DEBUG] 2025-10-15 09:47:32.590 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@2007435e
[DEBUG] 2025-10-15 09:47:32.590 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@da28d03
[DEBUG] 2025-10-15 09:47:32.590 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@ebda593
[INFO ] 2025-10-15 09:47:32.594 [main] c3p0 - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3307/hungryBadger_test
[INFO ] 2025-10-15 09:47:32.594 [main] c3p0 - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2025-10-15 09:47:32.594 [main] c3p0 - HHH10001003: Autocommit mode: false
[INFO ] 2025-10-15 09:47:32.621 [main] c3p0 - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2025-10-15 09:47:32.636 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 9.4.0
      major : 9
      minor : 4
[DEBUG] 2025-10-15 09:47:32.636 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2025-10-15 09:47:32.636 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[DEBUG] 2025-10-15 09:47:32.637 [main] dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 9.4
[DEBUG] 2025-10-15 09:47:32.638 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2025-10-15 09:47:32.638 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2025-10-15 09:47:32.639 [main] DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@60df7989) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7ab1127c)
[DEBUG] 2025-10-15 09:47:32.639 [main] DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6e60f18) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5cf8676a)
[DEBUG] 2025-10-15 09:47:32.639 [main] DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@47f04e4d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3520963d)
[DEBUG] 2025-10-15 09:47:32.639 [main] DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@388d14e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1cd43562)
[DEBUG] 2025-10-15 09:47:32.639 [main] DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@59939293) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@68b366e2)
[DEBUG] 2025-10-15 09:47:32.639 [main] DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2d74c81b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@10b687f2)
[DEBUG] 2025-10-15 09:47:32.639 [main] DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@55f4887d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@26837057)
[DEBUG] 2025-10-15 09:47:32.639 [main] DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2dbc408c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@991cbde)
[DEBUG] 2025-10-15 09:47:32.639 [main] DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@78d71df1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@456bcb74)
[DEBUG] 2025-10-15 09:47:32.640 [main] JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2025-10-15 09:47:32.640 [main] JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2025-10-15 09:47:32.640 [main] JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2025-10-15 09:47:32.640 [main] JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2025-10-15 09:47:32.640 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2025-10-15 09:47:32.640 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@a9c5b75
[DEBUG] 2025-10-15 09:47:32.640 [main] BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@1f11f64e`
[DEBUG] 2025-10-15 09:47:32.641 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@17(java.time.Duration,2)
[DEBUG] 2025-10-15 09:47:32.641 [main] BasicTypeRegistry - Adding type registration Duration -> basicType@17(java.time.Duration,2)
[DEBUG] 2025-10-15 09:47:32.642 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@17(java.time.Duration,2)
[DEBUG] 2025-10-15 09:47:32.642 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@18(java.time.OffsetDateTime,3003)
[DEBUG] 2025-10-15 09:47:32.642 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@18(java.time.OffsetDateTime,3003)
[DEBUG] 2025-10-15 09:47:32.642 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@18(java.time.OffsetDateTime,3003)
[DEBUG] 2025-10-15 09:47:32.642 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@19(java.time.ZonedDateTime,3003)
[DEBUG] 2025-10-15 09:47:32.642 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@19(java.time.ZonedDateTime,3003)
[DEBUG] 2025-10-15 09:47:32.642 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@19(java.time.ZonedDateTime,3003)
[DEBUG] 2025-10-15 09:47:32.642 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@20(java.time.OffsetTime,3007)
[DEBUG] 2025-10-15 09:47:32.642 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@20(java.time.OffsetTime,3007)
[DEBUG] 2025-10-15 09:47:32.642 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@20(java.time.OffsetTime,3007)
[DEBUG] 2025-10-15 09:47:32.642 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@dd4aec3] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4dac121d]
[DEBUG] 2025-10-15 09:47:32.776 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2025-10-15 09:47:32.776 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2025-10-15 09:47:32.781 [main] LocalXmlResourceResolver - Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
[DEBUG] 2025-10-15 09:47:32.782 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2025-10-15 09:47:32.796 [main] factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2025-10-15 09:47:32.797 [main] factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2025-10-15 09:47:32.797 [main] factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2025-10-15 09:47:32.797 [main] factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2025-10-15 09:47:32.797 [main] factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2025-10-15 09:47:32.797 [main] factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2025-10-15 09:47:32.797 [main] factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2025-10-15 09:47:32.797 [main] factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2025-10-15 09:47:32.797 [main] factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2025-10-15 09:47:32.797 [main] factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2025-10-15 09:47:32.797 [main] factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2025-10-15 09:47:32.797 [main] factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2025-10-15 09:47:32.797 [main] factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2025-10-15 09:47:32.797 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[INFO ] 2025-10-15 09:47:32.797 [main] RegionFactoryInitiator - HHH000026: Second-level cache disabled
[DEBUG] 2025-10-15 09:47:32.797 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7c251f90
[DEBUG] 2025-10-15 09:47:32.797 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7c251f90
[DEBUG] 2025-10-15 09:47:32.797 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@7c251f90
[DEBUG] 2025-10-15 09:47:32.797 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@51841ac6
[DEBUG] 2025-10-15 09:47:32.797 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@51841ac6
[DEBUG] 2025-10-15 09:47:32.798 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@5ba26eb0
[DEBUG] 2025-10-15 09:47:32.798 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@5ba26eb0
[DEBUG] 2025-10-15 09:47:32.798 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@435e60ff
[DEBUG] 2025-10-15 09:47:32.798 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@435e60ff
[DEBUG] 2025-10-15 09:47:32.798 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@17d32e9b
[DEBUG] 2025-10-15 09:47:32.798 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@17d32e9b
[DEBUG] 2025-10-15 09:47:32.798 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@17d32e9b
[DEBUG] 2025-10-15 09:47:32.798 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@66f0548d
[DEBUG] 2025-10-15 09:47:32.798 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@66f0548d
[DEBUG] 2025-10-15 09:47:32.798 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@66f0548d
[DEBUG] 2025-10-15 09:47:32.798 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2e6f610d
[DEBUG] 2025-10-15 09:47:32.798 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2e6f610d
[DEBUG] 2025-10-15 09:47:32.798 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@1e86a5a7
[DEBUG] 2025-10-15 09:47:32.798 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@10afe71a
[DEBUG] 2025-10-15 09:47:32.798 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@10afe71a
[DEBUG] 2025-10-15 09:47:32.798 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@741f8dbe
[DEBUG] 2025-10-15 09:47:32.798 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@212dfd39
[DEBUG] 2025-10-15 09:47:32.798 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@a2ddf26
[DEBUG] 2025-10-15 09:47:32.798 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@a2ddf26
[DEBUG] 2025-10-15 09:47:32.798 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@a2ddf26
[DEBUG] 2025-10-15 09:47:32.798 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@65d57e4e
[DEBUG] 2025-10-15 09:47:32.798 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@65d57e4e
[DEBUG] 2025-10-15 09:47:32.798 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@65d57e4e
[DEBUG] 2025-10-15 09:47:32.798 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@6daf7d37
[DEBUG] 2025-10-15 09:47:32.798 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@6daf7d37
[DEBUG] 2025-10-15 09:47:32.798 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@6daf7d37
[DEBUG] 2025-10-15 09:47:32.798 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@23a5818e
[DEBUG] 2025-10-15 09:47:32.798 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@23a5818e
[DEBUG] 2025-10-15 09:47:32.798 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@23a5818e
[DEBUG] 2025-10-15 09:47:32.798 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@4715ae33
[DEBUG] 2025-10-15 09:47:32.798 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@4715ae33
[DEBUG] 2025-10-15 09:47:32.798 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@4715ae33
[DEBUG] 2025-10-15 09:47:32.799 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@9fc9f91
[DEBUG] 2025-10-15 09:47:32.799 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@9fc9f91
[DEBUG] 2025-10-15 09:47:32.799 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@1fac1d5c
[DEBUG] 2025-10-15 09:47:32.799 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@1fac1d5c
[DEBUG] 2025-10-15 09:47:32.799 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@108a46d6
[DEBUG] 2025-10-15 09:47:32.799 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@108a46d6
[DEBUG] 2025-10-15 09:47:32.799 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@108a46d6
[DEBUG] 2025-10-15 09:47:32.799 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@7a8406c2
[DEBUG] 2025-10-15 09:47:32.799 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@17690e14
[DEBUG] 2025-10-15 09:47:32.799 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@17690e14
[DEBUG] 2025-10-15 09:47:32.799 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@6850b758
[DEBUG] 2025-10-15 09:47:32.799 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@2a2ef072
[DEBUG] 2025-10-15 09:47:32.799 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@2a2ef072
[DEBUG] 2025-10-15 09:47:32.799 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@2a2ef072
[DEBUG] 2025-10-15 09:47:32.799 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@704641e3
[DEBUG] 2025-10-15 09:47:32.799 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@2f00f851
[DEBUG] 2025-10-15 09:47:32.799 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@4207609e
[DEBUG] 2025-10-15 09:47:32.799 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@1f77b5cc
[DEBUG] 2025-10-15 09:47:32.799 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@1f77b5cc
[DEBUG] 2025-10-15 09:47:32.799 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@5d7ca698
[DEBUG] 2025-10-15 09:47:32.799 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@5d7ca698
[DEBUG] 2025-10-15 09:47:32.799 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@75961f16
[DEBUG] 2025-10-15 09:47:32.799 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@c6c82aa
[DEBUG] 2025-10-15 09:47:32.799 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@2e179f3e
[DEBUG] 2025-10-15 09:47:32.799 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@16e7b402
[DEBUG] 2025-10-15 09:47:32.799 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@534c6767
[DEBUG] 2025-10-15 09:47:32.799 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@3bddc676
[DEBUG] 2025-10-15 09:47:32.799 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@29a1505c
[DEBUG] 2025-10-15 09:47:32.799 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@29a1505c
[DEBUG] 2025-10-15 09:47:32.799 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@24db6ce
[DEBUG] 2025-10-15 09:47:32.799 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@24db6ce
[DEBUG] 2025-10-15 09:47:32.799 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@320a8ebf
[DEBUG] 2025-10-15 09:47:32.799 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@320a8ebf
[DEBUG] 2025-10-15 09:47:32.799 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@67b100fe
[DEBUG] 2025-10-15 09:47:32.799 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@67b100fe
[DEBUG] 2025-10-15 09:47:32.799 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@44b18fe4
[DEBUG] 2025-10-15 09:47:32.800 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@44b18fe4
[DEBUG] 2025-10-15 09:47:32.800 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2ba5aa7a
[DEBUG] 2025-10-15 09:47:32.800 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4d3ca6c7
[DEBUG] 2025-10-15 09:47:32.800 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@22e5f96e
[DEBUG] 2025-10-15 09:47:32.800 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@22e5f96e
[DEBUG] 2025-10-15 09:47:32.800 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@6a638c79
[DEBUG] 2025-10-15 09:47:32.800 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6c931d35
[DEBUG] 2025-10-15 09:47:32.800 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@44b194fe
[DEBUG] 2025-10-15 09:47:32.800 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@49122b8f
[DEBUG] 2025-10-15 09:47:32.800 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@49122b8f
[DEBUG] 2025-10-15 09:47:32.800 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3fe46690
[DEBUG] 2025-10-15 09:47:32.800 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4beabeec
[DEBUG] 2025-10-15 09:47:32.800 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@3b4d50b
[DEBUG] 2025-10-15 09:47:32.800 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@3b4d50b
[DEBUG] 2025-10-15 09:47:32.800 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@5b22d8a1
[DEBUG] 2025-10-15 09:47:32.800 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@5b22d8a1
[DEBUG] 2025-10-15 09:47:32.800 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@476ee5b3
[DEBUG] 2025-10-15 09:47:32.800 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@476ee5b3
[DEBUG] 2025-10-15 09:47:32.800 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@476ee5b3
[DEBUG] 2025-10-15 09:47:32.800 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@59ed3e6c
[DEBUG] 2025-10-15 09:47:32.800 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@59ed3e6c
[DEBUG] 2025-10-15 09:47:32.800 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@59ed3e6c
[DEBUG] 2025-10-15 09:47:32.800 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@7cd4a4d7
[DEBUG] 2025-10-15 09:47:32.800 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@317e9c3c
[DEBUG] 2025-10-15 09:47:32.800 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@18da4dd
[DEBUG] 2025-10-15 09:47:32.800 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@18da4dd
[DEBUG] 2025-10-15 09:47:32.800 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@31a3f4de
[DEBUG] 2025-10-15 09:47:32.800 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@31a3f4de
[DEBUG] 2025-10-15 09:47:32.800 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@31a3f4de
[DEBUG] 2025-10-15 09:47:32.800 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@68880c21
[DEBUG] 2025-10-15 09:47:32.800 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@2dd2e270
[DEBUG] 2025-10-15 09:47:32.800 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@4195105b
[DEBUG] 2025-10-15 09:47:32.800 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@4195105b
[DEBUG] 2025-10-15 09:47:32.800 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@6f3e19b3
[DEBUG] 2025-10-15 09:47:32.800 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@6f3e19b3
[DEBUG] 2025-10-15 09:47:32.800 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@6f3e19b3
[DEBUG] 2025-10-15 09:47:32.800 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@47ffe971
[DEBUG] 2025-10-15 09:47:32.800 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@47ffe971
[DEBUG] 2025-10-15 09:47:32.800 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@7d04529c
[DEBUG] 2025-10-15 09:47:32.801 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@7d04529c
[DEBUG] 2025-10-15 09:47:32.801 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@14fa92af
[DEBUG] 2025-10-15 09:47:32.801 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@14fa92af
[DEBUG] 2025-10-15 09:47:32.801 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@b16e202
[DEBUG] 2025-10-15 09:47:32.801 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@b16e202
[DEBUG] 2025-10-15 09:47:32.801 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@339a3670
[DEBUG] 2025-10-15 09:47:32.801 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@339a3670
[DEBUG] 2025-10-15 09:47:32.801 [main] BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@6cd5122d
[DEBUG] 2025-10-15 09:47:32.801 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@2c7a8af2
[DEBUG] 2025-10-15 09:47:32.801 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@65c33b92
[DEBUG] 2025-10-15 09:47:32.801 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@65c33b92
[DEBUG] 2025-10-15 09:47:32.801 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@1f11f64e
[DEBUG] 2025-10-15 09:47:32.801 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@2d0b05
[DEBUG] 2025-10-15 09:47:32.801 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4b432e53
[DEBUG] 2025-10-15 09:47:32.801 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@2b916808
[DEBUG] 2025-10-15 09:47:32.801 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@62f11ebb
[DEBUG] 2025-10-15 09:47:32.801 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@a6c54c3
[DEBUG] 2025-10-15 09:47:32.801 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@580fd26b
[DEBUG] 2025-10-15 09:47:32.801 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@78fe204a
[DEBUG] 2025-10-15 09:47:32.801 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@1290ed28
[INFO ] 2025-10-15 09:47:32.805 [main] c3p0 - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3307/hungryBadger_test
[INFO ] 2025-10-15 09:47:32.805 [main] c3p0 - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2025-10-15 09:47:32.805 [main] c3p0 - HHH10001003: Autocommit mode: false
[INFO ] 2025-10-15 09:47:32.831 [main] c3p0 - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2025-10-15 09:47:32.846 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 9.4.0
      major : 9
      minor : 4
[DEBUG] 2025-10-15 09:47:32.847 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2025-10-15 09:47:32.847 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[DEBUG] 2025-10-15 09:47:32.847 [main] dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 9.4
[DEBUG] 2025-10-15 09:47:32.848 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2025-10-15 09:47:32.848 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2025-10-15 09:47:32.849 [main] DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4570d7b6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@72b6832e)
[DEBUG] 2025-10-15 09:47:32.849 [main] DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3850e90c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3d9f5016)
[DEBUG] 2025-10-15 09:47:32.849 [main] DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7e91ed74) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3878be7b)
[DEBUG] 2025-10-15 09:47:32.849 [main] DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7df28f1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4087c7fc)
[DEBUG] 2025-10-15 09:47:32.849 [main] DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@318c68d5) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4cfa83f9)
[DEBUG] 2025-10-15 09:47:32.849 [main] DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@321ca237) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4c5a2baf)
[DEBUG] 2025-10-15 09:47:32.849 [main] DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1ec22831) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@63f855b)
[DEBUG] 2025-10-15 09:47:32.849 [main] DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@516592b1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4cffcc61)
[DEBUG] 2025-10-15 09:47:32.849 [main] DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4373f66f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@399ca607)
[DEBUG] 2025-10-15 09:47:32.849 [main] JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2025-10-15 09:47:32.849 [main] JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2025-10-15 09:47:32.849 [main] JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2025-10-15 09:47:32.849 [main] JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2025-10-15 09:47:32.849 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2025-10-15 09:47:32.849 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@44114b9f
[DEBUG] 2025-10-15 09:47:32.849 [main] BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@1f11f64e`
[DEBUG] 2025-10-15 09:47:32.850 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@21(java.time.Duration,2)
[DEBUG] 2025-10-15 09:47:32.851 [main] BasicTypeRegistry - Adding type registration Duration -> basicType@21(java.time.Duration,2)
[DEBUG] 2025-10-15 09:47:32.851 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@21(java.time.Duration,2)
[DEBUG] 2025-10-15 09:47:32.851 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@22(java.time.OffsetDateTime,3003)
[DEBUG] 2025-10-15 09:47:32.851 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@22(java.time.OffsetDateTime,3003)
[DEBUG] 2025-10-15 09:47:32.851 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@22(java.time.OffsetDateTime,3003)
[DEBUG] 2025-10-15 09:47:32.851 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@23(java.time.ZonedDateTime,3003)
[DEBUG] 2025-10-15 09:47:32.851 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@23(java.time.ZonedDateTime,3003)
[DEBUG] 2025-10-15 09:47:32.851 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@23(java.time.ZonedDateTime,3003)
[DEBUG] 2025-10-15 09:47:32.851 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@24(java.time.OffsetTime,3007)
[DEBUG] 2025-10-15 09:47:32.851 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@24(java.time.OffsetTime,3007)
[DEBUG] 2025-10-15 09:47:32.851 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@24(java.time.OffsetTime,3007)
[DEBUG] 2025-10-15 09:47:32.851 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@76bf1bb8] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2a235b8e]
[DEBUG] 2025-10-15 09:47:32.971 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2025-10-15 09:47:32.971 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2025-10-15 09:47:32.977 [main] LocalXmlResourceResolver - Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
[DEBUG] 2025-10-15 09:47:32.977 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2025-10-15 09:47:32.991 [main] factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2025-10-15 09:47:32.991 [main] factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2025-10-15 09:47:32.992 [main] factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2025-10-15 09:47:32.992 [main] factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2025-10-15 09:47:32.992 [main] factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2025-10-15 09:47:32.992 [main] factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2025-10-15 09:47:32.992 [main] factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2025-10-15 09:47:32.992 [main] factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2025-10-15 09:47:32.992 [main] factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2025-10-15 09:47:32.992 [main] factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2025-10-15 09:47:32.992 [main] factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2025-10-15 09:47:32.992 [main] factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2025-10-15 09:47:32.992 [main] factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2025-10-15 09:47:32.992 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[INFO ] 2025-10-15 09:47:32.992 [main] RegionFactoryInitiator - HHH000026: Second-level cache disabled
[DEBUG] 2025-10-15 09:47:32.992 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7c251f90
[DEBUG] 2025-10-15 09:47:32.992 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7c251f90
[DEBUG] 2025-10-15 09:47:32.992 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@7c251f90
[DEBUG] 2025-10-15 09:47:32.992 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@51841ac6
[DEBUG] 2025-10-15 09:47:32.992 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@51841ac6
[DEBUG] 2025-10-15 09:47:32.992 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@5ba26eb0
[DEBUG] 2025-10-15 09:47:32.992 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@5ba26eb0
[DEBUG] 2025-10-15 09:47:32.992 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@435e60ff
[DEBUG] 2025-10-15 09:47:32.992 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@435e60ff
[DEBUG] 2025-10-15 09:47:32.992 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@17d32e9b
[DEBUG] 2025-10-15 09:47:32.992 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@17d32e9b
[DEBUG] 2025-10-15 09:47:32.992 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@17d32e9b
[DEBUG] 2025-10-15 09:47:32.992 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@66f0548d
[DEBUG] 2025-10-15 09:47:32.992 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@66f0548d
[DEBUG] 2025-10-15 09:47:32.992 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@66f0548d
[DEBUG] 2025-10-15 09:47:32.992 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2e6f610d
[DEBUG] 2025-10-15 09:47:32.992 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2e6f610d
[DEBUG] 2025-10-15 09:47:32.992 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@1e86a5a7
[DEBUG] 2025-10-15 09:47:32.992 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@10afe71a
[DEBUG] 2025-10-15 09:47:32.992 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@10afe71a
[DEBUG] 2025-10-15 09:47:32.993 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@741f8dbe
[DEBUG] 2025-10-15 09:47:32.993 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@212dfd39
[DEBUG] 2025-10-15 09:47:32.993 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@a2ddf26
[DEBUG] 2025-10-15 09:47:32.993 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@a2ddf26
[DEBUG] 2025-10-15 09:47:32.993 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@a2ddf26
[DEBUG] 2025-10-15 09:47:32.993 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@65d57e4e
[DEBUG] 2025-10-15 09:47:32.993 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@65d57e4e
[DEBUG] 2025-10-15 09:47:32.993 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@65d57e4e
[DEBUG] 2025-10-15 09:47:32.993 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@6daf7d37
[DEBUG] 2025-10-15 09:47:32.993 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@6daf7d37
[DEBUG] 2025-10-15 09:47:32.993 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@6daf7d37
[DEBUG] 2025-10-15 09:47:32.993 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@23a5818e
[DEBUG] 2025-10-15 09:47:32.993 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@23a5818e
[DEBUG] 2025-10-15 09:47:32.993 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@23a5818e
[DEBUG] 2025-10-15 09:47:32.993 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@4715ae33
[DEBUG] 2025-10-15 09:47:32.993 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@4715ae33
[DEBUG] 2025-10-15 09:47:32.993 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@4715ae33
[DEBUG] 2025-10-15 09:47:32.993 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@9fc9f91
[DEBUG] 2025-10-15 09:47:32.993 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@9fc9f91
[DEBUG] 2025-10-15 09:47:32.993 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@1fac1d5c
[DEBUG] 2025-10-15 09:47:32.993 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@1fac1d5c
[DEBUG] 2025-10-15 09:47:32.993 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@108a46d6
[DEBUG] 2025-10-15 09:47:32.993 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@108a46d6
[DEBUG] 2025-10-15 09:47:32.993 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@108a46d6
[DEBUG] 2025-10-15 09:47:32.993 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@7a8406c2
[DEBUG] 2025-10-15 09:47:32.993 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@17690e14
[DEBUG] 2025-10-15 09:47:32.993 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@17690e14
[DEBUG] 2025-10-15 09:47:32.993 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@6850b758
[DEBUG] 2025-10-15 09:47:32.993 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@2a2ef072
[DEBUG] 2025-10-15 09:47:32.993 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@2a2ef072
[DEBUG] 2025-10-15 09:47:32.993 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@2a2ef072
[DEBUG] 2025-10-15 09:47:32.993 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@704641e3
[DEBUG] 2025-10-15 09:47:32.993 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@2f00f851
[DEBUG] 2025-10-15 09:47:32.993 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@4207609e
[DEBUG] 2025-10-15 09:47:32.993 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@1f77b5cc
[DEBUG] 2025-10-15 09:47:32.993 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@1f77b5cc
[DEBUG] 2025-10-15 09:47:32.993 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@5d7ca698
[DEBUG] 2025-10-15 09:47:32.993 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@5d7ca698
[DEBUG] 2025-10-15 09:47:32.993 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@75961f16
[DEBUG] 2025-10-15 09:47:32.993 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@c6c82aa
[DEBUG] 2025-10-15 09:47:32.993 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@2e179f3e
[DEBUG] 2025-10-15 09:47:32.993 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@16e7b402
[DEBUG] 2025-10-15 09:47:32.993 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@534c6767
[DEBUG] 2025-10-15 09:47:32.993 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@3bddc676
[DEBUG] 2025-10-15 09:47:32.993 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@29a1505c
[DEBUG] 2025-10-15 09:47:32.993 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@29a1505c
[DEBUG] 2025-10-15 09:47:32.993 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@24db6ce
[DEBUG] 2025-10-15 09:47:32.993 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@24db6ce
[DEBUG] 2025-10-15 09:47:32.993 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@320a8ebf
[DEBUG] 2025-10-15 09:47:32.993 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@320a8ebf
[DEBUG] 2025-10-15 09:47:32.993 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@67b100fe
[DEBUG] 2025-10-15 09:47:32.993 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@67b100fe
[DEBUG] 2025-10-15 09:47:32.993 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@44b18fe4
[DEBUG] 2025-10-15 09:47:32.994 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@44b18fe4
[DEBUG] 2025-10-15 09:47:32.994 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2ba5aa7a
[DEBUG] 2025-10-15 09:47:32.994 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4d3ca6c7
[DEBUG] 2025-10-15 09:47:32.994 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@22e5f96e
[DEBUG] 2025-10-15 09:47:32.994 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@22e5f96e
[DEBUG] 2025-10-15 09:47:32.994 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@6a638c79
[DEBUG] 2025-10-15 09:47:32.994 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6c931d35
[DEBUG] 2025-10-15 09:47:32.994 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@44b194fe
[DEBUG] 2025-10-15 09:47:32.994 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@49122b8f
[DEBUG] 2025-10-15 09:47:32.994 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@49122b8f
[DEBUG] 2025-10-15 09:47:32.994 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3fe46690
[DEBUG] 2025-10-15 09:47:32.994 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4beabeec
[DEBUG] 2025-10-15 09:47:32.994 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@3b4d50b
[DEBUG] 2025-10-15 09:47:32.994 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@3b4d50b
[DEBUG] 2025-10-15 09:47:32.994 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@5b22d8a1
[DEBUG] 2025-10-15 09:47:32.994 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@5b22d8a1
[DEBUG] 2025-10-15 09:47:32.994 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@476ee5b3
[DEBUG] 2025-10-15 09:47:32.994 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@476ee5b3
[DEBUG] 2025-10-15 09:47:32.994 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@476ee5b3
[DEBUG] 2025-10-15 09:47:32.994 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@59ed3e6c
[DEBUG] 2025-10-15 09:47:32.994 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@59ed3e6c
[DEBUG] 2025-10-15 09:47:32.994 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@59ed3e6c
[DEBUG] 2025-10-15 09:47:32.994 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@7cd4a4d7
[DEBUG] 2025-10-15 09:47:32.994 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@317e9c3c
[DEBUG] 2025-10-15 09:47:32.994 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@18da4dd
[DEBUG] 2025-10-15 09:47:32.994 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@18da4dd
[DEBUG] 2025-10-15 09:47:32.994 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@31a3f4de
[DEBUG] 2025-10-15 09:47:32.994 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@31a3f4de
[DEBUG] 2025-10-15 09:47:32.994 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@31a3f4de
[DEBUG] 2025-10-15 09:47:32.994 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@68880c21
[DEBUG] 2025-10-15 09:47:32.994 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@2dd2e270
[DEBUG] 2025-10-15 09:47:32.994 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@4195105b
[DEBUG] 2025-10-15 09:47:32.994 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@4195105b
[DEBUG] 2025-10-15 09:47:32.994 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@6f3e19b3
[DEBUG] 2025-10-15 09:47:32.994 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@6f3e19b3
[DEBUG] 2025-10-15 09:47:32.994 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@6f3e19b3
[DEBUG] 2025-10-15 09:47:32.994 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@47ffe971
[DEBUG] 2025-10-15 09:47:32.994 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@47ffe971
[DEBUG] 2025-10-15 09:47:32.994 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@7d04529c
[DEBUG] 2025-10-15 09:47:32.994 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@7d04529c
[DEBUG] 2025-10-15 09:47:32.994 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@14fa92af
[DEBUG] 2025-10-15 09:47:32.994 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@14fa92af
[DEBUG] 2025-10-15 09:47:32.994 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@b16e202
[DEBUG] 2025-10-15 09:47:32.994 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@b16e202
[DEBUG] 2025-10-15 09:47:32.994 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@339a3670
[DEBUG] 2025-10-15 09:47:32.994 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@339a3670
[DEBUG] 2025-10-15 09:47:32.994 [main] BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@6cd5122d
[DEBUG] 2025-10-15 09:47:32.995 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@2c7a8af2
[DEBUG] 2025-10-15 09:47:32.995 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@65c33b92
[DEBUG] 2025-10-15 09:47:32.995 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@65c33b92
[DEBUG] 2025-10-15 09:47:32.995 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@1f11f64e
[DEBUG] 2025-10-15 09:47:32.995 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@6ec63f8
[DEBUG] 2025-10-15 09:47:32.995 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@66223d94
[DEBUG] 2025-10-15 09:47:32.995 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@2bc7db89
[DEBUG] 2025-10-15 09:47:32.995 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@479ac2cb
[DEBUG] 2025-10-15 09:47:32.995 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@220c9a63
[DEBUG] 2025-10-15 09:47:32.995 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@55b5cd2b
[DEBUG] 2025-10-15 09:47:32.995 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@40bb4f87
[DEBUG] 2025-10-15 09:47:32.995 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@51a651c1
[INFO ] 2025-10-15 09:47:32.998 [main] c3p0 - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3307/hungryBadger_test
[INFO ] 2025-10-15 09:47:32.999 [main] c3p0 - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2025-10-15 09:47:32.999 [main] c3p0 - HHH10001003: Autocommit mode: false
[INFO ] 2025-10-15 09:47:33.031 [main] c3p0 - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2025-10-15 09:47:33.044 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 9.4.0
      major : 9
      minor : 4
[DEBUG] 2025-10-15 09:47:33.045 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2025-10-15 09:47:33.045 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[DEBUG] 2025-10-15 09:47:33.045 [main] dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 9.4
[DEBUG] 2025-10-15 09:47:33.046 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2025-10-15 09:47:33.046 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2025-10-15 09:47:33.047 [main] DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1c52552f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5dc769f9)
[DEBUG] 2025-10-15 09:47:33.047 [main] DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1b0e9707) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@9b5f3c7)
[DEBUG] 2025-10-15 09:47:33.047 [main] DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@74024f3) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@61ae0d43)
[DEBUG] 2025-10-15 09:47:33.047 [main] DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@ef718de) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@287ae90c)
[DEBUG] 2025-10-15 09:47:33.047 [main] DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2e1b374c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3fcee3d9)
[DEBUG] 2025-10-15 09:47:33.047 [main] DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@9c93d16) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@760487aa)
[DEBUG] 2025-10-15 09:47:33.047 [main] DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1526f71) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@49ca94a9)
[DEBUG] 2025-10-15 09:47:33.047 [main] DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@9ab310b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5b40de43)
[DEBUG] 2025-10-15 09:47:33.047 [main] DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@49fb0bbd) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5489b1f7)
[DEBUG] 2025-10-15 09:47:33.047 [main] JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2025-10-15 09:47:33.047 [main] JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2025-10-15 09:47:33.047 [main] JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2025-10-15 09:47:33.047 [main] JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2025-10-15 09:47:33.047 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2025-10-15 09:47:33.047 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@4faf104
[DEBUG] 2025-10-15 09:47:33.047 [main] BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@1f11f64e`
[DEBUG] 2025-10-15 09:47:33.048 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@25(java.time.Duration,2)
[DEBUG] 2025-10-15 09:47:33.048 [main] BasicTypeRegistry - Adding type registration Duration -> basicType@25(java.time.Duration,2)
[DEBUG] 2025-10-15 09:47:33.048 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@25(java.time.Duration,2)
[DEBUG] 2025-10-15 09:47:33.048 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@26(java.time.OffsetDateTime,3003)
[DEBUG] 2025-10-15 09:47:33.048 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@26(java.time.OffsetDateTime,3003)
[DEBUG] 2025-10-15 09:47:33.048 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@26(java.time.OffsetDateTime,3003)
[DEBUG] 2025-10-15 09:47:33.048 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@27(java.time.ZonedDateTime,3003)
[DEBUG] 2025-10-15 09:47:33.048 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@27(java.time.ZonedDateTime,3003)
[DEBUG] 2025-10-15 09:47:33.048 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@27(java.time.ZonedDateTime,3003)
[DEBUG] 2025-10-15 09:47:33.049 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@28(java.time.OffsetTime,3007)
[DEBUG] 2025-10-15 09:47:33.049 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@28(java.time.OffsetTime,3007)
[DEBUG] 2025-10-15 09:47:33.049 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@28(java.time.OffsetTime,3007)
[DEBUG] 2025-10-15 09:47:33.049 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5995851e] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@48a2db72]
[DEBUG] 2025-10-15 10:35:02.866 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2025-10-15 10:35:02.877 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2025-10-15 10:35:02.916 [main] Version - HHH000412: Hibernate ORM core version 6.4.3.Final
[DEBUG] 2025-10-15 10:35:02.918 [main] Environment - HHH000206: 'hibernate.properties' not found
[DEBUG] 2025-10-15 10:35:03.006 [main] LocalXmlResourceResolver - Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
[DEBUG] 2025-10-15 10:35:03.018 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2025-10-15 10:35:03.298 [main] factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2025-10-15 10:35:03.303 [main] factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2025-10-15 10:35:03.303 [main] factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2025-10-15 10:35:03.304 [main] factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2025-10-15 10:35:03.304 [main] factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2025-10-15 10:35:03.305 [main] factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2025-10-15 10:35:03.306 [main] factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2025-10-15 10:35:03.306 [main] factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2025-10-15 10:35:03.307 [main] factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2025-10-15 10:35:03.308 [main] factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2025-10-15 10:35:03.308 [main] factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2025-10-15 10:35:03.309 [main] factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2025-10-15 10:35:03.309 [main] factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2025-10-15 10:35:03.319 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[INFO ] 2025-10-15 10:35:03.320 [main] RegionFactoryInitiator - HHH000026: Second-level cache disabled
[DEBUG] 2025-10-15 10:35:03.523 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3ac04654
[DEBUG] 2025-10-15 10:35:03.523 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3ac04654
[DEBUG] 2025-10-15 10:35:03.523 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@3ac04654
[DEBUG] 2025-10-15 10:35:03.523 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4074023c
[DEBUG] 2025-10-15 10:35:03.523 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4074023c
[DEBUG] 2025-10-15 10:35:03.523 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3ed0918d
[DEBUG] 2025-10-15 10:35:03.523 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3ed0918d
[DEBUG] 2025-10-15 10:35:03.523 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@5e268ce6
[DEBUG] 2025-10-15 10:35:03.523 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@5e268ce6
[DEBUG] 2025-10-15 10:35:03.524 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@66ec9390
[DEBUG] 2025-10-15 10:35:03.524 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@66ec9390
[DEBUG] 2025-10-15 10:35:03.524 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@66ec9390
[DEBUG] 2025-10-15 10:35:03.524 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@6e91893
[DEBUG] 2025-10-15 10:35:03.524 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@6e91893
[DEBUG] 2025-10-15 10:35:03.524 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@6e91893
[DEBUG] 2025-10-15 10:35:03.524 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@3c0fbd3a
[DEBUG] 2025-10-15 10:35:03.524 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@3c0fbd3a
[DEBUG] 2025-10-15 10:35:03.524 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@562457e1
[DEBUG] 2025-10-15 10:35:03.524 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@54562ea6
[DEBUG] 2025-10-15 10:35:03.524 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@54562ea6
[DEBUG] 2025-10-15 10:35:03.524 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@1a35993f
[DEBUG] 2025-10-15 10:35:03.524 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@5b12012e
[DEBUG] 2025-10-15 10:35:03.525 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@2f7dcef2
[DEBUG] 2025-10-15 10:35:03.525 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@2f7dcef2
[DEBUG] 2025-10-15 10:35:03.525 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@2f7dcef2
[DEBUG] 2025-10-15 10:35:03.525 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@4a3be6a5
[DEBUG] 2025-10-15 10:35:03.525 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@4a3be6a5
[DEBUG] 2025-10-15 10:35:03.525 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4a3be6a5
[DEBUG] 2025-10-15 10:35:03.525 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@7cf162bc
[DEBUG] 2025-10-15 10:35:03.525 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@7cf162bc
[DEBUG] 2025-10-15 10:35:03.525 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@7cf162bc
[DEBUG] 2025-10-15 10:35:03.525 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@3721177d
[DEBUG] 2025-10-15 10:35:03.525 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@3721177d
[DEBUG] 2025-10-15 10:35:03.525 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@3721177d
[DEBUG] 2025-10-15 10:35:03.525 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@766a4535
[DEBUG] 2025-10-15 10:35:03.526 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@766a4535
[DEBUG] 2025-10-15 10:35:03.526 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@766a4535
[DEBUG] 2025-10-15 10:35:03.526 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@63718b93
[DEBUG] 2025-10-15 10:35:03.526 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@63718b93
[DEBUG] 2025-10-15 10:35:03.526 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@14e2e1c3
[DEBUG] 2025-10-15 10:35:03.526 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@14e2e1c3
[DEBUG] 2025-10-15 10:35:03.526 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@2b4786dd
[DEBUG] 2025-10-15 10:35:03.526 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@2b4786dd
[DEBUG] 2025-10-15 10:35:03.526 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@2b4786dd
[DEBUG] 2025-10-15 10:35:03.526 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@f202d6d
[DEBUG] 2025-10-15 10:35:03.526 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@60e21209
[DEBUG] 2025-10-15 10:35:03.526 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@60e21209
[DEBUG] 2025-10-15 10:35:03.526 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@630d1b2f
[DEBUG] 2025-10-15 10:35:03.527 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@746b18fd
[DEBUG] 2025-10-15 10:35:03.527 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@746b18fd
[DEBUG] 2025-10-15 10:35:03.527 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@746b18fd
[DEBUG] 2025-10-15 10:35:03.527 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7a2e0858
[DEBUG] 2025-10-15 10:35:03.527 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@aac3f4e
[DEBUG] 2025-10-15 10:35:03.527 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@1f38957
[DEBUG] 2025-10-15 10:35:03.527 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@2df3c564
[DEBUG] 2025-10-15 10:35:03.527 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@2df3c564
[DEBUG] 2025-10-15 10:35:03.527 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@2715644a
[DEBUG] 2025-10-15 10:35:03.527 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@2715644a
[DEBUG] 2025-10-15 10:35:03.527 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@4c2869a9
[DEBUG] 2025-10-15 10:35:03.527 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@518cf84a
[DEBUG] 2025-10-15 10:35:03.527 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@62e7dffa
[DEBUG] 2025-10-15 10:35:03.528 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@6edcd0d8
[DEBUG] 2025-10-15 10:35:03.528 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@6136998b
[DEBUG] 2025-10-15 10:35:03.528 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@57ce634f
[DEBUG] 2025-10-15 10:35:03.528 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@b8a7e43
[DEBUG] 2025-10-15 10:35:03.528 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@b8a7e43
[DEBUG] 2025-10-15 10:35:03.528 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@35835fa
[DEBUG] 2025-10-15 10:35:03.528 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@35835fa
[DEBUG] 2025-10-15 10:35:03.528 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@56f71edb
[DEBUG] 2025-10-15 10:35:03.528 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@56f71edb
[DEBUG] 2025-10-15 10:35:03.528 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@7207cb51
[DEBUG] 2025-10-15 10:35:03.528 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@7207cb51
[DEBUG] 2025-10-15 10:35:03.528 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@2a27cb34
[DEBUG] 2025-10-15 10:35:03.528 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@2a27cb34
[DEBUG] 2025-10-15 10:35:03.529 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6892cc6f
[DEBUG] 2025-10-15 10:35:03.529 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6fd1660
[DEBUG] 2025-10-15 10:35:03.529 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@4a6c18ad
[DEBUG] 2025-10-15 10:35:03.529 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@4a6c18ad
[DEBUG] 2025-10-15 10:35:03.529 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@5e8604bf
[DEBUG] 2025-10-15 10:35:03.529 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@20095ab4
[DEBUG] 2025-10-15 10:35:03.529 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4e2916c3
[DEBUG] 2025-10-15 10:35:03.529 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@64aad6db
[DEBUG] 2025-10-15 10:35:03.529 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@64aad6db
[DEBUG] 2025-10-15 10:35:03.529 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@ae7950d
[DEBUG] 2025-10-15 10:35:03.529 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@60d1b21f
[DEBUG] 2025-10-15 10:35:03.529 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@66c83fc8
[DEBUG] 2025-10-15 10:35:03.529 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@66c83fc8
[DEBUG] 2025-10-15 10:35:03.530 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@546621c4
[DEBUG] 2025-10-15 10:35:03.530 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@546621c4
[DEBUG] 2025-10-15 10:35:03.530 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@621f89b8
[DEBUG] 2025-10-15 10:35:03.530 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@621f89b8
[DEBUG] 2025-10-15 10:35:03.530 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@621f89b8
[DEBUG] 2025-10-15 10:35:03.530 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@f339eae
[DEBUG] 2025-10-15 10:35:03.530 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@f339eae
[DEBUG] 2025-10-15 10:35:03.530 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@f339eae
[DEBUG] 2025-10-15 10:35:03.530 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@2822c6ff
[DEBUG] 2025-10-15 10:35:03.530 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@4dafba3e
[DEBUG] 2025-10-15 10:35:03.530 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@53e3a87a
[DEBUG] 2025-10-15 10:35:03.530 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@53e3a87a
[DEBUG] 2025-10-15 10:35:03.530 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@40368a46
[DEBUG] 2025-10-15 10:35:03.530 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@40368a46
[DEBUG] 2025-10-15 10:35:03.531 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@40368a46
[DEBUG] 2025-10-15 10:35:03.531 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@7e9da981
[DEBUG] 2025-10-15 10:35:03.531 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@4ed38226
[DEBUG] 2025-10-15 10:35:03.531 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@3d43fe
[DEBUG] 2025-10-15 10:35:03.531 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3d43fe
[DEBUG] 2025-10-15 10:35:03.531 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@74ad8d05
[DEBUG] 2025-10-15 10:35:03.531 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@74ad8d05
[DEBUG] 2025-10-15 10:35:03.531 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@74ad8d05
[DEBUG] 2025-10-15 10:35:03.531 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@676ff3b0
[DEBUG] 2025-10-15 10:35:03.531 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@676ff3b0
[DEBUG] 2025-10-15 10:35:03.531 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@35ff8fc9
[DEBUG] 2025-10-15 10:35:03.531 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@35ff8fc9
[DEBUG] 2025-10-15 10:35:03.532 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@5fb7183b
[DEBUG] 2025-10-15 10:35:03.532 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@5fb7183b
[DEBUG] 2025-10-15 10:35:03.532 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@476a736d
[DEBUG] 2025-10-15 10:35:03.532 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@476a736d
[DEBUG] 2025-10-15 10:35:03.532 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@5f80fa43
[DEBUG] 2025-10-15 10:35:03.532 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@5f80fa43
[DEBUG] 2025-10-15 10:35:03.532 [main] BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@16c8b7bd
[DEBUG] 2025-10-15 10:35:03.532 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@7159139f
[DEBUG] 2025-10-15 10:35:03.538 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@540dbda9
[DEBUG] 2025-10-15 10:35:03.538 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@540dbda9
[DEBUG] 2025-10-15 10:35:03.539 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@64bfd6fd
[DEBUG] 2025-10-15 10:35:03.540 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@2ab2710
[DEBUG] 2025-10-15 10:35:03.540 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@253b380a
[DEBUG] 2025-10-15 10:35:03.540 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@29c2c826
[DEBUG] 2025-10-15 10:35:03.540 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@3350ebdd
[DEBUG] 2025-10-15 10:35:03.540 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@6818d900
[DEBUG] 2025-10-15 10:35:03.540 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@149f5761
[DEBUG] 2025-10-15 10:35:03.540 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@2ba33e2c
[DEBUG] 2025-10-15 10:35:03.540 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@1f193686
[INFO ] 2025-10-15 10:35:03.575 [main] c3p0 - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3307/hungryBadger_test
[INFO ] 2025-10-15 10:35:03.575 [main] c3p0 - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2025-10-15 10:35:03.576 [main] c3p0 - HHH10001003: Autocommit mode: false
[INFO ] 2025-10-15 10:35:03.698 [main] c3p0 - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2025-10-15 10:35:04.209 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 9.4.0
      major : 9
      minor : 4
[DEBUG] 2025-10-15 10:35:04.210 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2025-10-15 10:35:04.210 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[DEBUG] 2025-10-15 10:35:04.279 [main] dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 9.4
[DEBUG] 2025-10-15 10:35:04.289 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2025-10-15 10:35:04.289 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2025-10-15 10:35:04.307 [main] DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7d2998d8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6a0094c9)
[DEBUG] 2025-10-15 10:35:04.308 [main] DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@51a6cc2a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@10fda3d0)
[DEBUG] 2025-10-15 10:35:04.308 [main] DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2123064f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4f6b687e)
[DEBUG] 2025-10-15 10:35:04.308 [main] DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@28cb3a25) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5555ffcf)
[DEBUG] 2025-10-15 10:35:04.308 [main] DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6cfd9a54) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@78c1372d)
[DEBUG] 2025-10-15 10:35:04.308 [main] DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@9aa2002) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@73fb1d7f)
[DEBUG] 2025-10-15 10:35:04.308 [main] DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@73d4066e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@25d2f66)
[DEBUG] 2025-10-15 10:35:04.308 [main] DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5a2fa51f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@71945bc0)
[DEBUG] 2025-10-15 10:35:04.308 [main] DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@22a0d4ea) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@49ede9c7)
[DEBUG] 2025-10-15 10:35:04.310 [main] JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2025-10-15 10:35:04.310 [main] JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2025-10-15 10:35:04.310 [main] JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2025-10-15 10:35:04.313 [main] JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2025-10-15 10:35:04.313 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2025-10-15 10:35:04.317 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@31a3f4de
[DEBUG] 2025-10-15 10:35:04.317 [main] BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@64bfd6fd`
[DEBUG] 2025-10-15 10:35:04.324 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
[DEBUG] 2025-10-15 10:35:04.324 [main] BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2025-10-15 10:35:04.324 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2025-10-15 10:35:04.328 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2025-10-15 10:35:04.328 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2025-10-15 10:35:04.329 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2025-10-15 10:35:04.329 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2025-10-15 10:35:04.329 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2025-10-15 10:35:04.329 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2025-10-15 10:35:04.330 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2025-10-15 10:35:04.330 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2025-10-15 10:35:04.330 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2025-10-15 10:35:04.332 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7efd28bd] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@672b72ba]
[DEBUG] 2025-10-15 10:35:27.307 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2025-10-15 10:35:27.318 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2025-10-15 10:35:27.358 [main] Version - HHH000412: Hibernate ORM core version 6.4.3.Final
[DEBUG] 2025-10-15 10:35:27.360 [main] Environment - HHH000206: 'hibernate.properties' not found
[DEBUG] 2025-10-15 10:35:27.440 [main] LocalXmlResourceResolver - Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
[DEBUG] 2025-10-15 10:35:27.450 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2025-10-15 10:35:27.730 [main] factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2025-10-15 10:35:27.736 [main] factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2025-10-15 10:35:27.737 [main] factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2025-10-15 10:35:27.738 [main] factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2025-10-15 10:35:27.738 [main] factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2025-10-15 10:35:27.738 [main] factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2025-10-15 10:35:27.739 [main] factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2025-10-15 10:35:27.740 [main] factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2025-10-15 10:35:27.741 [main] factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2025-10-15 10:35:27.742 [main] factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2025-10-15 10:35:27.742 [main] factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2025-10-15 10:35:27.742 [main] factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2025-10-15 10:35:27.743 [main] factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2025-10-15 10:35:27.754 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[INFO ] 2025-10-15 10:35:27.755 [main] RegionFactoryInitiator - HHH000026: Second-level cache disabled
[DEBUG] 2025-10-15 10:35:27.961 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3ac04654
[DEBUG] 2025-10-15 10:35:27.961 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3ac04654
[DEBUG] 2025-10-15 10:35:27.961 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@3ac04654
[DEBUG] 2025-10-15 10:35:27.961 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4074023c
[DEBUG] 2025-10-15 10:35:27.961 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4074023c
[DEBUG] 2025-10-15 10:35:27.961 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3ed0918d
[DEBUG] 2025-10-15 10:35:27.961 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3ed0918d
[DEBUG] 2025-10-15 10:35:27.961 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@5e268ce6
[DEBUG] 2025-10-15 10:35:27.961 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@5e268ce6
[DEBUG] 2025-10-15 10:35:27.961 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@66ec9390
[DEBUG] 2025-10-15 10:35:27.961 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@66ec9390
[DEBUG] 2025-10-15 10:35:27.962 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@66ec9390
[DEBUG] 2025-10-15 10:35:27.962 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@6e91893
[DEBUG] 2025-10-15 10:35:27.962 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@6e91893
[DEBUG] 2025-10-15 10:35:27.962 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@6e91893
[DEBUG] 2025-10-15 10:35:27.962 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@3c0fbd3a
[DEBUG] 2025-10-15 10:35:27.962 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@3c0fbd3a
[DEBUG] 2025-10-15 10:35:27.962 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@562457e1
[DEBUG] 2025-10-15 10:35:27.962 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@54562ea6
[DEBUG] 2025-10-15 10:35:27.963 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@54562ea6
[DEBUG] 2025-10-15 10:35:27.963 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@1a35993f
[DEBUG] 2025-10-15 10:35:27.963 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@5b12012e
[DEBUG] 2025-10-15 10:35:27.963 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@2f7dcef2
[DEBUG] 2025-10-15 10:35:27.963 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@2f7dcef2
[DEBUG] 2025-10-15 10:35:27.963 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@2f7dcef2
[DEBUG] 2025-10-15 10:35:27.963 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@4a3be6a5
[DEBUG] 2025-10-15 10:35:27.963 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@4a3be6a5
[DEBUG] 2025-10-15 10:35:27.963 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4a3be6a5
[DEBUG] 2025-10-15 10:35:27.963 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@7cf162bc
[DEBUG] 2025-10-15 10:35:27.963 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@7cf162bc
[DEBUG] 2025-10-15 10:35:27.963 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@7cf162bc
[DEBUG] 2025-10-15 10:35:27.964 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@3721177d
[DEBUG] 2025-10-15 10:35:27.964 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@3721177d
[DEBUG] 2025-10-15 10:35:27.964 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@3721177d
[DEBUG] 2025-10-15 10:35:27.964 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@766a4535
[DEBUG] 2025-10-15 10:35:27.964 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@766a4535
[DEBUG] 2025-10-15 10:35:27.964 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@766a4535
[DEBUG] 2025-10-15 10:35:27.964 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@63718b93
[DEBUG] 2025-10-15 10:35:27.964 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@63718b93
[DEBUG] 2025-10-15 10:35:27.964 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@14e2e1c3
[DEBUG] 2025-10-15 10:35:27.964 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@14e2e1c3
[DEBUG] 2025-10-15 10:35:27.964 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@2b4786dd
[DEBUG] 2025-10-15 10:35:27.964 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@2b4786dd
[DEBUG] 2025-10-15 10:35:27.965 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@2b4786dd
[DEBUG] 2025-10-15 10:35:27.965 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@f202d6d
[DEBUG] 2025-10-15 10:35:27.965 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@60e21209
[DEBUG] 2025-10-15 10:35:27.965 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@60e21209
[DEBUG] 2025-10-15 10:35:27.965 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@630d1b2f
[DEBUG] 2025-10-15 10:35:27.965 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@746b18fd
[DEBUG] 2025-10-15 10:35:27.965 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@746b18fd
[DEBUG] 2025-10-15 10:35:27.965 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@746b18fd
[DEBUG] 2025-10-15 10:35:27.965 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7a2e0858
[DEBUG] 2025-10-15 10:35:27.965 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@aac3f4e
[DEBUG] 2025-10-15 10:35:27.965 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@1f38957
[DEBUG] 2025-10-15 10:35:27.965 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@2df3c564
[DEBUG] 2025-10-15 10:35:27.965 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@2df3c564
[DEBUG] 2025-10-15 10:35:27.965 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@2715644a
[DEBUG] 2025-10-15 10:35:27.966 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@2715644a
[DEBUG] 2025-10-15 10:35:27.966 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@4c2869a9
[DEBUG] 2025-10-15 10:35:27.966 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@518cf84a
[DEBUG] 2025-10-15 10:35:27.966 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@62e7dffa
[DEBUG] 2025-10-15 10:35:27.966 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@6edcd0d8
[DEBUG] 2025-10-15 10:35:27.966 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@6136998b
[DEBUG] 2025-10-15 10:35:27.966 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@57ce634f
[DEBUG] 2025-10-15 10:35:27.966 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@b8a7e43
[DEBUG] 2025-10-15 10:35:27.966 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@b8a7e43
[DEBUG] 2025-10-15 10:35:27.967 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@35835fa
[DEBUG] 2025-10-15 10:35:27.967 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@35835fa
[DEBUG] 2025-10-15 10:35:27.967 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@56f71edb
[DEBUG] 2025-10-15 10:35:27.967 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@56f71edb
[DEBUG] 2025-10-15 10:35:27.967 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@7207cb51
[DEBUG] 2025-10-15 10:35:27.967 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@7207cb51
[DEBUG] 2025-10-15 10:35:27.967 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@2a27cb34
[DEBUG] 2025-10-15 10:35:27.967 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@2a27cb34
[DEBUG] 2025-10-15 10:35:27.967 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6892cc6f
[DEBUG] 2025-10-15 10:35:27.967 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6fd1660
[DEBUG] 2025-10-15 10:35:27.968 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@4a6c18ad
[DEBUG] 2025-10-15 10:35:27.968 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@4a6c18ad
[DEBUG] 2025-10-15 10:35:27.968 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@5e8604bf
[DEBUG] 2025-10-15 10:35:27.968 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@20095ab4
[DEBUG] 2025-10-15 10:35:27.968 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4e2916c3
[DEBUG] 2025-10-15 10:35:27.968 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@64aad6db
[DEBUG] 2025-10-15 10:35:27.968 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@64aad6db
[DEBUG] 2025-10-15 10:35:27.968 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@ae7950d
[DEBUG] 2025-10-15 10:35:27.968 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@60d1b21f
[DEBUG] 2025-10-15 10:35:27.968 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@66c83fc8
[DEBUG] 2025-10-15 10:35:27.968 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@66c83fc8
[DEBUG] 2025-10-15 10:35:27.968 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@546621c4
[DEBUG] 2025-10-15 10:35:27.968 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@546621c4
[DEBUG] 2025-10-15 10:35:27.968 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@621f89b8
[DEBUG] 2025-10-15 10:35:27.969 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@621f89b8
[DEBUG] 2025-10-15 10:35:27.969 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@621f89b8
[DEBUG] 2025-10-15 10:35:27.969 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@f339eae
[DEBUG] 2025-10-15 10:35:27.969 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@f339eae
[DEBUG] 2025-10-15 10:35:27.969 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@f339eae
[DEBUG] 2025-10-15 10:35:27.969 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@2822c6ff
[DEBUG] 2025-10-15 10:35:27.969 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@4dafba3e
[DEBUG] 2025-10-15 10:35:27.969 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@53e3a87a
[DEBUG] 2025-10-15 10:35:27.969 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@53e3a87a
[DEBUG] 2025-10-15 10:35:27.969 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@40368a46
[DEBUG] 2025-10-15 10:35:27.969 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@40368a46
[DEBUG] 2025-10-15 10:35:27.969 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@40368a46
[DEBUG] 2025-10-15 10:35:27.969 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@7e9da981
[DEBUG] 2025-10-15 10:35:27.969 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@4ed38226
[DEBUG] 2025-10-15 10:35:27.969 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@3d43fe
[DEBUG] 2025-10-15 10:35:27.970 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3d43fe
[DEBUG] 2025-10-15 10:35:27.970 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@74ad8d05
[DEBUG] 2025-10-15 10:35:27.970 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@74ad8d05
[DEBUG] 2025-10-15 10:35:27.970 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@74ad8d05
[DEBUG] 2025-10-15 10:35:27.970 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@676ff3b0
[DEBUG] 2025-10-15 10:35:27.970 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@676ff3b0
[DEBUG] 2025-10-15 10:35:27.970 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@35ff8fc9
[DEBUG] 2025-10-15 10:35:27.970 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@35ff8fc9
[DEBUG] 2025-10-15 10:35:27.970 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@5fb7183b
[DEBUG] 2025-10-15 10:35:27.970 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@5fb7183b
[DEBUG] 2025-10-15 10:35:27.970 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@476a736d
[DEBUG] 2025-10-15 10:35:27.970 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@476a736d
[DEBUG] 2025-10-15 10:35:27.971 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@5f80fa43
[DEBUG] 2025-10-15 10:35:27.971 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@5f80fa43
[DEBUG] 2025-10-15 10:35:27.971 [main] BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@16c8b7bd
[DEBUG] 2025-10-15 10:35:27.971 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@7159139f
[DEBUG] 2025-10-15 10:35:27.977 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@540dbda9
[DEBUG] 2025-10-15 10:35:27.977 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@540dbda9
[DEBUG] 2025-10-15 10:35:27.979 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@64bfd6fd
[DEBUG] 2025-10-15 10:35:27.979 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@2ab2710
[DEBUG] 2025-10-15 10:35:27.979 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@253b380a
[DEBUG] 2025-10-15 10:35:27.979 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@29c2c826
[DEBUG] 2025-10-15 10:35:27.979 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@3350ebdd
[DEBUG] 2025-10-15 10:35:27.979 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@6818d900
[DEBUG] 2025-10-15 10:35:27.980 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@149f5761
[DEBUG] 2025-10-15 10:35:27.980 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@2ba33e2c
[DEBUG] 2025-10-15 10:35:27.980 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@1f193686
[INFO ] 2025-10-15 10:35:28.016 [main] c3p0 - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3307/hungryBadger_test
[INFO ] 2025-10-15 10:35:28.016 [main] c3p0 - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2025-10-15 10:35:28.016 [main] c3p0 - HHH10001003: Autocommit mode: false
[INFO ] 2025-10-15 10:35:28.150 [main] c3p0 - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2025-10-15 10:35:28.653 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 9.4.0
      major : 9
      minor : 4
[DEBUG] 2025-10-15 10:35:28.653 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2025-10-15 10:35:28.653 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[DEBUG] 2025-10-15 10:35:28.721 [main] dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 9.4
[DEBUG] 2025-10-15 10:35:28.731 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2025-10-15 10:35:28.731 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2025-10-15 10:35:28.750 [main] DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7d2998d8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6a0094c9)
[DEBUG] 2025-10-15 10:35:28.750 [main] DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@51a6cc2a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@10fda3d0)
[DEBUG] 2025-10-15 10:35:28.750 [main] DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2123064f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4f6b687e)
[DEBUG] 2025-10-15 10:35:28.751 [main] DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@28cb3a25) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5555ffcf)
[DEBUG] 2025-10-15 10:35:28.751 [main] DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6cfd9a54) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@78c1372d)
[DEBUG] 2025-10-15 10:35:28.751 [main] DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@9aa2002) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@73fb1d7f)
[DEBUG] 2025-10-15 10:35:28.751 [main] DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@73d4066e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@25d2f66)
[DEBUG] 2025-10-15 10:35:28.751 [main] DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5a2fa51f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@71945bc0)
[DEBUG] 2025-10-15 10:35:28.751 [main] DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@22a0d4ea) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@49ede9c7)
[DEBUG] 2025-10-15 10:35:28.753 [main] JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2025-10-15 10:35:28.753 [main] JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2025-10-15 10:35:28.753 [main] JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2025-10-15 10:35:28.756 [main] JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2025-10-15 10:35:28.756 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2025-10-15 10:35:28.760 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@31a3f4de
[DEBUG] 2025-10-15 10:35:28.760 [main] BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@64bfd6fd`
[DEBUG] 2025-10-15 10:35:28.767 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
[DEBUG] 2025-10-15 10:35:28.767 [main] BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2025-10-15 10:35:28.767 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2025-10-15 10:35:28.772 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2025-10-15 10:35:28.772 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2025-10-15 10:35:28.772 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2025-10-15 10:35:28.772 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2025-10-15 10:35:28.772 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2025-10-15 10:35:28.772 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2025-10-15 10:35:28.773 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2025-10-15 10:35:28.773 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2025-10-15 10:35:28.773 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2025-10-15 10:35:28.775 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7efd28bd] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@672b72ba]
[DEBUG] 2025-10-15 10:35:28.828 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2025-10-15 10:35:28.871 [main] EntityBinder - Binding entity from annotated class: org.hungrybadger.entity.Review
[DEBUG] 2025-10-15 10:35:28.883 [main] EntityBinder - Import with entity name Review
[DEBUG] 2025-10-15 10:35:28.891 [main] EntityBinder - Bind entity org.hungrybadger.entity.Review on table review
[DEBUG] 2025-10-15 10:35:28.903 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2025-10-15 10:35:28.925 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2025-10-15 10:35:28.926 [main] ClassLoaderAccessImpl - Not known whether passed class name [org.hungrybadger.entity.Review] is safe
[DEBUG] 2025-10-15 10:35:28.926 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.hungrybadger.entity.Review
[DEBUG] 2025-10-15 10:35:28.929 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2025-10-15 10:35:28.934 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.hungrybadger.entity.Review:id]
[DEBUG] 2025-10-15 10:35:28.939 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2025-10-15 10:35:28.943 [main] BasicValue - Skipping column re-registration: review.id
[DEBUG] 2025-10-15 10:35:28.944 [main] PropertyBinder - Building property id
[DEBUG] 2025-10-15 10:35:28.949 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2025-10-15 10:35:28.954 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='cuisine_type')
[DEBUG] 2025-10-15 10:35:28.954 [main] PropertyBinder - MetadataSourceProcessor property cuisineType with lazy=false
[DEBUG] 2025-10-15 10:35:28.954 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.hungrybadger.entity.Review:cuisineType]
[DEBUG] 2025-10-15 10:35:28.954 [main] BasicValueBinder - building BasicValue for cuisineType
[DEBUG] 2025-10-15 10:35:28.954 [main] BasicValue - Skipping column re-registration: review.cuisine_type
[DEBUG] 2025-10-15 10:35:28.954 [main] PropertyBinder - Building property cuisineType
[DEBUG] 2025-10-15 10:35:28.955 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='personal_notes')
[DEBUG] 2025-10-15 10:35:28.955 [main] PropertyBinder - MetadataSourceProcessor property personalNotes with lazy=false
[DEBUG] 2025-10-15 10:35:28.955 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.hungrybadger.entity.Review:personalNotes]
[DEBUG] 2025-10-15 10:35:28.955 [main] BasicValueBinder - building BasicValue for personalNotes
[DEBUG] 2025-10-15 10:35:28.955 [main] BasicValue - Skipping column re-registration: review.personal_notes
[DEBUG] 2025-10-15 10:35:28.956 [main] PropertyBinder - Building property personalNotes
[DEBUG] 2025-10-15 10:35:28.956 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='personal_rating')
[DEBUG] 2025-10-15 10:35:28.956 [main] PropertyBinder - MetadataSourceProcessor property personalRating with lazy=false
[DEBUG] 2025-10-15 10:35:28.956 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.hungrybadger.entity.Review:personalRating]
[DEBUG] 2025-10-15 10:35:28.956 [main] BasicValueBinder - building BasicValue for personalRating
[DEBUG] 2025-10-15 10:35:28.956 [main] BasicValue - Skipping column re-registration: review.personal_rating
[DEBUG] 2025-10-15 10:35:28.956 [main] PropertyBinder - Building property personalRating
[DEBUG] 2025-10-15 10:35:28.956 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='restaurant_name')
[DEBUG] 2025-10-15 10:35:28.956 [main] PropertyBinder - MetadataSourceProcessor property restaurantName with lazy=false
[DEBUG] 2025-10-15 10:35:28.957 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.hungrybadger.entity.Review:restaurantName]
[DEBUG] 2025-10-15 10:35:28.957 [main] BasicValueBinder - building BasicValue for restaurantName
[DEBUG] 2025-10-15 10:35:28.957 [main] BasicValue - Skipping column re-registration: review.restaurant_name
[DEBUG] 2025-10-15 10:35:28.957 [main] PropertyBinder - Building property restaurantName
[DEBUG] 2025-10-15 10:35:28.958 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: org.hungrybadger.entity
[DEBUG] 2025-10-15 10:35:28.966 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2025-10-15 10:35:28.966 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for cuisineType
[DEBUG] 2025-10-15 10:35:28.968 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for personalNotes
[DEBUG] 2025-10-15 10:35:28.968 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for personalRating
[DEBUG] 2025-10-15 10:35:28.968 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for restaurantName
[DEBUG] 2025-10-15 10:35:28.971 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [review]
[DEBUG] 2025-10-15 10:35:29.229 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2025-10-15 10:35:29.290 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2025-10-15 10:35:29.291 [main] SessionFactoryImpl - Instantiating SessionFactory with settings: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=11, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, java.class.path=C:\Program Files\JetBrains\IntelliJ IDEA 2025.2.1\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2025.2.1\plugins\junit\lib\junit5-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2025.2.1\plugins\junit\lib\junit-rt.jar;C:\Users\mamcc\IdeaProjects\PersonalFoodReviewer\target\test-classes;C:\Users\mamcc\IdeaProjects\PersonalFoodReviewer\target\classes;C:\Users\mamcc\.m2\repository\org\hibernate\orm\hibernate-core\6.4.3.Final\hibernate-core-6.4.3.Final.jar;C:\Users\mamcc\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\mamcc\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\mamcc\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\mamcc\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\mamcc\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\mamcc\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\mamcc\.m2\repository\net\bytebuddy\byte-buddy\1.14.7\byte-buddy-1.14.7.jar;C:\Users\mamcc\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\mamcc\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\mamcc\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\mamcc\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\mamcc\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\mamcc\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\mamcc\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\mamcc\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\mamcc\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\mamcc\.m2\repository\org\hibernate\orm\hibernate-c3p0\6.4.3.Final\hibernate-c3p0-6.4.3.Final.jar;C:\Users\mamcc\.m2\repository\com\mchange\c3p0\0.9.5.5\c3p0-0.9.5.5.jar;C:\Users\mamcc\.m2\repository\com\mchange\mchange-commons-java\0.2.19\mchange-commons-java-0.2.19.jar;C:\Users\mamcc\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\mamcc\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\mamcc\.m2\repository\javax\javaee-web-api\7.0\javaee-web-api-7.0.jar;C:\Users\mamcc\.m2\repository\mysql\mysql-connector-java\8.0.16\mysql-connector-java-8.0.16.jar;C:\Users\mamcc\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\mamcc\.m2\repository\org\apache\logging\log4j\log4j-api\2.17.1\log4j-api-2.17.1.jar;C:\Users\mamcc\.m2\repository\org\apache\logging\log4j\log4j-core\2.17.1\log4j-core-2.17.1.jar;C:\Users\mamcc\.m2\repository\jstl\jstl\1.2\jstl-1.2.jar;C:\Users\mamcc\.m2\repository\org\junit\platform\junit-platform-runner\1.0.0\junit-platform-runner-1.0.0.jar;C:\Users\mamcc\.m2\repository\org\apiguardian\apiguardian-api\1.0.0\apiguardian-api-1.0.0.jar;C:\Users\mamcc\.m2\repository\org\junit\platform\junit-platform-launcher\1.0.0\junit-platform-launcher-1.0.0.jar;C:\Users\mamcc\.m2\repository\org\junit\platform\junit-platform-suite-api\1.0.0\junit-platform-suite-api-1.0.0.jar;C:\Users\mamcc\.m2\repository\org\junit\platform\junit-platform-commons\1.0.0\junit-platform-commons-1.0.0.jar;C:\Users\mamcc\.m2\repository\org\junit\vintage\junit-vintage-engine\4.12.0\junit-vintage-engine-4.12.0.jar;C:\Users\mamcc\.m2\repository\org\junit\platform\junit-platform-engine\1.0.0\junit-platform-engine-1.0.0.jar;C:\Users\mamcc\.m2\repository\org\opentest4j\opentest4j\1.0.0\opentest4j-1.0.0.jar;C:\Users\mamcc\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.0.0\junit-jupiter-engine-5.0.0.jar;C:\Users\mamcc\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.0.0\junit-jupiter-api-5.0.0.jar, kotlinx.coroutines.debug.enable.mutable.state.flows.stack.trace=true, java.vm.vendor=Eclipse Adoptium, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=https://adoptium.net/, user.timezone=America/Chicago, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Eclipse Adoptium\jdk-11.0.28.6-hotspot\bin, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 org.hungrybadger.persistence.ReviewDaoTest,getByIdSuccess, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\mamcc, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2025-07-15, java.home=C:\Program Files\Eclipse Adoptium\jdk-11.0.28.6-hotspot, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, intellij.debug.agent=true, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, user.script=, connection.password=Marthacodes, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=11.0.28+6, user.name=Test, path.separator=;, kotlinx.coroutines.debug.enable.creation.stack.trace=false, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3307/hungryBadger_test, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, java.vendor.version=Temurin-11.0.28+6, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=C:\Users\mamcc\AppData\Local\Temp\, java.version=11.0.28, jboss.modules.system.pkgs=com.intellij.rt, user.dir=C:\Users\mamcc\IdeaProjects\PersonalFoodReviewer, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7ef8eda7, kotlinx.coroutines.debug.enable.flows.stack.trace=true, java.library.path=C:\Program Files\Eclipse Adoptium\jdk-11.0.28.6-hotspot\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Microsoft\jdk-21.0.2.13-hotspot\bin;C:\Program Files\Eclipse Adoptium\jdk-11.0.28.6-hotspot\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\dotnet\;C:\Program Files\Amazon\AWSCLIV2\;C:\Program Files\nodejs\;C:\Program Files\MySQL\MySQL Server 9.0\bin;C:\Program Files\NVIDIA Corporation\NVIDIA app\NvDLISR;C:\Program Files\Git\cmd;C:\Users\mamcc\AppData\Local\Microsoft\WindowsApps;;C:\Users\mamcc\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\mamcc\AppData\Roaming\npm;., java.vendor=Eclipse Adoptium, java.vm.info=mixed mode, java.vm.version=11.0.28+6, java.specification.maintenance.version=3, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3307/hungryBadger_test, debugger.agent.enable.coroutines=true, java.class.version=55.0}
[DEBUG] 2025-10-15 10:35:29.296 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2025-10-15 10:35:29.304 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2025-10-15 10:35:29.362 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2025-10-15 10:35:29.362 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2025-10-15 10:35:29.363 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2025-10-15 10:35:29.364 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2025-10-15 10:35:29.366 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@ac91282] under count; prior registration was null
[DEBUG] 2025-10-15 10:35:29.367 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@2f677247] under every; prior registration was null
[DEBUG] 2025-10-15 10:35:29.367 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@43f03c23] under any; prior registration was null
[DEBUG] 2025-10-15 10:35:29.367 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2025-10-15 10:35:29.367 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2025-10-15 10:35:29.367 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2025-10-15 10:35:29.367 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2025-10-15 10:35:29.368 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2025-10-15 10:35:29.368 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2025-10-15 10:35:29.368 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2025-10-15 10:35:29.368 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2025-10-15 10:35:29.368 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2025-10-15 10:35:29.369 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2025-10-15 10:35:29.369 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2025-10-15 10:35:29.369 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2025-10-15 10:35:29.369 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2025-10-15 10:35:29.369 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2025-10-15 10:35:29.369 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2025-10-15 10:35:29.369 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2025-10-15 10:35:29.369 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2025-10-15 10:35:29.372 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7c40ffef] under sinh; prior registration was null
[DEBUG] 2025-10-15 10:35:29.372 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@286855ea] under cosh; prior registration was null
[DEBUG] 2025-10-15 10:35:29.372 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@64aeaf29] under tanh; prior registration was null
[DEBUG] 2025-10-15 10:35:29.372 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1e3df614] under pi; prior registration was null
[DEBUG] 2025-10-15 10:35:29.372 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6579cdbb] under log; prior registration was null
[DEBUG] 2025-10-15 10:35:29.372 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2025-10-15 10:35:29.372 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2025-10-15 10:35:29.373 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2025-10-15 10:35:29.373 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2025-10-15 10:35:29.373 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2025-10-15 10:35:29.373 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2025-10-15 10:35:29.373 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2025-10-15 10:35:29.373 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2025-10-15 10:35:29.373 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2025-10-15 10:35:29.373 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2025-10-15 10:35:29.373 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2025-10-15 10:35:29.373 [main] SqmFunctionRegistry - Registering alternate key : length -> character_length
[DEBUG] 2025-10-15 10:35:29.374 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@66f5a02e] under position; prior registration was null
[DEBUG] 2025-10-15 10:35:29.376 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@17207f5b] under overlay; prior registration was null
[DEBUG] 2025-10-15 10:35:29.377 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@6fe595dc] under trim; prior registration was null
[DEBUG] 2025-10-15 10:35:29.378 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@27fe059d] under cast; prior registration was null
[DEBUG] 2025-10-15 10:35:29.378 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@766a52f5] under collate; prior registration was null
[DEBUG] 2025-10-15 10:35:29.379 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@58fd1214] under extract; prior registration was null
[DEBUG] 2025-10-15 10:35:29.379 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2025-10-15 10:35:29.379 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2025-10-15 10:35:29.380 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@337a6d30] under ifnull; prior registration was null
[DEBUG] 2025-10-15 10:35:29.380 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2025-10-15 10:35:29.380 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2025-10-15 10:35:29.380 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@750ed637] under pad; prior registration was null
[DEBUG] 2025-10-15 10:35:29.381 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@18d11527] under str; prior registration was null
[DEBUG] 2025-10-15 10:35:29.382 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@575cabf0] under format; prior registration was null
[DEBUG] 2025-10-15 10:35:29.383 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@1f992a3a] under timestampadd; prior registration was null
[DEBUG] 2025-10-15 10:35:29.384 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@6002e944] under timestampdiff; prior registration was null
[DEBUG] 2025-10-15 10:35:29.384 [main] SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
[DEBUG] 2025-10-15 10:35:29.384 [main] SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
[DEBUG] 2025-10-15 10:35:29.384 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@f171912] under current_date; prior registration was null
[DEBUG] 2025-10-15 10:35:29.384 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7d4d8579] under current_time; prior registration was null
[DEBUG] 2025-10-15 10:35:29.384 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@159424e2] under current_timestamp; prior registration was null
[DEBUG] 2025-10-15 10:35:29.384 [main] SqmFunctionRegistry - Registering alternate key : current date -> current_date
[DEBUG] 2025-10-15 10:35:29.384 [main] SqmFunctionRegistry - Registering alternate key : current time -> current_time
[DEBUG] 2025-10-15 10:35:29.384 [main] SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2025-10-15 10:35:29.384 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@29bcf51d] under local_date; prior registration was null
[DEBUG] 2025-10-15 10:35:29.385 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1e54a6b1] under local_time; prior registration was null
[DEBUG] 2025-10-15 10:35:29.385 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@f238e4f] under local_datetime; prior registration was null
[DEBUG] 2025-10-15 10:35:29.385 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3b24087d] under offset_datetime; prior registration was null
[DEBUG] 2025-10-15 10:35:29.385 [main] SqmFunctionRegistry - Registering alternate key : local date -> local_date
[DEBUG] 2025-10-15 10:35:29.385 [main] SqmFunctionRegistry - Registering alternate key : local time -> local_time
[DEBUG] 2025-10-15 10:35:29.385 [main] SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
[DEBUG] 2025-10-15 10:35:29.385 [main] SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2025-10-15 10:35:29.385 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@75fe1619] under instant; prior registration was null
[DEBUG] 2025-10-15 10:35:29.385 [main] SqmFunctionRegistry - Registering alternate key : current_instant -> instant
[DEBUG] 2025-10-15 10:35:29.385 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@4351ed61] under sql; prior registration was null
[DEBUG] 2025-10-15 10:35:29.385 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2025-10-15 10:35:29.386 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2025-10-15 10:35:29.386 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2025-10-15 10:35:29.386 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2025-10-15 10:35:29.386 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6579cdbb
[DEBUG] 2025-10-15 10:35:29.386 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
[DEBUG] 2025-10-15 10:35:29.386 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2025-10-15 10:35:29.386 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2025-10-15 10:35:29.386 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2025-10-15 10:35:29.386 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2025-10-15 10:35:29.386 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
[DEBUG] 2025-10-15 10:35:29.386 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2025-10-15 10:35:29.386 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2025-10-15 10:35:29.387 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@1c34365c] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
[DEBUG] 2025-10-15 10:35:29.387 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@348137e8] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
[DEBUG] 2025-10-15 10:35:29.387 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
[DEBUG] 2025-10-15 10:35:29.387 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2025-10-15 10:35:29.387 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2025-10-15 10:35:29.387 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2025-10-15 10:35:29.387 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2025-10-15 10:35:29.387 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2025-10-15 10:35:29.387 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2025-10-15 10:35:29.387 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2025-10-15 10:35:29.388 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
[DEBUG] 2025-10-15 10:35:29.388 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
[DEBUG] 2025-10-15 10:35:29.388 [main] SqmFunctionRegistry - Registering alternate key : day -> dayofmonth
[DEBUG] 2025-10-15 10:35:29.388 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
[DEBUG] 2025-10-15 10:35:29.388 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2025-10-15 10:35:29.388 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2025-10-15 10:35:29.388 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2025-10-15 10:35:29.388 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2025-10-15 10:35:29.388 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
[DEBUG] 2025-10-15 10:35:29.388 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
[DEBUG] 2025-10-15 10:35:29.388 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
[DEBUG] 2025-10-15 10:35:29.388 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
[DEBUG] 2025-10-15 10:35:29.388 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
[DEBUG] 2025-10-15 10:35:29.388 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
[DEBUG] 2025-10-15 10:35:29.388 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
[DEBUG] 2025-10-15 10:35:29.388 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2025-10-15 10:35:29.389 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
[DEBUG] 2025-10-15 10:35:29.389 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
[DEBUG] 2025-10-15 10:35:29.389 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
[DEBUG] 2025-10-15 10:35:29.389 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
[DEBUG] 2025-10-15 10:35:29.389 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2025-10-15 10:35:29.389 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2025-10-15 10:35:29.389 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2025-10-15 10:35:29.389 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2025-10-15 10:35:29.389 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2025-10-15 10:35:29.389 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@412c5e8b] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@66f5a02e
[DEBUG] 2025-10-15 10:35:29.389 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2025-10-15 10:35:29.389 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2025-10-15 10:35:29.389 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2025-10-15 10:35:29.394 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@4bb147ec] under trunc; prior registration was null
[DEBUG] 2025-10-15 10:35:29.394 [main] SqmFunctionRegistry - Registering alternate key : truncate -> trunc
[DEBUG] 2025-10-15 10:35:29.394 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2025-10-15 10:35:29.394 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@33f2cfda] under bitand; prior registration was null
[DEBUG] 2025-10-15 10:35:29.394 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@68ef01a5] under bitor; prior registration was null
[DEBUG] 2025-10-15 10:35:29.394 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@59a2388e] under bitxor; prior registration was null
[DEBUG] 2025-10-15 10:35:29.394 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@186d8a71] under bitnot; prior registration was null
[DEBUG] 2025-10-15 10:35:29.394 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2025-10-15 10:35:29.395 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2025-10-15 10:35:29.395 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
[DEBUG] 2025-10-15 10:35:29.395 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2025-10-15 10:35:29.395 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2025-10-15 10:35:29.395 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
[DEBUG] 2025-10-15 10:35:29.395 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2025-10-15 10:35:29.395 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2025-10-15 10:35:29.395 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
[DEBUG] 2025-10-15 10:35:29.395 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
[DEBUG] 2025-10-15 10:35:29.395 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
[DEBUG] 2025-10-15 10:35:29.395 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
[DEBUG] 2025-10-15 10:35:29.395 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
[DEBUG] 2025-10-15 10:35:29.395 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@3dc40ab9] under format; prior registration was org.hibernate.dialect.function.FormatFunction@575cabf0
[DEBUG] 2025-10-15 10:35:29.395 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
[DEBUG] 2025-10-15 10:35:29.396 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
[DEBUG] 2025-10-15 10:35:29.396 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2025-10-15 10:35:29.396 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2025-10-15 10:35:29.396 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@1e54a6b1
[DEBUG] 2025-10-15 10:35:29.396 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@f238e4f
[DEBUG] 2025-10-15 10:35:29.396 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
[DEBUG] 2025-10-15 10:35:29.396 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2db6d68d] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1e3df614
[DEBUG] 2025-10-15 10:35:29.396 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6518fdfd] under chr; prior registration was null
[DEBUG] 2025-10-15 10:35:29.396 [main] SqmFunctionRegistry - Registering alternate key : char -> chr
[DEBUG] 2025-10-15 10:35:29.396 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@11d2dd2d] under sysdate; prior registration was null
[DEBUG] 2025-10-15 10:35:29.396 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2025-10-15 10:35:29.396 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2025-10-15 10:35:29.397 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2025-10-15 10:35:29.397 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2025-10-15 10:35:29.397 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2025-10-15 10:35:29.397 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2025-10-15 10:35:29.398 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@13ed066e] under rank; prior registration was null
[DEBUG] 2025-10-15 10:35:29.398 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@4d705112] under dense_rank; prior registration was null
[DEBUG] 2025-10-15 10:35:29.398 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@590765c4] under percent_rank; prior registration was null
[DEBUG] 2025-10-15 10:35:29.399 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@19489b27] under cume_dist; prior registration was null
[DEBUG] 2025-10-15 10:35:29.399 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@125d47c4] under listagg; prior registration was null
[DEBUG] 2025-10-15 10:35:29.403 [main] HQL_FUNCTIONS - abs(NUMERIC arg)
[DEBUG] 2025-10-15 10:35:29.403 [main] HQL_FUNCTIONS - Double acos(NUMERIC arg)
[DEBUG] 2025-10-15 10:35:29.403 [main] HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days)
[DEBUG] 2025-10-15 10:35:29.403 [main] HQL_FUNCTIONS - addtime(TIME datetime, TIME time)
[DEBUG] 2025-10-15 10:35:29.403 [main] HQL_FUNCTIONS - Boolean any(BOOLEAN arg)
[DEBUG] 2025-10-15 10:35:29.403 [main] HQL_FUNCTIONS - Integer ascii(STRING arg)
[DEBUG] 2025-10-15 10:35:29.403 [main] HQL_FUNCTIONS - Double asin(NUMERIC arg)
[DEBUG] 2025-10-15 10:35:29.404 [main] HQL_FUNCTIONS - Double atan(NUMERIC arg)
[DEBUG] 2025-10-15 10:35:29.404 [main] HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2025-10-15 10:35:29.404 [main] HQL_FUNCTIONS - avg(arg)
[DEBUG] 2025-10-15 10:35:29.404 [main] HQL_FUNCTIONS - bit_and(arg)
[DEBUG] 2025-10-15 10:35:29.404 [main] HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2025-10-15 10:35:29.404 [main] HQL_FUNCTIONS - bit_or(arg)
[DEBUG] 2025-10-15 10:35:29.404 [main] HQL_FUNCTIONS - bitand(arg0, arg1)
[DEBUG] 2025-10-15 10:35:29.404 [main] HQL_FUNCTIONS - bitnot(arg)
[DEBUG] 2025-10-15 10:35:29.404 [main] HQL_FUNCTIONS - bitor(arg0, arg1)
[DEBUG] 2025-10-15 10:35:29.404 [main] HQL_FUNCTIONS - bitxor(arg0, arg1)
[DEBUG] 2025-10-15 10:35:29.404 [main] HQL_FUNCTIONS - cast(arg as Type)
[DEBUG] 2025-10-15 10:35:29.404 [main] HQL_FUNCTIONS - ceiling(NUMERIC arg)
[DEBUG] 2025-10-15 10:35:29.404 [main] HQL_FUNCTIONS - Character char(INTEGER arg)
[DEBUG] 2025-10-15 10:35:29.404 [main] HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2025-10-15 10:35:29.404 [main] HQL_FUNCTIONS - Character chr(INTEGER arg)
[DEBUG] 2025-10-15 10:35:29.404 [main] HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
[DEBUG] 2025-10-15 10:35:29.404 [main] HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
[DEBUG] 2025-10-15 10:35:29.404 [main] HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2025-10-15 10:35:29.404 [main] HQL_FUNCTIONS - Double cos(NUMERIC arg)
[DEBUG] 2025-10-15 10:35:29.404 [main] HQL_FUNCTIONS - Double cosh(NUMERIC arg)
[DEBUG] 2025-10-15 10:35:29.404 [main] HQL_FUNCTIONS - Double cot(NUMERIC arg)
[DEBUG] 2025-10-15 10:35:29.404 [main] HQL_FUNCTIONS - Long count([distinct ]{arg|*})
[DEBUG] 2025-10-15 10:35:29.404 [main] HQL_FUNCTIONS - Integer crc32(arg)
[DEBUG] 2025-10-15 10:35:29.404 [main] HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
[DEBUG] 2025-10-15 10:35:29.404 [main] HQL_FUNCTIONS - Date curdate()
[DEBUG] 2025-10-15 10:35:29.405 [main] HQL_FUNCTIONS - Date current date
[DEBUG] 2025-10-15 10:35:29.405 [main] HQL_FUNCTIONS - Time current time
[DEBUG] 2025-10-15 10:35:29.405 [main] HQL_FUNCTIONS - Timestamp current timestamp
[DEBUG] 2025-10-15 10:35:29.405 [main] HQL_FUNCTIONS - Date current_date
[DEBUG] 2025-10-15 10:35:29.405 [main] HQL_FUNCTIONS - Instant current_instant
[DEBUG] 2025-10-15 10:35:29.405 [main] HQL_FUNCTIONS - Time current_time
[DEBUG] 2025-10-15 10:35:29.405 [main] HQL_FUNCTIONS - Timestamp current_timestamp
[DEBUG] 2025-10-15 10:35:29.405 [main] HQL_FUNCTIONS - Time curtime()
[DEBUG] 2025-10-15 10:35:29.405 [main] HQL_FUNCTIONS - Date date(arg)
[DEBUG] 2025-10-15 10:35:29.405 [main] HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2025-10-15 10:35:29.405 [main] HQL_FUNCTIONS - Integer datediff(DATE end, DATE start)
[DEBUG] 2025-10-15 10:35:29.405 [main] HQL_FUNCTIONS - Integer day(DATE arg)
[DEBUG] 2025-10-15 10:35:29.405 [main] HQL_FUNCTIONS - String dayname(DATE arg)
[DEBUG] 2025-10-15 10:35:29.405 [main] HQL_FUNCTIONS - Integer dayofmonth(DATE arg)
[DEBUG] 2025-10-15 10:35:29.405 [main] HQL_FUNCTIONS - Integer dayofweek(DATE arg)
[DEBUG] 2025-10-15 10:35:29.405 [main] HQL_FUNCTIONS - Integer dayofyear(DATE arg)
[DEBUG] 2025-10-15 10:35:29.405 [main] HQL_FUNCTIONS - Double degrees(NUMERIC arg)
[DEBUG] 2025-10-15 10:35:29.405 [main] HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
[DEBUG] 2025-10-15 10:35:29.405 [main] HQL_FUNCTIONS - Boolean every(BOOLEAN arg)
[DEBUG] 2025-10-15 10:35:29.405 [main] HQL_FUNCTIONS - Double exp(NUMERIC arg)
[DEBUG] 2025-10-15 10:35:29.405 [main] HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2025-10-15 10:35:29.405 [main] HQL_FUNCTIONS - first_valueANY value
[DEBUG] 2025-10-15 10:35:29.405 [main] HQL_FUNCTIONS - floor(NUMERIC arg)
[DEBUG] 2025-10-15 10:35:29.405 [main] HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2025-10-15 10:35:29.405 [main] HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2025-10-15 10:35:29.405 [main] HQL_FUNCTIONS - Integer hour(TIME arg)
[DEBUG] 2025-10-15 10:35:29.405 [main] HQL_FUNCTIONS - ifnull(arg0, arg1)
[DEBUG] 2025-10-15 10:35:29.405 [main] HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2025-10-15 10:35:29.406 [main] HQL_FUNCTIONS - Instant instant
[DEBUG] 2025-10-15 10:35:29.406 [main] HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2025-10-15 10:35:29.406 [main] HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2025-10-15 10:35:29.406 [main] HQL_FUNCTIONS - Date last_day(DATE arg)
[DEBUG] 2025-10-15 10:35:29.406 [main] HQL_FUNCTIONS - last_valueANY value
[DEBUG] 2025-10-15 10:35:29.406 [main] HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2025-10-15 10:35:29.406 [main] HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2025-10-15 10:35:29.406 [main] HQL_FUNCTIONS - String left(STRING string, INTEGER length)
[DEBUG] 2025-10-15 10:35:29.406 [main] HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
[DEBUG] 2025-10-15 10:35:29.406 [main] HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
[DEBUG] 2025-10-15 10:35:29.406 [main] HQL_FUNCTIONS - Double ln(NUMERIC arg)
[DEBUG] 2025-10-15 10:35:29.406 [main] HQL_FUNCTIONS - LocalDate local date
[DEBUG] 2025-10-15 10:35:29.406 [main] HQL_FUNCTIONS - LocalDateTime local datetime
[DEBUG] 2025-10-15 10:35:29.406 [main] HQL_FUNCTIONS - LocalTime local time
[DEBUG] 2025-10-15 10:35:29.406 [main] HQL_FUNCTIONS - LocalDate local_date
[DEBUG] 2025-10-15 10:35:29.406 [main] HQL_FUNCTIONS - LocalDateTime local_datetime
[DEBUG] 2025-10-15 10:35:29.406 [main] HQL_FUNCTIONS - LocalTime local_time
[DEBUG] 2025-10-15 10:35:29.406 [main] HQL_FUNCTIONS - Timestamp localtime
[DEBUG] 2025-10-15 10:35:29.406 [main] HQL_FUNCTIONS - Timestamp localtimestamp
[DEBUG] 2025-10-15 10:35:29.406 [main] HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2025-10-15 10:35:29.406 [main] HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
[DEBUG] 2025-10-15 10:35:29.406 [main] HQL_FUNCTIONS - Double log10(NUMERIC arg)
[DEBUG] 2025-10-15 10:35:29.406 [main] HQL_FUNCTIONS - Double log2(NUMERIC arg)
[DEBUG] 2025-10-15 10:35:29.406 [main] HQL_FUNCTIONS - String lower(STRING string)
[DEBUG] 2025-10-15 10:35:29.406 [main] HQL_FUNCTIONS - String lpad(string, length[, padding])
[DEBUG] 2025-10-15 10:35:29.406 [main] HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
[DEBUG] 2025-10-15 10:35:29.406 [main] HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear)
[DEBUG] 2025-10-15 10:35:29.406 [main] HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
[DEBUG] 2025-10-15 10:35:29.407 [main] HQL_FUNCTIONS - max(COMPARABLE arg)
[DEBUG] 2025-10-15 10:35:29.407 [main] HQL_FUNCTIONS - String md5(arg)
[DEBUG] 2025-10-15 10:35:29.407 [main] HQL_FUNCTIONS - Integer microsecond(TIME arg)
[DEBUG] 2025-10-15 10:35:29.407 [main] HQL_FUNCTIONS - min(COMPARABLE arg)
[DEBUG] 2025-10-15 10:35:29.407 [main] HQL_FUNCTIONS - Integer minute(TIME arg)
[DEBUG] 2025-10-15 10:35:29.407 [main] HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2025-10-15 10:35:29.407 [main] HQL_FUNCTIONS - Integer month(DATE arg)
[DEBUG] 2025-10-15 10:35:29.407 [main] HQL_FUNCTIONS - String monthname(DATE arg)
[DEBUG] 2025-10-15 10:35:29.407 [main] HQL_FUNCTIONS - Timestamp now()
[DEBUG] 2025-10-15 10:35:29.407 [main] HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
[DEBUG] 2025-10-15 10:35:29.407 [main] HQL_FUNCTIONS - nullif(arg0, arg1)
[DEBUG] 2025-10-15 10:35:29.407 [main] HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2025-10-15 10:35:29.407 [main] HQL_FUNCTIONS - OffsetDateTime offset datetime
[DEBUG] 2025-10-15 10:35:29.407 [main] HQL_FUNCTIONS - OffsetDateTime offset_datetime
[DEBUG] 2025-10-15 10:35:29.407 [main] HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2025-10-15 10:35:29.407 [main] HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2025-10-15 10:35:29.407 [main] HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
[DEBUG] 2025-10-15 10:35:29.407 [main] HQL_FUNCTIONS - Double pi
[DEBUG] 2025-10-15 10:35:29.407 [main] HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
[DEBUG] 2025-10-15 10:35:29.407 [main] HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2025-10-15 10:35:29.407 [main] HQL_FUNCTIONS - Integer quarter(DATE arg)
[DEBUG] 2025-10-15 10:35:29.407 [main] HQL_FUNCTIONS - Double radians(NUMERIC arg)
[DEBUG] 2025-10-15 10:35:29.408 [main] HQL_FUNCTIONS - Double rand([INTEGER seed])
[DEBUG] 2025-10-15 10:35:29.408 [main] HQL_FUNCTIONS - Long rank([arg0[, ...]])
[DEBUG] 2025-10-15 10:35:29.408 [main] HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
[DEBUG] 2025-10-15 10:35:29.408 [main] HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2025-10-15 10:35:29.408 [main] HQL_FUNCTIONS - String reverse(STRING arg)
[DEBUG] 2025-10-15 10:35:29.408 [main] HQL_FUNCTIONS - String right(STRING string, INTEGER length)
[DEBUG] 2025-10-15 10:35:29.408 [main] HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
[DEBUG] 2025-10-15 10:35:29.408 [main] HQL_FUNCTIONS - Long row_number()
[DEBUG] 2025-10-15 10:35:29.408 [main] HQL_FUNCTIONS - String rpad(string, length[, padding])
[DEBUG] 2025-10-15 10:35:29.408 [main] HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
[DEBUG] 2025-10-15 10:35:29.408 [main] HQL_FUNCTIONS - Integer second(TIME arg)
[DEBUG] 2025-10-15 10:35:29.408 [main] HQL_FUNCTIONS - String sha(arg)
[DEBUG] 2025-10-15 10:35:29.408 [main] HQL_FUNCTIONS - String sha1(arg)
[DEBUG] 2025-10-15 10:35:29.408 [main] HQL_FUNCTIONS - String sha2(arg0, arg1)
[DEBUG] 2025-10-15 10:35:29.408 [main] HQL_FUNCTIONS - Integer sign(NUMERIC arg)
[DEBUG] 2025-10-15 10:35:29.408 [main] HQL_FUNCTIONS - Double sin(NUMERIC arg)
[DEBUG] 2025-10-15 10:35:29.408 [main] HQL_FUNCTIONS - Double sinh(NUMERIC arg)
[DEBUG] 2025-10-15 10:35:29.408 [main] HQL_FUNCTIONS - String soundex(arg)
[DEBUG] 2025-10-15 10:35:29.408 [main] HQL_FUNCTIONS - String space(INTEGER arg)
[DEBUG] 2025-10-15 10:35:29.408 [main] HQL_FUNCTIONS - Object sql
[DEBUG] 2025-10-15 10:35:29.408 [main] HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
[DEBUG] 2025-10-15 10:35:29.408 [main] HQL_FUNCTIONS - Double stddev(NUMERIC arg)
[DEBUG] 2025-10-15 10:35:29.408 [main] HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
[DEBUG] 2025-10-15 10:35:29.408 [main] HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
[DEBUG] 2025-10-15 10:35:29.408 [main] HQL_FUNCTIONS - String str(arg)
[DEBUG] 2025-10-15 10:35:29.408 [main] HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days)
[DEBUG] 2025-10-15 10:35:29.408 [main] HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2025-10-15 10:35:29.408 [main] HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2025-10-15 10:35:29.408 [main] HQL_FUNCTIONS - subtime(TIME datetime, TIME time)
[DEBUG] 2025-10-15 10:35:29.408 [main] HQL_FUNCTIONS - sum(arg)
[DEBUG] 2025-10-15 10:35:29.409 [main] HQL_FUNCTIONS - Timestamp sysdate()
[DEBUG] 2025-10-15 10:35:29.409 [main] HQL_FUNCTIONS - Double tan(NUMERIC arg)
[DEBUG] 2025-10-15 10:35:29.409 [main] HQL_FUNCTIONS - Double tanh(NUMERIC arg)
[DEBUG] 2025-10-15 10:35:29.409 [main] HQL_FUNCTIONS - String time(arg)
[DEBUG] 2025-10-15 10:35:29.409 [main] HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1])
[DEBUG] 2025-10-15 10:35:29.409 [main] HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2025-10-15 10:35:29.409 [main] HQL_FUNCTIONS - basicType@14(java.lang.Long,-5)|basicType@17(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2025-10-15 10:35:29.409 [main] HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2025-10-15 10:35:29.409 [main] HQL_FUNCTIONS - trunc( ... )
[DEBUG] 2025-10-15 10:35:29.409 [main] HQL_FUNCTIONS - truncate( ... )
[DEBUG] 2025-10-15 10:35:29.409 [main] HQL_FUNCTIONS - String upper(STRING string)
[DEBUG] 2025-10-15 10:35:29.409 [main] HQL_FUNCTIONS - Date utc_date
[DEBUG] 2025-10-15 10:35:29.409 [main] HQL_FUNCTIONS - Time utc_time
[DEBUG] 2025-10-15 10:35:29.409 [main] HQL_FUNCTIONS - Timestamp utc_timestamp
[DEBUG] 2025-10-15 10:35:29.409 [main] HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
[DEBUG] 2025-10-15 10:35:29.409 [main] HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
[DEBUG] 2025-10-15 10:35:29.409 [main] HQL_FUNCTIONS - Double variance(NUMERIC arg)
[DEBUG] 2025-10-15 10:35:29.409 [main] HQL_FUNCTIONS - Integer week(DATE arg)
[DEBUG] 2025-10-15 10:35:29.409 [main] HQL_FUNCTIONS - Integer year(DATE arg)
[DEBUG] 2025-10-15 10:35:29.416 [main] cache - Starting QueryInterpretationCache(2048)
[DEBUG] 2025-10-15 10:35:29.531 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2025-10-15 10:35:29.532 [main] EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
[DEBUG] 2025-10-15 10:35:29.649 [main] ClassLoaderAccessImpl - Not known whether passed class name [org.hungrybadger.entity.Review] is safe
[DEBUG] 2025-10-15 10:35:29.649 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.hungrybadger.entity.Review
[DEBUG] 2025-10-15 10:35:29.884 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.hungrybadger.entity.Review]: private accessor [cuisineType]
[DEBUG] 2025-10-15 10:35:29.944 [main] creation - Starting post-init callbacks
[DEBUG] 2025-10-15 10:35:29.945 [main] creation - Starting PostInitCallbackEntry : Entity(org.hungrybadger.entity.Review) `staticFetchableList` generator
[DEBUG] 2025-10-15 10:35:30.042 [main] create - Created new SQL alias : r1_0
[DEBUG] 2025-10-15 10:35:30.045 [main] create - Registration of TableGroup [StandardTableGroup(org.hungrybadger.entity.Review)] with identifierForTableGroup [org.hungrybadger.entity.Review] for NavigablePath [org.hungrybadger.entity.Review] 
[DEBUG] 2025-10-15 10:35:30.064 [main] AST - DomainResult Graph:
 \-EntityResultImpl [org.hungrybadger.entity.Review]
 |  +-BasicFetch [org.hungrybadger.entity.Review.cuisineType]
 |  +-BasicFetch [org.hungrybadger.entity.Review.personalNotes]
 |  +-BasicFetch [org.hungrybadger.entity.Review.personalRating]
 |  \-BasicFetch [org.hungrybadger.entity.Review.restaurantName]

[DEBUG] 2025-10-15 10:35:30.075 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.hungrybadger.entity.Review) {
          primaryTableReference : review as r1_0
        }
      }
    }

[DEBUG] 2025-10-15 10:35:30.087 [main] AbstractEntityPersister - Static SQL for entity: org.hungrybadger.entity.Review
[DEBUG] 2025-10-15 10:35:30.087 [main] AbstractEntityPersister -  Version select: select id from review where id=?
[DEBUG] 2025-10-15 10:35:30.087 [main] AbstractEntityPersister -  Insert (0): insert into review (cuisine_type,personal_notes,personal_rating,restaurant_name) values (?,?,?,?)
[DEBUG] 2025-10-15 10:35:30.087 [main] AbstractEntityPersister -  Update (0): update review set cuisine_type=?,personal_notes=?,personal_rating=?,restaurant_name=? where id=?
[DEBUG] 2025-10-15 10:35:30.087 [main] AbstractEntityPersister -  Delete (0): delete from review where id=?
[DEBUG] 2025-10-15 10:35:30.120 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2025-10-15 10:35:30.121 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2025-10-15 10:35:30.128 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2025-10-15 10:35:30.129 [main] JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[DEBUG] 2025-10-15 10:35:30.130 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7efd28bd] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@3ee6dc82]
[DEBUG] 2025-10-15 10:35:30.132 [main] NamedObjectRepository - Checking 0 named HQL queries
[DEBUG] 2025-10-15 10:35:30.132 [main] NamedObjectRepository - Checking 0 named SQL queries
[DEBUG] 2025-10-15 10:35:30.133 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2025-10-15 10:35:30.133 [main] SchemaManagementToolCoordinator - No actions found; doing nothing
[DEBUG] 2025-10-15 10:35:30.137 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@17884d
[DEBUG] 2025-10-15 10:35:30.137 [main] SessionFactoryRegistry - Registering SessionFactory: bc5fc6b9-7803-4942-9b54-e9ce019ec4cd (<unnamed>)
[DEBUG] 2025-10-15 10:35:30.137 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2025-10-15 10:35:30.138 [main] SessionFactoryImpl - Instantiated SessionFactory
[DEBUG] 2025-10-15 10:35:30.318 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2025-10-15 10:35:30.341 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2025-10-15 10:35:30.356 [main] results - Initializer list:
	  org.hungrybadger.entity.Review -> EntityResultInitializer(org.hungrybadger.entity.Review)@1953529336 (SingleTableEntityPersister(org.hungrybadger.entity.Review))

[DEBUG] 2025-10-15 10:35:30.363 [main] SQL - select r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from review r1_0 where r1_0.id=?
[DEBUG] 2025-10-15 10:35:30.386 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review): 1
[DEBUG] 2025-10-15 10:35:30.389 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Review#1] : 768856989
[DEBUG] 2025-10-15 10:35:30.390 [main] results - Extracted JDBC value [1] - [Japanese]
[DEBUG] 2025-10-15 10:35:30.390 [main] results - Extracted JDBC value [2] - [Good cheap rolls. Togo or sit down are both great]
[DEBUG] 2025-10-15 10:35:30.390 [main] results - Extracted JDBC value [3] - [5]
[DEBUG] 2025-10-15 10:35:30.390 [main] results - Extracted JDBC value [4] - [Sushi Express]
[DEBUG] 2025-10-15 10:35:30.396 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Review#1
[DEBUG] 2025-10-15 10:35:30.396 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@329b331f
[DEBUG] 2025-10-15 10:35:30.398 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 10:37:12.937 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2025-10-15 10:37:12.948 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2025-10-15 10:37:12.991 [main] Version - HHH000412: Hibernate ORM core version 6.4.3.Final
[DEBUG] 2025-10-15 10:37:12.993 [main] Environment - HHH000206: 'hibernate.properties' not found
[DEBUG] 2025-10-15 10:37:13.087 [main] LocalXmlResourceResolver - Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
[DEBUG] 2025-10-15 10:37:13.098 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2025-10-15 10:37:13.385 [main] factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2025-10-15 10:37:13.391 [main] factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2025-10-15 10:37:13.392 [main] factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2025-10-15 10:37:13.392 [main] factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2025-10-15 10:37:13.393 [main] factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2025-10-15 10:37:13.393 [main] factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2025-10-15 10:37:13.394 [main] factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2025-10-15 10:37:13.395 [main] factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2025-10-15 10:37:13.396 [main] factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2025-10-15 10:37:13.397 [main] factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2025-10-15 10:37:13.397 [main] factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2025-10-15 10:37:13.397 [main] factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2025-10-15 10:37:13.398 [main] factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2025-10-15 10:37:13.411 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[INFO ] 2025-10-15 10:37:13.412 [main] RegionFactoryInitiator - HHH000026: Second-level cache disabled
[DEBUG] 2025-10-15 10:37:13.642 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3d36dff4
[DEBUG] 2025-10-15 10:37:13.642 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3d36dff4
[DEBUG] 2025-10-15 10:37:13.642 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@3d36dff4
[DEBUG] 2025-10-15 10:37:13.642 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@7abe27bf
[DEBUG] 2025-10-15 10:37:13.643 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@7abe27bf
[DEBUG] 2025-10-15 10:37:13.643 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@5b94ccbc
[DEBUG] 2025-10-15 10:37:13.643 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@5b94ccbc
[DEBUG] 2025-10-15 10:37:13.643 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@38a1c423
[DEBUG] 2025-10-15 10:37:13.643 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@38a1c423
[DEBUG] 2025-10-15 10:37:13.643 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@336365bc
[DEBUG] 2025-10-15 10:37:13.643 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@336365bc
[DEBUG] 2025-10-15 10:37:13.643 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@336365bc
[DEBUG] 2025-10-15 10:37:13.644 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@38eb2fb0
[DEBUG] 2025-10-15 10:37:13.644 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@38eb2fb0
[DEBUG] 2025-10-15 10:37:13.644 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@38eb2fb0
[DEBUG] 2025-10-15 10:37:13.644 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@4567e53d
[DEBUG] 2025-10-15 10:37:13.644 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@4567e53d
[DEBUG] 2025-10-15 10:37:13.644 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@7351a16e
[DEBUG] 2025-10-15 10:37:13.644 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@5bb7643d
[DEBUG] 2025-10-15 10:37:13.644 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5bb7643d
[DEBUG] 2025-10-15 10:37:13.644 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@3ac04654
[DEBUG] 2025-10-15 10:37:13.644 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@4074023c
[DEBUG] 2025-10-15 10:37:13.644 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@3ed0918d
[DEBUG] 2025-10-15 10:37:13.644 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@3ed0918d
[DEBUG] 2025-10-15 10:37:13.645 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3ed0918d
[DEBUG] 2025-10-15 10:37:13.645 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@5e268ce6
[DEBUG] 2025-10-15 10:37:13.645 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@5e268ce6
[DEBUG] 2025-10-15 10:37:13.645 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@5e268ce6
[DEBUG] 2025-10-15 10:37:13.645 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@66ec9390
[DEBUG] 2025-10-15 10:37:13.645 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@66ec9390
[DEBUG] 2025-10-15 10:37:13.645 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@66ec9390
[DEBUG] 2025-10-15 10:37:13.645 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@6e91893
[DEBUG] 2025-10-15 10:37:13.645 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@6e91893
[DEBUG] 2025-10-15 10:37:13.645 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@6e91893
[DEBUG] 2025-10-15 10:37:13.645 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3c0fbd3a
[DEBUG] 2025-10-15 10:37:13.645 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3c0fbd3a
[DEBUG] 2025-10-15 10:37:13.646 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@3c0fbd3a
[DEBUG] 2025-10-15 10:37:13.646 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@562457e1
[DEBUG] 2025-10-15 10:37:13.646 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@562457e1
[DEBUG] 2025-10-15 10:37:13.646 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@54562ea6
[DEBUG] 2025-10-15 10:37:13.646 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@54562ea6
[DEBUG] 2025-10-15 10:37:13.646 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@1a35993f
[DEBUG] 2025-10-15 10:37:13.646 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@1a35993f
[DEBUG] 2025-10-15 10:37:13.646 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@1a35993f
[DEBUG] 2025-10-15 10:37:13.646 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@5b12012e
[DEBUG] 2025-10-15 10:37:13.646 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@2f7dcef2
[DEBUG] 2025-10-15 10:37:13.646 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@2f7dcef2
[DEBUG] 2025-10-15 10:37:13.646 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@4a3be6a5
[DEBUG] 2025-10-15 10:37:13.646 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@7cf162bc
[DEBUG] 2025-10-15 10:37:13.647 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@7cf162bc
[DEBUG] 2025-10-15 10:37:13.647 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@7cf162bc
[DEBUG] 2025-10-15 10:37:13.647 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@3721177d
[DEBUG] 2025-10-15 10:37:13.647 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@766a4535
[DEBUG] 2025-10-15 10:37:13.647 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@63718b93
[DEBUG] 2025-10-15 10:37:13.647 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@14e2e1c3
[DEBUG] 2025-10-15 10:37:13.647 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@14e2e1c3
[DEBUG] 2025-10-15 10:37:13.647 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@2b4786dd
[DEBUG] 2025-10-15 10:37:13.647 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@2b4786dd
[DEBUG] 2025-10-15 10:37:13.647 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@f202d6d
[DEBUG] 2025-10-15 10:37:13.647 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@60e21209
[DEBUG] 2025-10-15 10:37:13.647 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@630d1b2f
[DEBUG] 2025-10-15 10:37:13.647 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@746b18fd
[DEBUG] 2025-10-15 10:37:13.648 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@7a2e0858
[DEBUG] 2025-10-15 10:37:13.648 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@aac3f4e
[DEBUG] 2025-10-15 10:37:13.648 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@1f38957
[DEBUG] 2025-10-15 10:37:13.648 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@1f38957
[DEBUG] 2025-10-15 10:37:13.648 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@2df3c564
[DEBUG] 2025-10-15 10:37:13.648 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@2df3c564
[DEBUG] 2025-10-15 10:37:13.648 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@2715644a
[DEBUG] 2025-10-15 10:37:13.648 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@2715644a
[DEBUG] 2025-10-15 10:37:13.648 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@4c2869a9
[DEBUG] 2025-10-15 10:37:13.649 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@4c2869a9
[DEBUG] 2025-10-15 10:37:13.649 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@518cf84a
[DEBUG] 2025-10-15 10:37:13.649 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@518cf84a
[DEBUG] 2025-10-15 10:37:13.649 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@62e7dffa
[DEBUG] 2025-10-15 10:37:13.649 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6edcd0d8
[DEBUG] 2025-10-15 10:37:13.649 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@6136998b
[DEBUG] 2025-10-15 10:37:13.649 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@6136998b
[DEBUG] 2025-10-15 10:37:13.649 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@57ce634f
[DEBUG] 2025-10-15 10:37:13.649 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@b8a7e43
[DEBUG] 2025-10-15 10:37:13.649 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@35835fa
[DEBUG] 2025-10-15 10:37:13.650 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@56f71edb
[DEBUG] 2025-10-15 10:37:13.650 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@56f71edb
[DEBUG] 2025-10-15 10:37:13.650 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7207cb51
[DEBUG] 2025-10-15 10:37:13.650 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2a27cb34
[DEBUG] 2025-10-15 10:37:13.650 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@6892cc6f
[DEBUG] 2025-10-15 10:37:13.650 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@6892cc6f
[DEBUG] 2025-10-15 10:37:13.650 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@6fd1660
[DEBUG] 2025-10-15 10:37:13.650 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@6fd1660
[DEBUG] 2025-10-15 10:37:13.650 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@4a6c18ad
[DEBUG] 2025-10-15 10:37:13.650 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@4a6c18ad
[DEBUG] 2025-10-15 10:37:13.650 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@4a6c18ad
[DEBUG] 2025-10-15 10:37:13.650 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@5e8604bf
[DEBUG] 2025-10-15 10:37:13.650 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@5e8604bf
[DEBUG] 2025-10-15 10:37:13.650 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@5e8604bf
[DEBUG] 2025-10-15 10:37:13.651 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@20095ab4
[DEBUG] 2025-10-15 10:37:13.651 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@4e2916c3
[DEBUG] 2025-10-15 10:37:13.651 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@64aad6db
[DEBUG] 2025-10-15 10:37:13.651 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@64aad6db
[DEBUG] 2025-10-15 10:37:13.651 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@ae7950d
[DEBUG] 2025-10-15 10:37:13.651 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@ae7950d
[DEBUG] 2025-10-15 10:37:13.651 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@ae7950d
[DEBUG] 2025-10-15 10:37:13.651 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@60d1b21f
[DEBUG] 2025-10-15 10:37:13.651 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@66c83fc8
[DEBUG] 2025-10-15 10:37:13.651 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@546621c4
[DEBUG] 2025-10-15 10:37:13.651 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@546621c4
[DEBUG] 2025-10-15 10:37:13.652 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@621f89b8
[DEBUG] 2025-10-15 10:37:13.652 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@621f89b8
[DEBUG] 2025-10-15 10:37:13.652 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@621f89b8
[DEBUG] 2025-10-15 10:37:13.652 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@f339eae
[DEBUG] 2025-10-15 10:37:13.652 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@f339eae
[DEBUG] 2025-10-15 10:37:13.652 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@2822c6ff
[DEBUG] 2025-10-15 10:37:13.652 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@2822c6ff
[DEBUG] 2025-10-15 10:37:13.652 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@4dafba3e
[DEBUG] 2025-10-15 10:37:13.652 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@4dafba3e
[DEBUG] 2025-10-15 10:37:13.652 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@53e3a87a
[DEBUG] 2025-10-15 10:37:13.652 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@53e3a87a
[DEBUG] 2025-10-15 10:37:13.653 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@40368a46
[DEBUG] 2025-10-15 10:37:13.653 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@40368a46
[DEBUG] 2025-10-15 10:37:13.653 [main] BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@7e9da981
[DEBUG] 2025-10-15 10:37:13.653 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@4ed38226
[DEBUG] 2025-10-15 10:37:13.659 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@59546cfe
[DEBUG] 2025-10-15 10:37:13.659 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@59546cfe
[DEBUG] 2025-10-15 10:37:13.661 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@1be59f28
[DEBUG] 2025-10-15 10:37:13.662 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@2ce45a7b
[DEBUG] 2025-10-15 10:37:13.662 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@153d4abb
[DEBUG] 2025-10-15 10:37:13.662 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@6d4c273c
[DEBUG] 2025-10-15 10:37:13.662 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@5a67e962
[DEBUG] 2025-10-15 10:37:13.662 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@545e57d7
[DEBUG] 2025-10-15 10:37:13.662 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@2bc9a775
[DEBUG] 2025-10-15 10:37:13.662 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@27b000f7
[DEBUG] 2025-10-15 10:37:13.662 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@42f9c19a
[INFO ] 2025-10-15 10:37:13.706 [main] c3p0 - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3307/hungryBadger_test
[INFO ] 2025-10-15 10:37:13.706 [main] c3p0 - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2025-10-15 10:37:13.706 [main] c3p0 - HHH10001003: Autocommit mode: false
[INFO ] 2025-10-15 10:37:13.845 [main] c3p0 - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2025-10-15 10:37:14.334 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 9.4.0
      major : 9
      minor : 4
[DEBUG] 2025-10-15 10:37:14.334 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2025-10-15 10:37:14.334 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[DEBUG] 2025-10-15 10:37:14.401 [main] dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 9.4
[DEBUG] 2025-10-15 10:37:14.410 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2025-10-15 10:37:14.410 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2025-10-15 10:37:14.428 [main] DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@782be4eb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@38792286)
[DEBUG] 2025-10-15 10:37:14.429 [main] DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@34d4860f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@665522c2)
[DEBUG] 2025-10-15 10:37:14.429 [main] DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@41fe8e5f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3062f9f4)
[DEBUG] 2025-10-15 10:37:14.429 [main] DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2016f509) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6f1a80fb)
[DEBUG] 2025-10-15 10:37:14.429 [main] DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5a237731) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7d2998d8)
[DEBUG] 2025-10-15 10:37:14.429 [main] DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6a0094c9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@51a6cc2a)
[DEBUG] 2025-10-15 10:37:14.429 [main] DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@10fda3d0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2123064f)
[DEBUG] 2025-10-15 10:37:14.429 [main] DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4f6b687e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@28cb3a25)
[DEBUG] 2025-10-15 10:37:14.429 [main] DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5555ffcf) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6cfd9a54)
[DEBUG] 2025-10-15 10:37:14.431 [main] JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2025-10-15 10:37:14.431 [main] JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2025-10-15 10:37:14.431 [main] JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2025-10-15 10:37:14.434 [main] JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2025-10-15 10:37:14.434 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2025-10-15 10:37:14.437 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@3fe46690
[DEBUG] 2025-10-15 10:37:14.438 [main] BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@1be59f28`
[DEBUG] 2025-10-15 10:37:14.445 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
[DEBUG] 2025-10-15 10:37:14.445 [main] BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2025-10-15 10:37:14.445 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2025-10-15 10:37:14.449 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2025-10-15 10:37:14.450 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2025-10-15 10:37:14.450 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2025-10-15 10:37:14.450 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2025-10-15 10:37:14.450 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2025-10-15 10:37:14.450 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2025-10-15 10:37:14.451 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2025-10-15 10:37:14.451 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2025-10-15 10:37:14.451 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2025-10-15 10:37:14.453 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@75483843] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@336206d8]
[DEBUG] 2025-10-15 10:37:14.502 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2025-10-15 10:37:14.535 [main] EntityBinder - Binding entity from annotated class: org.hungrybadger.entity.Review
[DEBUG] 2025-10-15 10:37:14.546 [main] EntityBinder - Import with entity name Review
[DEBUG] 2025-10-15 10:37:14.553 [main] EntityBinder - Bind entity org.hungrybadger.entity.Review on table review
[DEBUG] 2025-10-15 10:37:14.564 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2025-10-15 10:37:14.586 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2025-10-15 10:37:14.587 [main] ClassLoaderAccessImpl - Not known whether passed class name [org.hungrybadger.entity.Review] is safe
[DEBUG] 2025-10-15 10:37:14.587 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.hungrybadger.entity.Review
[DEBUG] 2025-10-15 10:37:14.590 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2025-10-15 10:37:14.595 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.hungrybadger.entity.Review:id]
[DEBUG] 2025-10-15 10:37:14.600 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2025-10-15 10:37:14.604 [main] BasicValue - Skipping column re-registration: review.id
[DEBUG] 2025-10-15 10:37:14.605 [main] PropertyBinder - Building property id
[DEBUG] 2025-10-15 10:37:14.610 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2025-10-15 10:37:14.615 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='cuisine_type')
[DEBUG] 2025-10-15 10:37:14.615 [main] PropertyBinder - MetadataSourceProcessor property cuisineType with lazy=false
[DEBUG] 2025-10-15 10:37:14.615 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.hungrybadger.entity.Review:cuisineType]
[DEBUG] 2025-10-15 10:37:14.615 [main] BasicValueBinder - building BasicValue for cuisineType
[DEBUG] 2025-10-15 10:37:14.615 [main] BasicValue - Skipping column re-registration: review.cuisine_type
[DEBUG] 2025-10-15 10:37:14.615 [main] PropertyBinder - Building property cuisineType
[DEBUG] 2025-10-15 10:37:14.616 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='personal_notes')
[DEBUG] 2025-10-15 10:37:14.616 [main] PropertyBinder - MetadataSourceProcessor property personalNotes with lazy=false
[DEBUG] 2025-10-15 10:37:14.616 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.hungrybadger.entity.Review:personalNotes]
[DEBUG] 2025-10-15 10:37:14.616 [main] BasicValueBinder - building BasicValue for personalNotes
[DEBUG] 2025-10-15 10:37:14.616 [main] BasicValue - Skipping column re-registration: review.personal_notes
[DEBUG] 2025-10-15 10:37:14.616 [main] PropertyBinder - Building property personalNotes
[DEBUG] 2025-10-15 10:37:14.616 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='personal_rating')
[DEBUG] 2025-10-15 10:37:14.616 [main] PropertyBinder - MetadataSourceProcessor property personalRating with lazy=false
[DEBUG] 2025-10-15 10:37:14.617 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.hungrybadger.entity.Review:personalRating]
[DEBUG] 2025-10-15 10:37:14.617 [main] BasicValueBinder - building BasicValue for personalRating
[DEBUG] 2025-10-15 10:37:14.617 [main] BasicValue - Skipping column re-registration: review.personal_rating
[DEBUG] 2025-10-15 10:37:14.617 [main] PropertyBinder - Building property personalRating
[DEBUG] 2025-10-15 10:37:14.617 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='restaurant_name')
[DEBUG] 2025-10-15 10:37:14.617 [main] PropertyBinder - MetadataSourceProcessor property restaurantName with lazy=false
[DEBUG] 2025-10-15 10:37:14.617 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.hungrybadger.entity.Review:restaurantName]
[DEBUG] 2025-10-15 10:37:14.617 [main] BasicValueBinder - building BasicValue for restaurantName
[DEBUG] 2025-10-15 10:37:14.617 [main] BasicValue - Skipping column re-registration: review.restaurant_name
[DEBUG] 2025-10-15 10:37:14.617 [main] PropertyBinder - Building property restaurantName
[DEBUG] 2025-10-15 10:37:14.619 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: org.hungrybadger.entity
[DEBUG] 2025-10-15 10:37:14.625 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2025-10-15 10:37:14.625 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for cuisineType
[DEBUG] 2025-10-15 10:37:14.627 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for personalNotes
[DEBUG] 2025-10-15 10:37:14.627 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for personalRating
[DEBUG] 2025-10-15 10:37:14.627 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for restaurantName
[DEBUG] 2025-10-15 10:37:14.630 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [review]
[DEBUG] 2025-10-15 10:37:14.856 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2025-10-15 10:37:14.914 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2025-10-15 10:37:14.914 [main] SessionFactoryImpl - Instantiating SessionFactory with settings: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=11, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, java.class.path=C:\Program Files\JetBrains\IntelliJ IDEA 2025.2.1\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2025.2.1\plugins\junit\lib\junit5-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2025.2.1\plugins\junit\lib\junit-rt.jar;C:\Users\mamcc\IdeaProjects\PersonalFoodReviewer\target\test-classes;C:\Users\mamcc\IdeaProjects\PersonalFoodReviewer\target\classes;C:\Users\mamcc\.m2\repository\org\hibernate\orm\hibernate-core\6.4.3.Final\hibernate-core-6.4.3.Final.jar;C:\Users\mamcc\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\mamcc\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\mamcc\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\mamcc\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\mamcc\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\mamcc\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\mamcc\.m2\repository\net\bytebuddy\byte-buddy\1.14.7\byte-buddy-1.14.7.jar;C:\Users\mamcc\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\mamcc\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\mamcc\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\mamcc\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\mamcc\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\mamcc\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\mamcc\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\mamcc\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\mamcc\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\mamcc\.m2\repository\org\hibernate\orm\hibernate-c3p0\6.4.3.Final\hibernate-c3p0-6.4.3.Final.jar;C:\Users\mamcc\.m2\repository\com\mchange\c3p0\0.9.5.5\c3p0-0.9.5.5.jar;C:\Users\mamcc\.m2\repository\com\mchange\mchange-commons-java\0.2.19\mchange-commons-java-0.2.19.jar;C:\Users\mamcc\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\mamcc\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\mamcc\.m2\repository\javax\javaee-web-api\7.0\javaee-web-api-7.0.jar;C:\Users\mamcc\.m2\repository\mysql\mysql-connector-java\8.0.16\mysql-connector-java-8.0.16.jar;C:\Users\mamcc\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\mamcc\.m2\repository\org\apache\logging\log4j\log4j-api\2.17.1\log4j-api-2.17.1.jar;C:\Users\mamcc\.m2\repository\org\apache\logging\log4j\log4j-core\2.17.1\log4j-core-2.17.1.jar;C:\Users\mamcc\.m2\repository\jstl\jstl\1.2\jstl-1.2.jar;C:\Users\mamcc\.m2\repository\org\junit\platform\junit-platform-runner\1.0.0\junit-platform-runner-1.0.0.jar;C:\Users\mamcc\.m2\repository\org\apiguardian\apiguardian-api\1.0.0\apiguardian-api-1.0.0.jar;C:\Users\mamcc\.m2\repository\org\junit\platform\junit-platform-launcher\1.0.0\junit-platform-launcher-1.0.0.jar;C:\Users\mamcc\.m2\repository\org\junit\platform\junit-platform-suite-api\1.0.0\junit-platform-suite-api-1.0.0.jar;C:\Users\mamcc\.m2\repository\org\junit\platform\junit-platform-commons\1.0.0\junit-platform-commons-1.0.0.jar;C:\Users\mamcc\.m2\repository\org\junit\vintage\junit-vintage-engine\4.12.0\junit-vintage-engine-4.12.0.jar;C:\Users\mamcc\.m2\repository\org\junit\platform\junit-platform-engine\1.0.0\junit-platform-engine-1.0.0.jar;C:\Users\mamcc\.m2\repository\org\opentest4j\opentest4j\1.0.0\opentest4j-1.0.0.jar;C:\Users\mamcc\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.0.0\junit-jupiter-engine-5.0.0.jar;C:\Users\mamcc\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.0.0\junit-jupiter-api-5.0.0.jar, kotlinx.coroutines.debug.enable.mutable.state.flows.stack.trace=true, java.vm.vendor=Eclipse Adoptium, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=https://adoptium.net/, user.timezone=America/Chicago, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Eclipse Adoptium\jdk-11.0.28.6-hotspot\bin, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 org.hungrybadger.persistence.ReviewDaoTest, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\mamcc, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2025-07-15, java.home=C:\Program Files\Eclipse Adoptium\jdk-11.0.28.6-hotspot, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, intellij.debug.agent=true, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, user.script=, connection.password=Marthacodes, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=11.0.28+6, user.name=Test, path.separator=;, kotlinx.coroutines.debug.enable.creation.stack.trace=false, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3307/hungryBadger_test, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, java.vendor.version=Temurin-11.0.28+6, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=C:\Users\mamcc\AppData\Local\Temp\, java.version=11.0.28, jboss.modules.system.pkgs=com.intellij.rt, user.dir=C:\Users\mamcc\IdeaProjects\PersonalFoodReviewer, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@664212ab, kotlinx.coroutines.debug.enable.flows.stack.trace=true, java.library.path=C:\Program Files\Eclipse Adoptium\jdk-11.0.28.6-hotspot\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Microsoft\jdk-21.0.2.13-hotspot\bin;C:\Program Files\Eclipse Adoptium\jdk-11.0.28.6-hotspot\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\dotnet\;C:\Program Files\Amazon\AWSCLIV2\;C:\Program Files\nodejs\;C:\Program Files\MySQL\MySQL Server 9.0\bin;C:\Program Files\NVIDIA Corporation\NVIDIA app\NvDLISR;C:\Program Files\Git\cmd;C:\Users\mamcc\AppData\Local\Microsoft\WindowsApps;;C:\Users\mamcc\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\mamcc\AppData\Roaming\npm;., java.vendor=Eclipse Adoptium, java.vm.info=mixed mode, java.vm.version=11.0.28+6, java.specification.maintenance.version=3, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3307/hungryBadger_test, debugger.agent.enable.coroutines=true, java.class.version=55.0}
[DEBUG] 2025-10-15 10:37:14.919 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2025-10-15 10:37:14.928 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2025-10-15 10:37:14.975 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2025-10-15 10:37:14.975 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2025-10-15 10:37:14.976 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2025-10-15 10:37:14.977 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2025-10-15 10:37:14.978 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@679dd234] under count; prior registration was null
[DEBUG] 2025-10-15 10:37:14.979 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@3d8d17a3] under every; prior registration was null
[DEBUG] 2025-10-15 10:37:14.979 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@ac91282] under any; prior registration was null
[DEBUG] 2025-10-15 10:37:14.980 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2025-10-15 10:37:14.980 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2025-10-15 10:37:14.980 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2025-10-15 10:37:14.980 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2025-10-15 10:37:14.980 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2025-10-15 10:37:14.980 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2025-10-15 10:37:14.980 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2025-10-15 10:37:14.980 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2025-10-15 10:37:14.980 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2025-10-15 10:37:14.981 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2025-10-15 10:37:14.981 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2025-10-15 10:37:14.981 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2025-10-15 10:37:14.981 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2025-10-15 10:37:14.981 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2025-10-15 10:37:14.981 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2025-10-15 10:37:14.981 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2025-10-15 10:37:14.981 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2025-10-15 10:37:14.983 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@40d52be7] under sinh; prior registration was null
[DEBUG] 2025-10-15 10:37:14.983 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@23ad71bf] under cosh; prior registration was null
[DEBUG] 2025-10-15 10:37:14.983 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1983b48a] under tanh; prior registration was null
[DEBUG] 2025-10-15 10:37:14.983 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@629a9f26] under pi; prior registration was null
[DEBUG] 2025-10-15 10:37:14.984 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@b791a81] under log; prior registration was null
[DEBUG] 2025-10-15 10:37:14.984 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2025-10-15 10:37:14.984 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2025-10-15 10:37:14.984 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2025-10-15 10:37:14.984 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2025-10-15 10:37:14.984 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2025-10-15 10:37:14.985 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2025-10-15 10:37:14.985 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2025-10-15 10:37:14.985 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2025-10-15 10:37:14.985 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2025-10-15 10:37:14.985 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2025-10-15 10:37:14.985 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2025-10-15 10:37:14.985 [main] SqmFunctionRegistry - Registering alternate key : length -> character_length
[DEBUG] 2025-10-15 10:37:14.986 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@fd413fb] under position; prior registration was null
[DEBUG] 2025-10-15 10:37:14.988 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@4e3f2908] under overlay; prior registration was null
[DEBUG] 2025-10-15 10:37:14.989 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@72443081] under trim; prior registration was null
[DEBUG] 2025-10-15 10:37:14.989 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@67e0ff3a] under cast; prior registration was null
[DEBUG] 2025-10-15 10:37:14.989 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7b2bf745] under collate; prior registration was null
[DEBUG] 2025-10-15 10:37:14.990 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@1eb9a3ef] under extract; prior registration was null
[DEBUG] 2025-10-15 10:37:14.990 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2025-10-15 10:37:14.990 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2025-10-15 10:37:14.991 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@27fe059d] under ifnull; prior registration was null
[DEBUG] 2025-10-15 10:37:14.991 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2025-10-15 10:37:14.991 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2025-10-15 10:37:14.991 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@7c241a9f] under pad; prior registration was null
[DEBUG] 2025-10-15 10:37:14.992 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@3a7b2e2] under str; prior registration was null
[DEBUG] 2025-10-15 10:37:14.993 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@5190010f] under format; prior registration was null
[DEBUG] 2025-10-15 10:37:14.994 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@4998e74b] under timestampadd; prior registration was null
[DEBUG] 2025-10-15 10:37:14.994 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@566e142] under timestampdiff; prior registration was null
[DEBUG] 2025-10-15 10:37:14.994 [main] SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
[DEBUG] 2025-10-15 10:37:14.995 [main] SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
[DEBUG] 2025-10-15 10:37:14.995 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@261bd7b] under current_date; prior registration was null
[DEBUG] 2025-10-15 10:37:14.995 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6f9e08d4] under current_time; prior registration was null
[DEBUG] 2025-10-15 10:37:14.995 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@390037e7] under current_timestamp; prior registration was null
[DEBUG] 2025-10-15 10:37:14.995 [main] SqmFunctionRegistry - Registering alternate key : current date -> current_date
[DEBUG] 2025-10-15 10:37:14.995 [main] SqmFunctionRegistry - Registering alternate key : current time -> current_time
[DEBUG] 2025-10-15 10:37:14.995 [main] SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2025-10-15 10:37:14.995 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@704067c6] under local_date; prior registration was null
[DEBUG] 2025-10-15 10:37:14.995 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7f4596d0] under local_time; prior registration was null
[DEBUG] 2025-10-15 10:37:14.995 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6002e944] under local_datetime; prior registration was null
[DEBUG] 2025-10-15 10:37:14.995 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@588545ac] under offset_datetime; prior registration was null
[DEBUG] 2025-10-15 10:37:14.995 [main] SqmFunctionRegistry - Registering alternate key : local date -> local_date
[DEBUG] 2025-10-15 10:37:14.995 [main] SqmFunctionRegistry - Registering alternate key : local time -> local_time
[DEBUG] 2025-10-15 10:37:14.995 [main] SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
[DEBUG] 2025-10-15 10:37:14.996 [main] SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2025-10-15 10:37:14.996 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2b08772d] under instant; prior registration was null
[DEBUG] 2025-10-15 10:37:14.996 [main] SqmFunctionRegistry - Registering alternate key : current_instant -> instant
[DEBUG] 2025-10-15 10:37:14.996 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@159424e2] under sql; prior registration was null
[DEBUG] 2025-10-15 10:37:14.996 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2025-10-15 10:37:14.996 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2025-10-15 10:37:14.996 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2025-10-15 10:37:14.996 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2025-10-15 10:37:14.996 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@b791a81
[DEBUG] 2025-10-15 10:37:14.996 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
[DEBUG] 2025-10-15 10:37:14.997 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2025-10-15 10:37:14.997 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2025-10-15 10:37:14.997 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2025-10-15 10:37:14.997 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2025-10-15 10:37:14.997 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
[DEBUG] 2025-10-15 10:37:14.997 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2025-10-15 10:37:14.997 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2025-10-15 10:37:14.997 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@3b24087d] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
[DEBUG] 2025-10-15 10:37:14.998 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@75fe1619] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
[DEBUG] 2025-10-15 10:37:14.998 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
[DEBUG] 2025-10-15 10:37:14.998 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2025-10-15 10:37:14.998 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2025-10-15 10:37:14.998 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2025-10-15 10:37:14.998 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2025-10-15 10:37:14.998 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2025-10-15 10:37:14.998 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2025-10-15 10:37:14.998 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2025-10-15 10:37:14.998 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
[DEBUG] 2025-10-15 10:37:14.998 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
[DEBUG] 2025-10-15 10:37:14.998 [main] SqmFunctionRegistry - Registering alternate key : day -> dayofmonth
[DEBUG] 2025-10-15 10:37:14.998 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
[DEBUG] 2025-10-15 10:37:14.998 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2025-10-15 10:37:14.998 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2025-10-15 10:37:14.998 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2025-10-15 10:37:14.999 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2025-10-15 10:37:14.999 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
[DEBUG] 2025-10-15 10:37:14.999 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
[DEBUG] 2025-10-15 10:37:14.999 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
[DEBUG] 2025-10-15 10:37:14.999 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
[DEBUG] 2025-10-15 10:37:14.999 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
[DEBUG] 2025-10-15 10:37:14.999 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
[DEBUG] 2025-10-15 10:37:14.999 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
[DEBUG] 2025-10-15 10:37:14.999 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2025-10-15 10:37:14.999 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
[DEBUG] 2025-10-15 10:37:14.999 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
[DEBUG] 2025-10-15 10:37:14.999 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
[DEBUG] 2025-10-15 10:37:14.999 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
[DEBUG] 2025-10-15 10:37:14.999 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2025-10-15 10:37:14.999 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2025-10-15 10:37:15.000 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2025-10-15 10:37:15.000 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2025-10-15 10:37:15.000 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2025-10-15 10:37:15.000 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4e245739] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@fd413fb
[DEBUG] 2025-10-15 10:37:15.000 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2025-10-15 10:37:15.000 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2025-10-15 10:37:15.000 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2025-10-15 10:37:15.005 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@6be6931f] under trunc; prior registration was null
[DEBUG] 2025-10-15 10:37:15.005 [main] SqmFunctionRegistry - Registering alternate key : truncate -> trunc
[DEBUG] 2025-10-15 10:37:15.005 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2025-10-15 10:37:15.006 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6b4125ed] under bitand; prior registration was null
[DEBUG] 2025-10-15 10:37:15.006 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@78da899f] under bitor; prior registration was null
[DEBUG] 2025-10-15 10:37:15.006 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@e7b265e] under bitxor; prior registration was null
[DEBUG] 2025-10-15 10:37:15.006 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@51da32e5] under bitnot; prior registration was null
[DEBUG] 2025-10-15 10:37:15.006 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2025-10-15 10:37:15.006 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2025-10-15 10:37:15.006 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
[DEBUG] 2025-10-15 10:37:15.006 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2025-10-15 10:37:15.006 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2025-10-15 10:37:15.006 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
[DEBUG] 2025-10-15 10:37:15.006 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2025-10-15 10:37:15.006 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2025-10-15 10:37:15.006 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
[DEBUG] 2025-10-15 10:37:15.006 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
[DEBUG] 2025-10-15 10:37:15.007 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
[DEBUG] 2025-10-15 10:37:15.007 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
[DEBUG] 2025-10-15 10:37:15.007 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
[DEBUG] 2025-10-15 10:37:15.007 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@33d60b7e] under format; prior registration was org.hibernate.dialect.function.FormatFunction@5190010f
[DEBUG] 2025-10-15 10:37:15.007 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
[DEBUG] 2025-10-15 10:37:15.007 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
[DEBUG] 2025-10-15 10:37:15.007 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2025-10-15 10:37:15.007 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2025-10-15 10:37:15.007 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@7f4596d0
[DEBUG] 2025-10-15 10:37:15.007 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@6002e944
[DEBUG] 2025-10-15 10:37:15.007 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
[DEBUG] 2025-10-15 10:37:15.007 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1fecfaea] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@629a9f26
[DEBUG] 2025-10-15 10:37:15.007 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4872669f] under chr; prior registration was null
[DEBUG] 2025-10-15 10:37:15.007 [main] SqmFunctionRegistry - Registering alternate key : char -> chr
[DEBUG] 2025-10-15 10:37:15.007 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@483f286e] under sysdate; prior registration was null
[DEBUG] 2025-10-15 10:37:15.008 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2025-10-15 10:37:15.008 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2025-10-15 10:37:15.008 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2025-10-15 10:37:15.008 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2025-10-15 10:37:15.008 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2025-10-15 10:37:15.008 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2025-10-15 10:37:15.010 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@cde8c6c] under rank; prior registration was null
[DEBUG] 2025-10-15 10:37:15.010 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@174721c4] under dense_rank; prior registration was null
[DEBUG] 2025-10-15 10:37:15.010 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@3592c1c4] under percent_rank; prior registration was null
[DEBUG] 2025-10-15 10:37:15.010 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@322e49ee] under cume_dist; prior registration was null
[DEBUG] 2025-10-15 10:37:15.011 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@7126e26] under listagg; prior registration was null
[DEBUG] 2025-10-15 10:37:15.015 [main] HQL_FUNCTIONS - abs(NUMERIC arg)
[DEBUG] 2025-10-15 10:37:15.015 [main] HQL_FUNCTIONS - Double acos(NUMERIC arg)
[DEBUG] 2025-10-15 10:37:15.015 [main] HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days)
[DEBUG] 2025-10-15 10:37:15.015 [main] HQL_FUNCTIONS - addtime(TIME datetime, TIME time)
[DEBUG] 2025-10-15 10:37:15.015 [main] HQL_FUNCTIONS - Boolean any(BOOLEAN arg)
[DEBUG] 2025-10-15 10:37:15.015 [main] HQL_FUNCTIONS - Integer ascii(STRING arg)
[DEBUG] 2025-10-15 10:37:15.015 [main] HQL_FUNCTIONS - Double asin(NUMERIC arg)
[DEBUG] 2025-10-15 10:37:15.015 [main] HQL_FUNCTIONS - Double atan(NUMERIC arg)
[DEBUG] 2025-10-15 10:37:15.015 [main] HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2025-10-15 10:37:15.015 [main] HQL_FUNCTIONS - avg(arg)
[DEBUG] 2025-10-15 10:37:15.015 [main] HQL_FUNCTIONS - bit_and(arg)
[DEBUG] 2025-10-15 10:37:15.015 [main] HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2025-10-15 10:37:15.015 [main] HQL_FUNCTIONS - bit_or(arg)
[DEBUG] 2025-10-15 10:37:15.015 [main] HQL_FUNCTIONS - bitand(arg0, arg1)
[DEBUG] 2025-10-15 10:37:15.015 [main] HQL_FUNCTIONS - bitnot(arg)
[DEBUG] 2025-10-15 10:37:15.015 [main] HQL_FUNCTIONS - bitor(arg0, arg1)
[DEBUG] 2025-10-15 10:37:15.016 [main] HQL_FUNCTIONS - bitxor(arg0, arg1)
[DEBUG] 2025-10-15 10:37:15.016 [main] HQL_FUNCTIONS - cast(arg as Type)
[DEBUG] 2025-10-15 10:37:15.016 [main] HQL_FUNCTIONS - ceiling(NUMERIC arg)
[DEBUG] 2025-10-15 10:37:15.016 [main] HQL_FUNCTIONS - Character char(INTEGER arg)
[DEBUG] 2025-10-15 10:37:15.016 [main] HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2025-10-15 10:37:15.016 [main] HQL_FUNCTIONS - Character chr(INTEGER arg)
[DEBUG] 2025-10-15 10:37:15.016 [main] HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
[DEBUG] 2025-10-15 10:37:15.016 [main] HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
[DEBUG] 2025-10-15 10:37:15.016 [main] HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2025-10-15 10:37:15.016 [main] HQL_FUNCTIONS - Double cos(NUMERIC arg)
[DEBUG] 2025-10-15 10:37:15.016 [main] HQL_FUNCTIONS - Double cosh(NUMERIC arg)
[DEBUG] 2025-10-15 10:37:15.016 [main] HQL_FUNCTIONS - Double cot(NUMERIC arg)
[DEBUG] 2025-10-15 10:37:15.016 [main] HQL_FUNCTIONS - Long count([distinct ]{arg|*})
[DEBUG] 2025-10-15 10:37:15.016 [main] HQL_FUNCTIONS - Integer crc32(arg)
[DEBUG] 2025-10-15 10:37:15.016 [main] HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
[DEBUG] 2025-10-15 10:37:15.016 [main] HQL_FUNCTIONS - Date curdate()
[DEBUG] 2025-10-15 10:37:15.016 [main] HQL_FUNCTIONS - Date current date
[DEBUG] 2025-10-15 10:37:15.016 [main] HQL_FUNCTIONS - Time current time
[DEBUG] 2025-10-15 10:37:15.016 [main] HQL_FUNCTIONS - Timestamp current timestamp
[DEBUG] 2025-10-15 10:37:15.016 [main] HQL_FUNCTIONS - Date current_date
[DEBUG] 2025-10-15 10:37:15.016 [main] HQL_FUNCTIONS - Instant current_instant
[DEBUG] 2025-10-15 10:37:15.016 [main] HQL_FUNCTIONS - Time current_time
[DEBUG] 2025-10-15 10:37:15.016 [main] HQL_FUNCTIONS - Timestamp current_timestamp
[DEBUG] 2025-10-15 10:37:15.016 [main] HQL_FUNCTIONS - Time curtime()
[DEBUG] 2025-10-15 10:37:15.016 [main] HQL_FUNCTIONS - Date date(arg)
[DEBUG] 2025-10-15 10:37:15.017 [main] HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2025-10-15 10:37:15.017 [main] HQL_FUNCTIONS - Integer datediff(DATE end, DATE start)
[DEBUG] 2025-10-15 10:37:15.017 [main] HQL_FUNCTIONS - Integer day(DATE arg)
[DEBUG] 2025-10-15 10:37:15.017 [main] HQL_FUNCTIONS - String dayname(DATE arg)
[DEBUG] 2025-10-15 10:37:15.017 [main] HQL_FUNCTIONS - Integer dayofmonth(DATE arg)
[DEBUG] 2025-10-15 10:37:15.017 [main] HQL_FUNCTIONS - Integer dayofweek(DATE arg)
[DEBUG] 2025-10-15 10:37:15.017 [main] HQL_FUNCTIONS - Integer dayofyear(DATE arg)
[DEBUG] 2025-10-15 10:37:15.017 [main] HQL_FUNCTIONS - Double degrees(NUMERIC arg)
[DEBUG] 2025-10-15 10:37:15.017 [main] HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
[DEBUG] 2025-10-15 10:37:15.017 [main] HQL_FUNCTIONS - Boolean every(BOOLEAN arg)
[DEBUG] 2025-10-15 10:37:15.017 [main] HQL_FUNCTIONS - Double exp(NUMERIC arg)
[DEBUG] 2025-10-15 10:37:15.017 [main] HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2025-10-15 10:37:15.017 [main] HQL_FUNCTIONS - first_valueANY value
[DEBUG] 2025-10-15 10:37:15.017 [main] HQL_FUNCTIONS - floor(NUMERIC arg)
[DEBUG] 2025-10-15 10:37:15.017 [main] HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2025-10-15 10:37:15.017 [main] HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2025-10-15 10:37:15.017 [main] HQL_FUNCTIONS - Integer hour(TIME arg)
[DEBUG] 2025-10-15 10:37:15.017 [main] HQL_FUNCTIONS - ifnull(arg0, arg1)
[DEBUG] 2025-10-15 10:37:15.017 [main] HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2025-10-15 10:37:15.017 [main] HQL_FUNCTIONS - Instant instant
[DEBUG] 2025-10-15 10:37:15.017 [main] HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2025-10-15 10:37:15.017 [main] HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2025-10-15 10:37:15.017 [main] HQL_FUNCTIONS - Date last_day(DATE arg)
[DEBUG] 2025-10-15 10:37:15.017 [main] HQL_FUNCTIONS - last_valueANY value
[DEBUG] 2025-10-15 10:37:15.017 [main] HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2025-10-15 10:37:15.017 [main] HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2025-10-15 10:37:15.017 [main] HQL_FUNCTIONS - String left(STRING string, INTEGER length)
[DEBUG] 2025-10-15 10:37:15.017 [main] HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
[DEBUG] 2025-10-15 10:37:15.018 [main] HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
[DEBUG] 2025-10-15 10:37:15.018 [main] HQL_FUNCTIONS - Double ln(NUMERIC arg)
[DEBUG] 2025-10-15 10:37:15.018 [main] HQL_FUNCTIONS - LocalDate local date
[DEBUG] 2025-10-15 10:37:15.018 [main] HQL_FUNCTIONS - LocalDateTime local datetime
[DEBUG] 2025-10-15 10:37:15.018 [main] HQL_FUNCTIONS - LocalTime local time
[DEBUG] 2025-10-15 10:37:15.018 [main] HQL_FUNCTIONS - LocalDate local_date
[DEBUG] 2025-10-15 10:37:15.018 [main] HQL_FUNCTIONS - LocalDateTime local_datetime
[DEBUG] 2025-10-15 10:37:15.018 [main] HQL_FUNCTIONS - LocalTime local_time
[DEBUG] 2025-10-15 10:37:15.018 [main] HQL_FUNCTIONS - Timestamp localtime
[DEBUG] 2025-10-15 10:37:15.018 [main] HQL_FUNCTIONS - Timestamp localtimestamp
[DEBUG] 2025-10-15 10:37:15.018 [main] HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2025-10-15 10:37:15.018 [main] HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
[DEBUG] 2025-10-15 10:37:15.018 [main] HQL_FUNCTIONS - Double log10(NUMERIC arg)
[DEBUG] 2025-10-15 10:37:15.018 [main] HQL_FUNCTIONS - Double log2(NUMERIC arg)
[DEBUG] 2025-10-15 10:37:15.018 [main] HQL_FUNCTIONS - String lower(STRING string)
[DEBUG] 2025-10-15 10:37:15.018 [main] HQL_FUNCTIONS - String lpad(string, length[, padding])
[DEBUG] 2025-10-15 10:37:15.018 [main] HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
[DEBUG] 2025-10-15 10:37:15.018 [main] HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear)
[DEBUG] 2025-10-15 10:37:15.018 [main] HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
[DEBUG] 2025-10-15 10:37:15.018 [main] HQL_FUNCTIONS - max(COMPARABLE arg)
[DEBUG] 2025-10-15 10:37:15.018 [main] HQL_FUNCTIONS - String md5(arg)
[DEBUG] 2025-10-15 10:37:15.018 [main] HQL_FUNCTIONS - Integer microsecond(TIME arg)
[DEBUG] 2025-10-15 10:37:15.018 [main] HQL_FUNCTIONS - min(COMPARABLE arg)
[DEBUG] 2025-10-15 10:37:15.018 [main] HQL_FUNCTIONS - Integer minute(TIME arg)
[DEBUG] 2025-10-15 10:37:15.018 [main] HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2025-10-15 10:37:15.019 [main] HQL_FUNCTIONS - Integer month(DATE arg)
[DEBUG] 2025-10-15 10:37:15.019 [main] HQL_FUNCTIONS - String monthname(DATE arg)
[DEBUG] 2025-10-15 10:37:15.019 [main] HQL_FUNCTIONS - Timestamp now()
[DEBUG] 2025-10-15 10:37:15.019 [main] HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
[DEBUG] 2025-10-15 10:37:15.019 [main] HQL_FUNCTIONS - nullif(arg0, arg1)
[DEBUG] 2025-10-15 10:37:15.019 [main] HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2025-10-15 10:37:15.019 [main] HQL_FUNCTIONS - OffsetDateTime offset datetime
[DEBUG] 2025-10-15 10:37:15.019 [main] HQL_FUNCTIONS - OffsetDateTime offset_datetime
[DEBUG] 2025-10-15 10:37:15.019 [main] HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2025-10-15 10:37:15.019 [main] HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2025-10-15 10:37:15.019 [main] HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
[DEBUG] 2025-10-15 10:37:15.019 [main] HQL_FUNCTIONS - Double pi
[DEBUG] 2025-10-15 10:37:15.019 [main] HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
[DEBUG] 2025-10-15 10:37:15.019 [main] HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2025-10-15 10:37:15.019 [main] HQL_FUNCTIONS - Integer quarter(DATE arg)
[DEBUG] 2025-10-15 10:37:15.019 [main] HQL_FUNCTIONS - Double radians(NUMERIC arg)
[DEBUG] 2025-10-15 10:37:15.019 [main] HQL_FUNCTIONS - Double rand([INTEGER seed])
[DEBUG] 2025-10-15 10:37:15.019 [main] HQL_FUNCTIONS - Long rank([arg0[, ...]])
[DEBUG] 2025-10-15 10:37:15.019 [main] HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
[DEBUG] 2025-10-15 10:37:15.019 [main] HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2025-10-15 10:37:15.019 [main] HQL_FUNCTIONS - String reverse(STRING arg)
[DEBUG] 2025-10-15 10:37:15.020 [main] HQL_FUNCTIONS - String right(STRING string, INTEGER length)
[DEBUG] 2025-10-15 10:37:15.020 [main] HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
[DEBUG] 2025-10-15 10:37:15.020 [main] HQL_FUNCTIONS - Long row_number()
[DEBUG] 2025-10-15 10:37:15.020 [main] HQL_FUNCTIONS - String rpad(string, length[, padding])
[DEBUG] 2025-10-15 10:37:15.020 [main] HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
[DEBUG] 2025-10-15 10:37:15.020 [main] HQL_FUNCTIONS - Integer second(TIME arg)
[DEBUG] 2025-10-15 10:37:15.020 [main] HQL_FUNCTIONS - String sha(arg)
[DEBUG] 2025-10-15 10:37:15.020 [main] HQL_FUNCTIONS - String sha1(arg)
[DEBUG] 2025-10-15 10:37:15.020 [main] HQL_FUNCTIONS - String sha2(arg0, arg1)
[DEBUG] 2025-10-15 10:37:15.020 [main] HQL_FUNCTIONS - Integer sign(NUMERIC arg)
[DEBUG] 2025-10-15 10:37:15.020 [main] HQL_FUNCTIONS - Double sin(NUMERIC arg)
[DEBUG] 2025-10-15 10:37:15.020 [main] HQL_FUNCTIONS - Double sinh(NUMERIC arg)
[DEBUG] 2025-10-15 10:37:15.020 [main] HQL_FUNCTIONS - String soundex(arg)
[DEBUG] 2025-10-15 10:37:15.020 [main] HQL_FUNCTIONS - String space(INTEGER arg)
[DEBUG] 2025-10-15 10:37:15.020 [main] HQL_FUNCTIONS - Object sql
[DEBUG] 2025-10-15 10:37:15.020 [main] HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
[DEBUG] 2025-10-15 10:37:15.020 [main] HQL_FUNCTIONS - Double stddev(NUMERIC arg)
[DEBUG] 2025-10-15 10:37:15.020 [main] HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
[DEBUG] 2025-10-15 10:37:15.020 [main] HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
[DEBUG] 2025-10-15 10:37:15.020 [main] HQL_FUNCTIONS - String str(arg)
[DEBUG] 2025-10-15 10:37:15.020 [main] HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days)
[DEBUG] 2025-10-15 10:37:15.020 [main] HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2025-10-15 10:37:15.020 [main] HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2025-10-15 10:37:15.020 [main] HQL_FUNCTIONS - subtime(TIME datetime, TIME time)
[DEBUG] 2025-10-15 10:37:15.020 [main] HQL_FUNCTIONS - sum(arg)
[DEBUG] 2025-10-15 10:37:15.020 [main] HQL_FUNCTIONS - Timestamp sysdate()
[DEBUG] 2025-10-15 10:37:15.020 [main] HQL_FUNCTIONS - Double tan(NUMERIC arg)
[DEBUG] 2025-10-15 10:37:15.020 [main] HQL_FUNCTIONS - Double tanh(NUMERIC arg)
[DEBUG] 2025-10-15 10:37:15.021 [main] HQL_FUNCTIONS - String time(arg)
[DEBUG] 2025-10-15 10:37:15.021 [main] HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1])
[DEBUG] 2025-10-15 10:37:15.021 [main] HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2025-10-15 10:37:15.021 [main] HQL_FUNCTIONS - basicType@14(java.lang.Long,-5)|basicType@17(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2025-10-15 10:37:15.021 [main] HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2025-10-15 10:37:15.021 [main] HQL_FUNCTIONS - trunc( ... )
[DEBUG] 2025-10-15 10:37:15.021 [main] HQL_FUNCTIONS - truncate( ... )
[DEBUG] 2025-10-15 10:37:15.021 [main] HQL_FUNCTIONS - String upper(STRING string)
[DEBUG] 2025-10-15 10:37:15.021 [main] HQL_FUNCTIONS - Date utc_date
[DEBUG] 2025-10-15 10:37:15.021 [main] HQL_FUNCTIONS - Time utc_time
[DEBUG] 2025-10-15 10:37:15.021 [main] HQL_FUNCTIONS - Timestamp utc_timestamp
[DEBUG] 2025-10-15 10:37:15.021 [main] HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
[DEBUG] 2025-10-15 10:37:15.021 [main] HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
[DEBUG] 2025-10-15 10:37:15.021 [main] HQL_FUNCTIONS - Double variance(NUMERIC arg)
[DEBUG] 2025-10-15 10:37:15.021 [main] HQL_FUNCTIONS - Integer week(DATE arg)
[DEBUG] 2025-10-15 10:37:15.021 [main] HQL_FUNCTIONS - Integer year(DATE arg)
[DEBUG] 2025-10-15 10:37:15.026 [main] cache - Starting QueryInterpretationCache(2048)
[DEBUG] 2025-10-15 10:37:15.136 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2025-10-15 10:37:15.137 [main] EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
[DEBUG] 2025-10-15 10:37:15.241 [main] ClassLoaderAccessImpl - Not known whether passed class name [org.hungrybadger.entity.Review] is safe
[DEBUG] 2025-10-15 10:37:15.241 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.hungrybadger.entity.Review
[DEBUG] 2025-10-15 10:37:15.459 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.hungrybadger.entity.Review]: private accessor [cuisineType]
[DEBUG] 2025-10-15 10:37:15.517 [main] creation - Starting post-init callbacks
[DEBUG] 2025-10-15 10:37:15.518 [main] creation - Starting PostInitCallbackEntry : Entity(org.hungrybadger.entity.Review) `staticFetchableList` generator
[DEBUG] 2025-10-15 10:37:15.608 [main] create - Created new SQL alias : r1_0
[DEBUG] 2025-10-15 10:37:15.611 [main] create - Registration of TableGroup [StandardTableGroup(org.hungrybadger.entity.Review)] with identifierForTableGroup [org.hungrybadger.entity.Review] for NavigablePath [org.hungrybadger.entity.Review] 
[DEBUG] 2025-10-15 10:37:15.631 [main] AST - DomainResult Graph:
 \-EntityResultImpl [org.hungrybadger.entity.Review]
 |  +-BasicFetch [org.hungrybadger.entity.Review.cuisineType]
 |  +-BasicFetch [org.hungrybadger.entity.Review.personalNotes]
 |  +-BasicFetch [org.hungrybadger.entity.Review.personalRating]
 |  \-BasicFetch [org.hungrybadger.entity.Review.restaurantName]

[DEBUG] 2025-10-15 10:37:15.641 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.hungrybadger.entity.Review) {
          primaryTableReference : review as r1_0
        }
      }
    }

[DEBUG] 2025-10-15 10:37:15.654 [main] AbstractEntityPersister - Static SQL for entity: org.hungrybadger.entity.Review
[DEBUG] 2025-10-15 10:37:15.654 [main] AbstractEntityPersister -  Version select: select id from review where id=?
[DEBUG] 2025-10-15 10:37:15.654 [main] AbstractEntityPersister -  Insert (0): insert into review (cuisine_type,personal_notes,personal_rating,restaurant_name) values (?,?,?,?)
[DEBUG] 2025-10-15 10:37:15.654 [main] AbstractEntityPersister -  Update (0): update review set cuisine_type=?,personal_notes=?,personal_rating=?,restaurant_name=? where id=?
[DEBUG] 2025-10-15 10:37:15.654 [main] AbstractEntityPersister -  Delete (0): delete from review where id=?
[DEBUG] 2025-10-15 10:37:15.688 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2025-10-15 10:37:15.688 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2025-10-15 10:37:15.695 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2025-10-15 10:37:15.696 [main] JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[DEBUG] 2025-10-15 10:37:15.697 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@75483843] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@6d0114c0]
[DEBUG] 2025-10-15 10:37:15.698 [main] NamedObjectRepository - Checking 0 named HQL queries
[DEBUG] 2025-10-15 10:37:15.698 [main] NamedObjectRepository - Checking 0 named SQL queries
[DEBUG] 2025-10-15 10:37:15.699 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2025-10-15 10:37:15.699 [main] SchemaManagementToolCoordinator - No actions found; doing nothing
[DEBUG] 2025-10-15 10:37:15.702 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3db1ce78
[DEBUG] 2025-10-15 10:37:15.702 [main] SessionFactoryRegistry - Registering SessionFactory: 9d87b8b8-ab81-4ecd-9ecc-b46de4169fc4 (<unnamed>)
[DEBUG] 2025-10-15 10:37:15.702 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2025-10-15 10:37:15.702 [main] SessionFactoryImpl - Instantiated SessionFactory
[DEBUG] 2025-10-15 10:37:15.865 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2025-10-15 10:37:15.889 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2025-10-15 10:37:15.903 [main] results - Initializer list:
	  org.hungrybadger.entity.Review -> EntityResultInitializer(org.hungrybadger.entity.Review)@146540182 (SingleTableEntityPersister(org.hungrybadger.entity.Review))

[DEBUG] 2025-10-15 10:37:15.910 [main] SQL - select r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from review r1_0 where r1_0.id=?
[DEBUG] 2025-10-15 10:37:15.930 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review): 2
[DEBUG] 2025-10-15 10:37:15.933 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Review#2] : 2044002136
[DEBUG] 2025-10-15 10:37:15.934 [main] results - Extracted JDBC value [1] - [American]
[DEBUG] 2025-10-15 10:37:15.934 [main] results - Extracted JDBC value [2] - [Wraps, good after a long day]
[DEBUG] 2025-10-15 10:37:15.934 [main] results - Extracted JDBC value [3] - [4]
[DEBUG] 2025-10-15 10:37:15.934 [main] results - Extracted JDBC value [4] - [Conrads]
[DEBUG] 2025-10-15 10:37:15.939 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Review#2
[DEBUG] 2025-10-15 10:37:15.939 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4fa0ee7e
[DEBUG] 2025-10-15 10:37:15.942 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 10:37:15.944 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2025-10-15 10:37:15.945 [main] TransactionImpl - begin
[DEBUG] 2025-10-15 10:37:15.956 [main] TransactionImpl - committing
[DEBUG] 2025-10-15 10:37:15.957 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2025-10-15 10:37:15.957 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2025-10-15 10:37:15.962 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
[DEBUG] 2025-10-15 10:37:15.962 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2025-10-15 10:37:15.963 [main] EntityPrinter - Listing entities:
[DEBUG] 2025-10-15 10:37:15.964 [main] EntityPrinter - org.hungrybadger.entity.Review{personalNotes=Wraps, good after a long day, personalRating=4, restaurantName=Conrads, id=2, cuisineType=American}
[DEBUG] 2025-10-15 10:37:15.972 [main] SQL - delete from review where id=?
[DEBUG] 2025-10-15 10:37:15.979 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 10:37:15.979 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 10:37:15.980 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2025-10-15 10:37:15.980 [main] results - Initializer list:
	  org.hungrybadger.entity.Review -> EntityResultInitializer(org.hungrybadger.entity.Review)@304172847 (SingleTableEntityPersister(org.hungrybadger.entity.Review))

[DEBUG] 2025-10-15 10:37:15.980 [main] SQL - select r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from review r1_0 where r1_0.id=?
[DEBUG] 2025-10-15 10:37:15.981 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 10:37:16.206 [main] create - Created new SQL alias : r1_0
[DEBUG] 2025-10-15 10:37:16.206 [main] create - Registration of TableGroup [StandardTableGroup(org.hungrybadger.entity.Review(8354012774900))] with identifierForTableGroup [org.hungrybadger.entity.Review] for NavigablePath [org.hungrybadger.entity.Review] 
[DEBUG] 2025-10-15 10:37:16.237 [main] AST - DomainResult Graph:
 \-EntityResultImpl [org.hungrybadger.entity.Review(8354012774900)]
 |  +-BasicFetch [org.hungrybadger.entity.Review(8354012774900).cuisineType]
 |  +-BasicFetch [org.hungrybadger.entity.Review(8354012774900).personalNotes]
 |  +-BasicFetch [org.hungrybadger.entity.Review(8354012774900).personalRating]
 |  \-BasicFetch [org.hungrybadger.entity.Review(8354012774900).restaurantName]

[DEBUG] 2025-10-15 10:37:16.238 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.hungrybadger.entity.Review(8354012774900)) {
          primaryTableReference : review as r1_0
        }
      }
    }

[DEBUG] 2025-10-15 10:37:16.241 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
[DEBUG] 2025-10-15 10:37:16.241 [main] results - Initializer list:
	  org.hungrybadger.entity.Review(8354012774900) -> EntityResultInitializer(org.hungrybadger.entity.Review(8354012774900))@1855463032 (SingleTableEntityPersister(org.hungrybadger.entity.Review))

[DEBUG] 2025-10-15 10:37:16.241 [main] SQL - select r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from review r1_0
[DEBUG] 2025-10-15 10:37:16.243 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2025-10-15 10:37:16.244 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review(8354012774900)): 1
[DEBUG] 2025-10-15 10:37:16.244 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Review(8354012774900)#1] : 78849125
[DEBUG] 2025-10-15 10:37:16.244 [main] results - Extracted JDBC value [1] - [Japanese]
[DEBUG] 2025-10-15 10:37:16.244 [main] results - Extracted JDBC value [2] - [Good cheap rolls. Togo or sit down are both great]
[DEBUG] 2025-10-15 10:37:16.244 [main] results - Extracted JDBC value [3] - [5]
[DEBUG] 2025-10-15 10:37:16.244 [main] results - Extracted JDBC value [4] - [Sushi Express]
[DEBUG] 2025-10-15 10:37:16.245 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Review(8354012774900)#1
[DEBUG] 2025-10-15 10:37:16.245 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@52285a5f
[DEBUG] 2025-10-15 10:37:16.245 [main] results - Extracted JDBC value [0] - [2]
[DEBUG] 2025-10-15 10:37:16.245 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review(8354012774900)): 2
[DEBUG] 2025-10-15 10:37:16.245 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Review(8354012774900)#2] : 1336265843
[DEBUG] 2025-10-15 10:37:16.245 [main] results - Extracted JDBC value [1] - [American]
[DEBUG] 2025-10-15 10:37:16.245 [main] results - Extracted JDBC value [2] - [Wraps, good after a long day]
[DEBUG] 2025-10-15 10:37:16.245 [main] results - Extracted JDBC value [3] - [4]
[DEBUG] 2025-10-15 10:37:16.245 [main] results - Extracted JDBC value [4] - [Conrads]
[DEBUG] 2025-10-15 10:37:16.245 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Review(8354012774900)#2
[DEBUG] 2025-10-15 10:37:16.245 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@52285a5f
[DEBUG] 2025-10-15 10:37:16.245 [main] results - Extracted JDBC value [0] - [3]
[DEBUG] 2025-10-15 10:37:16.245 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review(8354012774900)): 3
[DEBUG] 2025-10-15 10:37:16.245 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Review(8354012774900)#3] : 575565448
[DEBUG] 2025-10-15 10:37:16.245 [main] results - Extracted JDBC value [1] - [American]
[DEBUG] 2025-10-15 10:37:16.245 [main] results - Extracted JDBC value [2] - [Mac and Cheese Slice for the win!]
[DEBUG] 2025-10-15 10:37:16.245 [main] results - Extracted JDBC value [3] - [5]
[DEBUG] 2025-10-15 10:37:16.245 [main] results - Extracted JDBC value [4] - [Ians Pizza]
[DEBUG] 2025-10-15 10:37:16.246 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Review(8354012774900)#3
[DEBUG] 2025-10-15 10:37:16.246 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@52285a5f
[DEBUG] 2025-10-15 10:37:16.247 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 10:37:16.248 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 10:37:16.384 [main] create - Created new SQL alias : r1_0
[DEBUG] 2025-10-15 10:37:16.384 [main] create - Registration of TableGroup [StandardTableGroup(org.hungrybadger.entity.Review(8354232600699))] with identifierForTableGroup [org.hungrybadger.entity.Review] for NavigablePath [org.hungrybadger.entity.Review] 
[DEBUG] 2025-10-15 10:37:16.389 [main] BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1a89414e
[DEBUG] 2025-10-15 10:37:16.389 [main] BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.hungrybadger.entity.Review(8354232600699).restaurantName) 
[DEBUG] 2025-10-15 10:37:16.392 [main] AST - DomainResult Graph:
 \-EntityResultImpl [org.hungrybadger.entity.Review(8354232600699)]
 |  +-BasicFetch [org.hungrybadger.entity.Review(8354232600699).cuisineType]
 |  +-BasicFetch [org.hungrybadger.entity.Review(8354232600699).personalNotes]
 |  +-BasicFetch [org.hungrybadger.entity.Review(8354232600699).personalRating]
 |  \-BasicFetch [org.hungrybadger.entity.Review(8354232600699).restaurantName]

[DEBUG] 2025-10-15 10:37:16.392 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.hungrybadger.entity.Review(8354232600699)) {
          primaryTableReference : review as r1_0
        }
      }
    }

[DEBUG] 2025-10-15 10:37:16.393 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
[DEBUG] 2025-10-15 10:37:16.393 [main] results - Initializer list:
	  org.hungrybadger.entity.Review(8354232600699) -> EntityResultInitializer(org.hungrybadger.entity.Review(8354232600699))@1785631369 (SingleTableEntityPersister(org.hungrybadger.entity.Review))

[DEBUG] 2025-10-15 10:37:16.393 [main] SQL - select r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from review r1_0 where r1_0.restaurant_name like ? escape ''
[DEBUG] 2025-10-15 10:37:16.395 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2025-10-15 10:37:16.396 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review(8354232600699)): 1
[DEBUG] 2025-10-15 10:37:16.396 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Review(8354232600699)#1] : 1391735333
[DEBUG] 2025-10-15 10:37:16.396 [main] results - Extracted JDBC value [1] - [Japanese]
[DEBUG] 2025-10-15 10:37:16.396 [main] results - Extracted JDBC value [2] - [Good cheap rolls. Togo or sit down are both great]
[DEBUG] 2025-10-15 10:37:16.396 [main] results - Extracted JDBC value [3] - [5]
[DEBUG] 2025-10-15 10:37:16.396 [main] results - Extracted JDBC value [4] - [Sushi Express]
[DEBUG] 2025-10-15 10:37:16.396 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Review(8354232600699)#1
[DEBUG] 2025-10-15 10:37:16.396 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@55d1f065
[DEBUG] 2025-10-15 10:37:16.396 [main] results - Extracted JDBC value [0] - [2]
[DEBUG] 2025-10-15 10:37:16.396 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review(8354232600699)): 2
[DEBUG] 2025-10-15 10:37:16.396 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Review(8354232600699)#2] : 261774911
[DEBUG] 2025-10-15 10:37:16.396 [main] results - Extracted JDBC value [1] - [American]
[DEBUG] 2025-10-15 10:37:16.396 [main] results - Extracted JDBC value [2] - [Wraps, good after a long day]
[DEBUG] 2025-10-15 10:37:16.396 [main] results - Extracted JDBC value [3] - [4]
[DEBUG] 2025-10-15 10:37:16.396 [main] results - Extracted JDBC value [4] - [Conrads]
[DEBUG] 2025-10-15 10:37:16.397 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Review(8354232600699)#2
[DEBUG] 2025-10-15 10:37:16.397 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@55d1f065
[DEBUG] 2025-10-15 10:37:16.397 [main] results - Extracted JDBC value [0] - [3]
[DEBUG] 2025-10-15 10:37:16.397 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review(8354232600699)): 3
[DEBUG] 2025-10-15 10:37:16.397 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Review(8354232600699)#3] : 1252819402
[DEBUG] 2025-10-15 10:37:16.397 [main] results - Extracted JDBC value [1] - [American]
[DEBUG] 2025-10-15 10:37:16.397 [main] results - Extracted JDBC value [2] - [Mac and Cheese Slice for the win!]
[DEBUG] 2025-10-15 10:37:16.397 [main] results - Extracted JDBC value [3] - [5]
[DEBUG] 2025-10-15 10:37:16.397 [main] results - Extracted JDBC value [4] - [Ians Pizza]
[DEBUG] 2025-10-15 10:37:16.397 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Review(8354232600699)#3
[DEBUG] 2025-10-15 10:37:16.397 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@55d1f065
[DEBUG] 2025-10-15 10:37:16.397 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 10:37:16.398 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 10:37:16.513 [main] create - Created new SQL alias : r1_0
[DEBUG] 2025-10-15 10:37:16.514 [main] create - Registration of TableGroup [StandardTableGroup(org.hungrybadger.entity.Review(8354387588000))] with identifierForTableGroup [org.hungrybadger.entity.Review] for NavigablePath [org.hungrybadger.entity.Review] 
[DEBUG] 2025-10-15 10:37:16.514 [main] BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2d5ae78e
[DEBUG] 2025-10-15 10:37:16.514 [main] BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.hungrybadger.entity.Review(8354387588000).restaurantName) 
[DEBUG] 2025-10-15 10:37:16.514 [main] AST - DomainResult Graph:
 \-EntityResultImpl [org.hungrybadger.entity.Review(8354387588000)]
 |  +-BasicFetch [org.hungrybadger.entity.Review(8354387588000).cuisineType]
 |  +-BasicFetch [org.hungrybadger.entity.Review(8354387588000).personalNotes]
 |  +-BasicFetch [org.hungrybadger.entity.Review(8354387588000).personalRating]
 |  \-BasicFetch [org.hungrybadger.entity.Review(8354387588000).restaurantName]

[DEBUG] 2025-10-15 10:37:16.514 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.hungrybadger.entity.Review(8354387588000)) {
          primaryTableReference : review as r1_0
        }
      }
    }

[DEBUG] 2025-10-15 10:37:16.514 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
[DEBUG] 2025-10-15 10:37:16.514 [main] results - Initializer list:
	  org.hungrybadger.entity.Review(8354387588000) -> EntityResultInitializer(org.hungrybadger.entity.Review(8354387588000))@1333508319 (SingleTableEntityPersister(org.hungrybadger.entity.Review))

[DEBUG] 2025-10-15 10:37:16.515 [main] SQL - select r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from review r1_0 where r1_0.restaurant_name like ? escape ''
[DEBUG] 2025-10-15 10:37:16.517 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2025-10-15 10:37:16.517 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review(8354387588000)): 1
[DEBUG] 2025-10-15 10:37:16.517 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Review(8354387588000)#1] : 653745564
[DEBUG] 2025-10-15 10:37:16.517 [main] results - Extracted JDBC value [1] - [Japanese]
[DEBUG] 2025-10-15 10:37:16.517 [main] results - Extracted JDBC value [2] - [Good cheap rolls. Togo or sit down are both great]
[DEBUG] 2025-10-15 10:37:16.517 [main] results - Extracted JDBC value [3] - [5]
[DEBUG] 2025-10-15 10:37:16.517 [main] results - Extracted JDBC value [4] - [Sushi Express]
[DEBUG] 2025-10-15 10:37:16.517 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Review(8354387588000)#1
[DEBUG] 2025-10-15 10:37:16.517 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7717b4a0
[DEBUG] 2025-10-15 10:37:16.518 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 10:37:16.518 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 10:37:16.630 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2025-10-15 10:37:16.630 [main] results - Initializer list:
	  org.hungrybadger.entity.Review -> EntityResultInitializer(org.hungrybadger.entity.Review)@884135194 (SingleTableEntityPersister(org.hungrybadger.entity.Review))

[DEBUG] 2025-10-15 10:37:16.630 [main] SQL - select r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from review r1_0 where r1_0.id=?
[DEBUG] 2025-10-15 10:37:16.633 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review): 1
[DEBUG] 2025-10-15 10:37:16.633 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Review#1] : 979719862
[DEBUG] 2025-10-15 10:37:16.633 [main] results - Extracted JDBC value [1] - [Japanese]
[DEBUG] 2025-10-15 10:37:16.633 [main] results - Extracted JDBC value [2] - [Good cheap rolls. Togo or sit down are both great]
[DEBUG] 2025-10-15 10:37:16.633 [main] results - Extracted JDBC value [3] - [5]
[DEBUG] 2025-10-15 10:37:16.634 [main] results - Extracted JDBC value [4] - [Sushi Express]
[DEBUG] 2025-10-15 10:37:16.634 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Review#1
[DEBUG] 2025-10-15 10:37:16.634 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@63bca84d
[DEBUG] 2025-10-15 10:37:16.634 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 10:37:16.762 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2025-10-15 10:37:16.763 [main] results - Initializer list:
	  org.hungrybadger.entity.Review -> EntityResultInitializer(org.hungrybadger.entity.Review)@953936697 (SingleTableEntityPersister(org.hungrybadger.entity.Review))

[DEBUG] 2025-10-15 10:37:16.763 [main] SQL - select r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from review r1_0 where r1_0.id=?
[DEBUG] 2025-10-15 10:37:16.765 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review): 1
[DEBUG] 2025-10-15 10:37:16.765 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Review#1] : 1496780902
[DEBUG] 2025-10-15 10:37:16.765 [main] results - Extracted JDBC value [1] - [Japanese]
[DEBUG] 2025-10-15 10:37:16.765 [main] results - Extracted JDBC value [2] - [Good cheap rolls. Togo or sit down are both great]
[DEBUG] 2025-10-15 10:37:16.765 [main] results - Extracted JDBC value [3] - [5]
[DEBUG] 2025-10-15 10:37:16.765 [main] results - Extracted JDBC value [4] - [Sushi Express]
[DEBUG] 2025-10-15 10:37:16.765 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Review#1
[DEBUG] 2025-10-15 10:37:16.765 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@48106381
[DEBUG] 2025-10-15 10:37:16.766 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 10:37:16.766 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2025-10-15 10:37:16.766 [main] TransactionImpl - begin
[DEBUG] 2025-10-15 10:37:16.770 [main] create - Created new SQL alias : r1_0
[DEBUG] 2025-10-15 10:37:16.770 [main] create - Registration of TableGroup [StandardTableGroup(org.hungrybadger.entity.Review)] with identifierForTableGroup [org.hungrybadger.entity.Review] for NavigablePath [org.hungrybadger.entity.Review] 
[DEBUG] 2025-10-15 10:37:16.771 [main] AST - DomainResult Graph:
 \-EntityResultImpl [org.hungrybadger.entity.Review]
 |  +-BasicFetch [org.hungrybadger.entity.Review.cuisineType]
 |  +-BasicFetch [org.hungrybadger.entity.Review.personalNotes]
 |  +-BasicFetch [org.hungrybadger.entity.Review.personalRating]
 |  \-BasicFetch [org.hungrybadger.entity.Review.restaurantName]

[DEBUG] 2025-10-15 10:37:16.771 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.hungrybadger.entity.Review) {
          primaryTableReference : review as r1_0
        }
      }
    }

[DEBUG] 2025-10-15 10:37:16.771 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2025-10-15 10:37:16.771 [main] results - Initializer list:
	  org.hungrybadger.entity.Review -> EntityResultInitializer(org.hungrybadger.entity.Review)@355366659 (SingleTableEntityPersister(org.hungrybadger.entity.Review))

[DEBUG] 2025-10-15 10:37:16.771 [main] SQL - select r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from review r1_0 where r1_0.id=?
[DEBUG] 2025-10-15 10:37:16.772 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review): 1
[DEBUG] 2025-10-15 10:37:16.772 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Review#1] : 1775658917
[DEBUG] 2025-10-15 10:37:16.772 [main] results - Extracted JDBC value [1] - [Japanese]
[DEBUG] 2025-10-15 10:37:16.772 [main] results - Extracted JDBC value [2] - [Good cheap rolls. Togo or sit down are both great]
[DEBUG] 2025-10-15 10:37:16.772 [main] results - Extracted JDBC value [3] - [5]
[DEBUG] 2025-10-15 10:37:16.772 [main] results - Extracted JDBC value [4] - [Sushi Express]
[DEBUG] 2025-10-15 10:37:16.773 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Review#1
[DEBUG] 2025-10-15 10:37:16.773 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7fe87c0e
[DEBUG] 2025-10-15 10:37:16.773 [main] TransactionImpl - committing
[DEBUG] 2025-10-15 10:37:16.773 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2025-10-15 10:37:16.773 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2025-10-15 10:37:16.774 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
[DEBUG] 2025-10-15 10:37:16.775 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2025-10-15 10:37:16.775 [main] EntityPrinter - Listing entities:
[DEBUG] 2025-10-15 10:37:16.775 [main] EntityPrinter - org.hungrybadger.entity.Review{personalNotes=Good cheap rolls. Togo or sit down are both great, personalRating=5, restaurantName=Conrads Wraps, id=1, cuisineType=Japanese}
[DEBUG] 2025-10-15 10:37:16.778 [main] SQL - update review set cuisine_type=?,personal_notes=?,personal_rating=?,restaurant_name=? where id=?
[DEBUG] 2025-10-15 10:37:16.783 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 10:37:16.783 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 10:37:16.784 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2025-10-15 10:37:16.784 [main] results - Initializer list:
	  org.hungrybadger.entity.Review -> EntityResultInitializer(org.hungrybadger.entity.Review)@383753182 (SingleTableEntityPersister(org.hungrybadger.entity.Review))

[DEBUG] 2025-10-15 10:37:16.784 [main] SQL - select r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from review r1_0 where r1_0.id=?
[DEBUG] 2025-10-15 10:37:16.785 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review): 1
[DEBUG] 2025-10-15 10:37:16.785 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Review#1] : 394124580
[DEBUG] 2025-10-15 10:37:16.786 [main] results - Extracted JDBC value [1] - [Japanese]
[DEBUG] 2025-10-15 10:37:16.786 [main] results - Extracted JDBC value [2] - [Good cheap rolls. Togo or sit down are both great]
[DEBUG] 2025-10-15 10:37:16.786 [main] results - Extracted JDBC value [3] - [5]
[DEBUG] 2025-10-15 10:37:16.786 [main] results - Extracted JDBC value [4] - [Conrads Wraps]
[DEBUG] 2025-10-15 10:37:16.786 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Review#1
[DEBUG] 2025-10-15 10:37:16.786 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@17d816b3
[DEBUG] 2025-10-15 10:37:16.786 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 10:37:16.909 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2025-10-15 10:37:16.909 [main] TransactionImpl - begin
[DEBUG] 2025-10-15 10:37:16.912 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2025-10-15 10:37:16.915 [main] SQL - insert into review (cuisine_type,personal_notes,personal_rating,restaurant_name) values (?,?,?,?)
[DEBUG] 2025-10-15 10:37:16.921 [main] IdentifierGeneratorHelper - Natively generated identity (org.hungrybadger.entity.Review) : 4
[DEBUG] 2025-10-15 10:37:16.922 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2025-10-15 10:37:16.924 [main] ResourceRegistryStandardImpl - Exception clearing maxRows/queryTimeout [You can't operate on a closed Statement!!!]
[DEBUG] 2025-10-15 10:37:16.926 [main] TransactionImpl - committing
[DEBUG] 2025-10-15 10:37:16.926 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2025-10-15 10:37:16.926 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2025-10-15 10:37:16.926 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2025-10-15 10:37:16.926 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2025-10-15 10:37:16.926 [main] EntityPrinter - Listing entities:
[DEBUG] 2025-10-15 10:37:16.926 [main] EntityPrinter - org.hungrybadger.entity.Review{personalNotes=Worked here for 2 years, gluten free!, personalRating=4, restaurantName=Madison Chocolate Company, id=4, cuisineType=French}
[DEBUG] 2025-10-15 10:37:16.928 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 10:37:16.928 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 10:37:16.929 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2025-10-15 10:37:16.929 [main] results - Initializer list:
	  org.hungrybadger.entity.Review -> EntityResultInitializer(org.hungrybadger.entity.Review)@269902384 (SingleTableEntityPersister(org.hungrybadger.entity.Review))

[DEBUG] 2025-10-15 10:37:16.930 [main] SQL - select r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from review r1_0 where r1_0.id=?
[DEBUG] 2025-10-15 10:37:16.931 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review): 4
[DEBUG] 2025-10-15 10:37:16.931 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Review#4] : 1570165812
[DEBUG] 2025-10-15 10:37:16.931 [main] results - Extracted JDBC value [1] - [French]
[DEBUG] 2025-10-15 10:37:16.931 [main] results - Extracted JDBC value [2] - [Worked here for 2 years, gluten free!]
[DEBUG] 2025-10-15 10:37:16.931 [main] results - Extracted JDBC value [3] - [4]
[DEBUG] 2025-10-15 10:37:16.931 [main] results - Extracted JDBC value [4] - [Madison Chocolate Company]
[DEBUG] 2025-10-15 10:37:16.931 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Review#4
[DEBUG] 2025-10-15 10:37:16.931 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7283877
[DEBUG] 2025-10-15 10:37:16.931 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 10:40:14.182 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2025-10-15 10:40:14.192 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2025-10-15 10:40:14.232 [main] Version - HHH000412: Hibernate ORM core version 6.4.3.Final
[DEBUG] 2025-10-15 10:40:14.235 [main] Environment - HHH000206: 'hibernate.properties' not found
[DEBUG] 2025-10-15 10:40:14.301 [main] LocalXmlResourceResolver - Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
[DEBUG] 2025-10-15 10:40:14.309 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2025-10-15 10:40:14.549 [main] factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2025-10-15 10:40:14.555 [main] factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2025-10-15 10:40:14.555 [main] factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2025-10-15 10:40:14.556 [main] factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2025-10-15 10:40:14.556 [main] factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2025-10-15 10:40:14.556 [main] factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2025-10-15 10:40:14.557 [main] factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2025-10-15 10:40:14.558 [main] factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2025-10-15 10:40:14.559 [main] factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2025-10-15 10:40:14.560 [main] factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2025-10-15 10:40:14.560 [main] factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2025-10-15 10:40:14.560 [main] factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2025-10-15 10:40:14.561 [main] factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2025-10-15 10:40:14.570 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[INFO ] 2025-10-15 10:40:14.571 [main] RegionFactoryInitiator - HHH000026: Second-level cache disabled
[DEBUG] 2025-10-15 10:40:14.696 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@19f7222e
[DEBUG] 2025-10-15 10:40:14.696 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@19f7222e
[DEBUG] 2025-10-15 10:40:14.696 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@19f7222e
[DEBUG] 2025-10-15 10:40:14.696 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3f725306
[DEBUG] 2025-10-15 10:40:14.696 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3f725306
[DEBUG] 2025-10-15 10:40:14.696 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3c69362a
[DEBUG] 2025-10-15 10:40:14.696 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3c69362a
[DEBUG] 2025-10-15 10:40:14.696 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@2412a42b
[DEBUG] 2025-10-15 10:40:14.696 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@2412a42b
[DEBUG] 2025-10-15 10:40:14.696 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@45404d5
[DEBUG] 2025-10-15 10:40:14.697 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@45404d5
[DEBUG] 2025-10-15 10:40:14.697 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@45404d5
[DEBUG] 2025-10-15 10:40:14.697 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@29138d3a
[DEBUG] 2025-10-15 10:40:14.697 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@29138d3a
[DEBUG] 2025-10-15 10:40:14.697 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@29138d3a
[DEBUG] 2025-10-15 10:40:14.697 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@5cbe2654
[DEBUG] 2025-10-15 10:40:14.697 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@5cbe2654
[DEBUG] 2025-10-15 10:40:14.697 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@6dbcf214
[DEBUG] 2025-10-15 10:40:14.697 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@496a31da
[DEBUG] 2025-10-15 10:40:14.697 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@496a31da
[DEBUG] 2025-10-15 10:40:14.697 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@7c251f90
[DEBUG] 2025-10-15 10:40:14.697 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@51841ac6
[DEBUG] 2025-10-15 10:40:14.697 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@5ba26eb0
[DEBUG] 2025-10-15 10:40:14.698 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@5ba26eb0
[DEBUG] 2025-10-15 10:40:14.698 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@5ba26eb0
[DEBUG] 2025-10-15 10:40:14.698 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@435e60ff
[DEBUG] 2025-10-15 10:40:14.698 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@435e60ff
[DEBUG] 2025-10-15 10:40:14.698 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@435e60ff
[DEBUG] 2025-10-15 10:40:14.698 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@17d32e9b
[DEBUG] 2025-10-15 10:40:14.698 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@17d32e9b
[DEBUG] 2025-10-15 10:40:14.698 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@17d32e9b
[DEBUG] 2025-10-15 10:40:14.698 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@66f0548d
[DEBUG] 2025-10-15 10:40:14.698 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@66f0548d
[DEBUG] 2025-10-15 10:40:14.698 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@66f0548d
[DEBUG] 2025-10-15 10:40:14.698 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@2e6f610d
[DEBUG] 2025-10-15 10:40:14.698 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@2e6f610d
[DEBUG] 2025-10-15 10:40:14.699 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@2e6f610d
[DEBUG] 2025-10-15 10:40:14.699 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@1e86a5a7
[DEBUG] 2025-10-15 10:40:14.699 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@1e86a5a7
[DEBUG] 2025-10-15 10:40:14.699 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@10afe71a
[DEBUG] 2025-10-15 10:40:14.699 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@10afe71a
[DEBUG] 2025-10-15 10:40:14.699 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@741f8dbe
[DEBUG] 2025-10-15 10:40:14.699 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@741f8dbe
[DEBUG] 2025-10-15 10:40:14.699 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@741f8dbe
[DEBUG] 2025-10-15 10:40:14.699 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@212dfd39
[DEBUG] 2025-10-15 10:40:14.699 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@a2ddf26
[DEBUG] 2025-10-15 10:40:14.699 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@a2ddf26
[DEBUG] 2025-10-15 10:40:14.699 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@65d57e4e
[DEBUG] 2025-10-15 10:40:14.699 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@6daf7d37
[DEBUG] 2025-10-15 10:40:14.700 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@6daf7d37
[DEBUG] 2025-10-15 10:40:14.700 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@6daf7d37
[DEBUG] 2025-10-15 10:40:14.700 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@23a5818e
[DEBUG] 2025-10-15 10:40:14.700 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@4715ae33
[DEBUG] 2025-10-15 10:40:14.700 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@9fc9f91
[DEBUG] 2025-10-15 10:40:14.700 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@1fac1d5c
[DEBUG] 2025-10-15 10:40:14.700 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@1fac1d5c
[DEBUG] 2025-10-15 10:40:14.700 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@108a46d6
[DEBUG] 2025-10-15 10:40:14.700 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@108a46d6
[DEBUG] 2025-10-15 10:40:14.700 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@7a8406c2
[DEBUG] 2025-10-15 10:40:14.700 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@17690e14
[DEBUG] 2025-10-15 10:40:14.700 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6850b758
[DEBUG] 2025-10-15 10:40:14.700 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@2a2ef072
[DEBUG] 2025-10-15 10:40:14.700 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@704641e3
[DEBUG] 2025-10-15 10:40:14.701 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@2f00f851
[DEBUG] 2025-10-15 10:40:14.701 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@4207609e
[DEBUG] 2025-10-15 10:40:14.701 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@4207609e
[DEBUG] 2025-10-15 10:40:14.701 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@1f77b5cc
[DEBUG] 2025-10-15 10:40:14.701 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@1f77b5cc
[DEBUG] 2025-10-15 10:40:14.701 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@5d7ca698
[DEBUG] 2025-10-15 10:40:14.701 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@5d7ca698
[DEBUG] 2025-10-15 10:40:14.701 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@75961f16
[DEBUG] 2025-10-15 10:40:14.701 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@75961f16
[DEBUG] 2025-10-15 10:40:14.701 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@c6c82aa
[DEBUG] 2025-10-15 10:40:14.701 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@c6c82aa
[DEBUG] 2025-10-15 10:40:14.701 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2e179f3e
[DEBUG] 2025-10-15 10:40:14.701 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@16e7b402
[DEBUG] 2025-10-15 10:40:14.701 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@534c6767
[DEBUG] 2025-10-15 10:40:14.702 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@534c6767
[DEBUG] 2025-10-15 10:40:14.702 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@3bddc676
[DEBUG] 2025-10-15 10:40:14.702 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@29a1505c
[DEBUG] 2025-10-15 10:40:14.702 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@24db6ce
[DEBUG] 2025-10-15 10:40:14.702 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@320a8ebf
[DEBUG] 2025-10-15 10:40:14.702 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@320a8ebf
[DEBUG] 2025-10-15 10:40:14.702 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@67b100fe
[DEBUG] 2025-10-15 10:40:14.702 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@44b18fe4
[DEBUG] 2025-10-15 10:40:14.702 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@2ba5aa7a
[DEBUG] 2025-10-15 10:40:14.702 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@2ba5aa7a
[DEBUG] 2025-10-15 10:40:14.702 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@4d3ca6c7
[DEBUG] 2025-10-15 10:40:14.702 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@4d3ca6c7
[DEBUG] 2025-10-15 10:40:14.702 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@22e5f96e
[DEBUG] 2025-10-15 10:40:14.702 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@22e5f96e
[DEBUG] 2025-10-15 10:40:14.703 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@22e5f96e
[DEBUG] 2025-10-15 10:40:14.703 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@6a638c79
[DEBUG] 2025-10-15 10:40:14.703 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@6a638c79
[DEBUG] 2025-10-15 10:40:14.703 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@6a638c79
[DEBUG] 2025-10-15 10:40:14.703 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@6c931d35
[DEBUG] 2025-10-15 10:40:14.703 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@44b194fe
[DEBUG] 2025-10-15 10:40:14.703 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@49122b8f
[DEBUG] 2025-10-15 10:40:14.703 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@49122b8f
[DEBUG] 2025-10-15 10:40:14.703 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@3fe46690
[DEBUG] 2025-10-15 10:40:14.703 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@3fe46690
[DEBUG] 2025-10-15 10:40:14.703 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@3fe46690
[DEBUG] 2025-10-15 10:40:14.703 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4beabeec
[DEBUG] 2025-10-15 10:40:14.703 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@3b4d50b
[DEBUG] 2025-10-15 10:40:14.703 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@5b22d8a1
[DEBUG] 2025-10-15 10:40:14.703 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@5b22d8a1
[DEBUG] 2025-10-15 10:40:14.704 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@476ee5b3
[DEBUG] 2025-10-15 10:40:14.704 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@476ee5b3
[DEBUG] 2025-10-15 10:40:14.704 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@476ee5b3
[DEBUG] 2025-10-15 10:40:14.704 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@59ed3e6c
[DEBUG] 2025-10-15 10:40:14.704 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@59ed3e6c
[DEBUG] 2025-10-15 10:40:14.704 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@7cd4a4d7
[DEBUG] 2025-10-15 10:40:14.704 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@7cd4a4d7
[DEBUG] 2025-10-15 10:40:14.704 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@317e9c3c
[DEBUG] 2025-10-15 10:40:14.704 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@317e9c3c
[DEBUG] 2025-10-15 10:40:14.704 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@18da4dd
[DEBUG] 2025-10-15 10:40:14.704 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@18da4dd
[DEBUG] 2025-10-15 10:40:14.704 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@31a3f4de
[DEBUG] 2025-10-15 10:40:14.704 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@31a3f4de
[DEBUG] 2025-10-15 10:40:14.704 [main] BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@68880c21
[DEBUG] 2025-10-15 10:40:14.705 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@2dd2e270
[DEBUG] 2025-10-15 10:40:14.710 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@35267fd4
[DEBUG] 2025-10-15 10:40:14.710 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@35267fd4
[DEBUG] 2025-10-15 10:40:14.712 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@4e08acf9
[DEBUG] 2025-10-15 10:40:14.712 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@42ea287
[DEBUG] 2025-10-15 10:40:14.712 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@78cd163b
[DEBUG] 2025-10-15 10:40:14.712 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@1f0b3cfe
[DEBUG] 2025-10-15 10:40:14.712 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@14ef2482
[DEBUG] 2025-10-15 10:40:14.712 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@65a48602
[DEBUG] 2025-10-15 10:40:14.712 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@75483843
[DEBUG] 2025-10-15 10:40:14.713 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@336206d8
[DEBUG] 2025-10-15 10:40:14.713 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@5ec4ff02
[INFO ] 2025-10-15 10:40:14.750 [main] c3p0 - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3307/hungryBadger_test
[INFO ] 2025-10-15 10:40:14.750 [main] c3p0 - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2025-10-15 10:40:14.750 [main] c3p0 - HHH10001003: Autocommit mode: false
[INFO ] 2025-10-15 10:40:14.866 [main] c3p0 - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2025-10-15 10:40:14.983 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 9.4.0
      major : 9
      minor : 4
[DEBUG] 2025-10-15 10:40:14.983 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2025-10-15 10:40:14.983 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[DEBUG] 2025-10-15 10:40:15.055 [main] dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 9.4
[DEBUG] 2025-10-15 10:40:15.066 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2025-10-15 10:40:15.066 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2025-10-15 10:40:15.086 [main] DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@17410c07) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6ee99964)
[DEBUG] 2025-10-15 10:40:15.086 [main] DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@257ef9ed) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@59c70ceb)
[DEBUG] 2025-10-15 10:40:15.086 [main] DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@46f902e0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@64f981e2)
[DEBUG] 2025-10-15 10:40:15.087 [main] DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@361abd01) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@575b5f7d)
[DEBUG] 2025-10-15 10:40:15.087 [main] DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@59bbb974) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7165d530)
[DEBUG] 2025-10-15 10:40:15.087 [main] DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@12f49ca8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1fd9893c)
[DEBUG] 2025-10-15 10:40:15.087 [main] DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1b2df3aa) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@44be69aa)
[DEBUG] 2025-10-15 10:40:15.087 [main] DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7219ac49) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@21da4b5f)
[DEBUG] 2025-10-15 10:40:15.087 [main] DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@551e4c6d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@625a9c5d)
[DEBUG] 2025-10-15 10:40:15.089 [main] JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2025-10-15 10:40:15.089 [main] JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2025-10-15 10:40:15.089 [main] JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2025-10-15 10:40:15.092 [main] JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2025-10-15 10:40:15.092 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2025-10-15 10:40:15.095 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@57c00115
[DEBUG] 2025-10-15 10:40:15.096 [main] BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@4e08acf9`
[DEBUG] 2025-10-15 10:40:15.102 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
[DEBUG] 2025-10-15 10:40:15.102 [main] BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2025-10-15 10:40:15.102 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2025-10-15 10:40:15.107 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2025-10-15 10:40:15.107 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2025-10-15 10:40:15.107 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2025-10-15 10:40:15.107 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2025-10-15 10:40:15.107 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2025-10-15 10:40:15.107 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2025-10-15 10:40:15.108 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2025-10-15 10:40:15.108 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2025-10-15 10:40:15.108 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2025-10-15 10:40:15.109 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7377781e] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@31db34da]
[DEBUG] 2025-10-15 10:40:15.166 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2025-10-15 10:40:15.201 [main] EntityBinder - Binding entity from annotated class: org.hungrybadger.entity.Review
[DEBUG] 2025-10-15 10:40:15.212 [main] EntityBinder - Import with entity name Review
[DEBUG] 2025-10-15 10:40:15.221 [main] EntityBinder - Bind entity org.hungrybadger.entity.Review on table review
[DEBUG] 2025-10-15 10:40:15.232 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2025-10-15 10:40:15.255 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2025-10-15 10:40:15.256 [main] ClassLoaderAccessImpl - Not known whether passed class name [org.hungrybadger.entity.Review] is safe
[DEBUG] 2025-10-15 10:40:15.256 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.hungrybadger.entity.Review
[DEBUG] 2025-10-15 10:40:15.259 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2025-10-15 10:40:15.264 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.hungrybadger.entity.Review:id]
[DEBUG] 2025-10-15 10:40:15.271 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2025-10-15 10:40:15.275 [main] BasicValue - Skipping column re-registration: review.id
[DEBUG] 2025-10-15 10:40:15.276 [main] PropertyBinder - Building property id
[DEBUG] 2025-10-15 10:40:15.281 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2025-10-15 10:40:15.286 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='cuisine_type')
[DEBUG] 2025-10-15 10:40:15.287 [main] PropertyBinder - MetadataSourceProcessor property cuisineType with lazy=false
[DEBUG] 2025-10-15 10:40:15.287 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.hungrybadger.entity.Review:cuisineType]
[DEBUG] 2025-10-15 10:40:15.287 [main] BasicValueBinder - building BasicValue for cuisineType
[DEBUG] 2025-10-15 10:40:15.287 [main] BasicValue - Skipping column re-registration: review.cuisine_type
[DEBUG] 2025-10-15 10:40:15.287 [main] PropertyBinder - Building property cuisineType
[DEBUG] 2025-10-15 10:40:15.288 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='personal_notes')
[DEBUG] 2025-10-15 10:40:15.288 [main] PropertyBinder - MetadataSourceProcessor property personalNotes with lazy=false
[DEBUG] 2025-10-15 10:40:15.288 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.hungrybadger.entity.Review:personalNotes]
[DEBUG] 2025-10-15 10:40:15.288 [main] BasicValueBinder - building BasicValue for personalNotes
[DEBUG] 2025-10-15 10:40:15.288 [main] BasicValue - Skipping column re-registration: review.personal_notes
[DEBUG] 2025-10-15 10:40:15.288 [main] PropertyBinder - Building property personalNotes
[DEBUG] 2025-10-15 10:40:15.288 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='personal_rating')
[DEBUG] 2025-10-15 10:40:15.288 [main] PropertyBinder - MetadataSourceProcessor property personalRating with lazy=false
[DEBUG] 2025-10-15 10:40:15.288 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.hungrybadger.entity.Review:personalRating]
[DEBUG] 2025-10-15 10:40:15.288 [main] BasicValueBinder - building BasicValue for personalRating
[DEBUG] 2025-10-15 10:40:15.289 [main] BasicValue - Skipping column re-registration: review.personal_rating
[DEBUG] 2025-10-15 10:40:15.289 [main] PropertyBinder - Building property personalRating
[DEBUG] 2025-10-15 10:40:15.289 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='restaurant_name')
[DEBUG] 2025-10-15 10:40:15.289 [main] PropertyBinder - MetadataSourceProcessor property restaurantName with lazy=false
[DEBUG] 2025-10-15 10:40:15.289 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.hungrybadger.entity.Review:restaurantName]
[DEBUG] 2025-10-15 10:40:15.289 [main] BasicValueBinder - building BasicValue for restaurantName
[DEBUG] 2025-10-15 10:40:15.289 [main] BasicValue - Skipping column re-registration: review.restaurant_name
[DEBUG] 2025-10-15 10:40:15.289 [main] PropertyBinder - Building property restaurantName
[DEBUG] 2025-10-15 10:40:15.291 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: org.hungrybadger.entity
[DEBUG] 2025-10-15 10:40:15.298 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2025-10-15 10:40:15.298 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for cuisineType
[DEBUG] 2025-10-15 10:40:15.300 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for personalNotes
[DEBUG] 2025-10-15 10:40:15.300 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for personalRating
[DEBUG] 2025-10-15 10:40:15.300 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for restaurantName
[DEBUG] 2025-10-15 10:40:15.303 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [review]
[DEBUG] 2025-10-15 10:40:15.525 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2025-10-15 10:40:15.581 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2025-10-15 10:40:15.581 [main] SessionFactoryImpl - Instantiating SessionFactory with settings: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=11, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, java.class.path=C:\Program Files\JetBrains\IntelliJ IDEA 2025.2.1\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2025.2.1\plugins\junit\lib\junit5-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2025.2.1\plugins\junit\lib\junit-rt.jar;C:\Users\mamcc\IdeaProjects\PersonalFoodReviewer\target\test-classes;C:\Users\mamcc\IdeaProjects\PersonalFoodReviewer\target\classes;C:\Users\mamcc\.m2\repository\org\hibernate\orm\hibernate-core\6.4.3.Final\hibernate-core-6.4.3.Final.jar;C:\Users\mamcc\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\mamcc\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\mamcc\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\mamcc\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\mamcc\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\mamcc\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\mamcc\.m2\repository\net\bytebuddy\byte-buddy\1.14.7\byte-buddy-1.14.7.jar;C:\Users\mamcc\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\mamcc\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\mamcc\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\mamcc\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\mamcc\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\mamcc\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\mamcc\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\mamcc\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\mamcc\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\mamcc\.m2\repository\org\hibernate\orm\hibernate-c3p0\6.4.3.Final\hibernate-c3p0-6.4.3.Final.jar;C:\Users\mamcc\.m2\repository\com\mchange\c3p0\0.9.5.5\c3p0-0.9.5.5.jar;C:\Users\mamcc\.m2\repository\com\mchange\mchange-commons-java\0.2.19\mchange-commons-java-0.2.19.jar;C:\Users\mamcc\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\mamcc\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\mamcc\.m2\repository\javax\javaee-web-api\7.0\javaee-web-api-7.0.jar;C:\Users\mamcc\.m2\repository\mysql\mysql-connector-java\8.0.16\mysql-connector-java-8.0.16.jar;C:\Users\mamcc\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\mamcc\.m2\repository\org\apache\logging\log4j\log4j-api\2.17.1\log4j-api-2.17.1.jar;C:\Users\mamcc\.m2\repository\org\apache\logging\log4j\log4j-core\2.17.1\log4j-core-2.17.1.jar;C:\Users\mamcc\.m2\repository\jstl\jstl\1.2\jstl-1.2.jar;C:\Users\mamcc\.m2\repository\org\junit\platform\junit-platform-runner\1.0.0\junit-platform-runner-1.0.0.jar;C:\Users\mamcc\.m2\repository\org\apiguardian\apiguardian-api\1.0.0\apiguardian-api-1.0.0.jar;C:\Users\mamcc\.m2\repository\org\junit\platform\junit-platform-launcher\1.0.0\junit-platform-launcher-1.0.0.jar;C:\Users\mamcc\.m2\repository\org\junit\platform\junit-platform-suite-api\1.0.0\junit-platform-suite-api-1.0.0.jar;C:\Users\mamcc\.m2\repository\org\junit\platform\junit-platform-commons\1.0.0\junit-platform-commons-1.0.0.jar;C:\Users\mamcc\.m2\repository\org\junit\vintage\junit-vintage-engine\4.12.0\junit-vintage-engine-4.12.0.jar;C:\Users\mamcc\.m2\repository\org\junit\platform\junit-platform-engine\1.0.0\junit-platform-engine-1.0.0.jar;C:\Users\mamcc\.m2\repository\org\opentest4j\opentest4j\1.0.0\opentest4j-1.0.0.jar;C:\Users\mamcc\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.0.0\junit-jupiter-engine-5.0.0.jar;C:\Users\mamcc\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.0.0\junit-jupiter-api-5.0.0.jar, kotlinx.coroutines.debug.enable.mutable.state.flows.stack.trace=true, java.vm.vendor=Eclipse Adoptium, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=https://adoptium.net/, user.timezone=America/Chicago, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Eclipse Adoptium\jdk-11.0.28.6-hotspot\bin, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 org.hungrybadger.persistence.ReviewDaoTest, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\mamcc, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2025-07-15, java.home=C:\Program Files\Eclipse Adoptium\jdk-11.0.28.6-hotspot, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, intellij.debug.agent=true, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, user.script=, connection.password=Marthacodes, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=11.0.28+6, user.name=Test, path.separator=;, kotlinx.coroutines.debug.enable.creation.stack.trace=false, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3307/hungryBadger_test, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, java.vendor.version=Temurin-11.0.28+6, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=C:\Users\mamcc\AppData\Local\Temp\, java.version=11.0.28, jboss.modules.system.pkgs=com.intellij.rt, user.dir=C:\Users\mamcc\IdeaProjects\PersonalFoodReviewer, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1f129467, kotlinx.coroutines.debug.enable.flows.stack.trace=true, java.library.path=C:\Program Files\Eclipse Adoptium\jdk-11.0.28.6-hotspot\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Microsoft\jdk-21.0.2.13-hotspot\bin;C:\Program Files\Eclipse Adoptium\jdk-11.0.28.6-hotspot\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\dotnet\;C:\Program Files\Amazon\AWSCLIV2\;C:\Program Files\nodejs\;C:\Program Files\MySQL\MySQL Server 9.0\bin;C:\Program Files\NVIDIA Corporation\NVIDIA app\NvDLISR;C:\Program Files\Git\cmd;C:\Users\mamcc\AppData\Local\Microsoft\WindowsApps;;C:\Users\mamcc\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\mamcc\AppData\Roaming\npm;., java.vendor=Eclipse Adoptium, java.vm.info=mixed mode, java.vm.version=11.0.28+6, java.specification.maintenance.version=3, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3307/hungryBadger_test, debugger.agent.enable.coroutines=true, java.class.version=55.0}
[DEBUG] 2025-10-15 10:40:15.587 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2025-10-15 10:40:15.595 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2025-10-15 10:40:15.644 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2025-10-15 10:40:15.644 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2025-10-15 10:40:15.645 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2025-10-15 10:40:15.646 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2025-10-15 10:40:15.647 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@4ffced4e] under count; prior registration was null
[DEBUG] 2025-10-15 10:40:15.649 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@681061d6] under every; prior registration was null
[DEBUG] 2025-10-15 10:40:15.649 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@53d6e959] under any; prior registration was null
[DEBUG] 2025-10-15 10:40:15.649 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2025-10-15 10:40:15.649 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2025-10-15 10:40:15.649 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2025-10-15 10:40:15.650 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2025-10-15 10:40:15.650 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2025-10-15 10:40:15.650 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2025-10-15 10:40:15.650 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2025-10-15 10:40:15.650 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2025-10-15 10:40:15.650 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2025-10-15 10:40:15.650 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2025-10-15 10:40:15.651 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2025-10-15 10:40:15.651 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2025-10-15 10:40:15.651 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2025-10-15 10:40:15.651 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2025-10-15 10:40:15.651 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2025-10-15 10:40:15.651 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2025-10-15 10:40:15.651 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2025-10-15 10:40:15.653 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6d294ddc] under sinh; prior registration was null
[DEBUG] 2025-10-15 10:40:15.653 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2801827a] under cosh; prior registration was null
[DEBUG] 2025-10-15 10:40:15.653 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@50bc3219] under tanh; prior registration was null
[DEBUG] 2025-10-15 10:40:15.654 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@599f1b7] under pi; prior registration was null
[DEBUG] 2025-10-15 10:40:15.654 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@22791b75] under log; prior registration was null
[DEBUG] 2025-10-15 10:40:15.654 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2025-10-15 10:40:15.654 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2025-10-15 10:40:15.654 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2025-10-15 10:40:15.654 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2025-10-15 10:40:15.654 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2025-10-15 10:40:15.655 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2025-10-15 10:40:15.655 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2025-10-15 10:40:15.655 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2025-10-15 10:40:15.655 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2025-10-15 10:40:15.655 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2025-10-15 10:40:15.655 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2025-10-15 10:40:15.655 [main] SqmFunctionRegistry - Registering alternate key : length -> character_length
[DEBUG] 2025-10-15 10:40:15.656 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@703fa45] under position; prior registration was null
[DEBUG] 2025-10-15 10:40:15.659 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@2506b881] under overlay; prior registration was null
[DEBUG] 2025-10-15 10:40:15.660 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@740b9a50] under trim; prior registration was null
[DEBUG] 2025-10-15 10:40:15.661 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@6ac45c0c] under cast; prior registration was null
[DEBUG] 2025-10-15 10:40:15.661 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@12192604] under collate; prior registration was null
[DEBUG] 2025-10-15 10:40:15.661 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@3002e397] under extract; prior registration was null
[DEBUG] 2025-10-15 10:40:15.662 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2025-10-15 10:40:15.662 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2025-10-15 10:40:15.662 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@723e2d08] under ifnull; prior registration was null
[DEBUG] 2025-10-15 10:40:15.662 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2025-10-15 10:40:15.662 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2025-10-15 10:40:15.663 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@79df80a4] under pad; prior registration was null
[DEBUG] 2025-10-15 10:40:15.663 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@2eb0cefe] under str; prior registration was null
[DEBUG] 2025-10-15 10:40:15.664 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@138f0661] under format; prior registration was null
[DEBUG] 2025-10-15 10:40:15.665 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@132e3594] under timestampadd; prior registration was null
[DEBUG] 2025-10-15 10:40:15.666 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@4f3356c0] under timestampdiff; prior registration was null
[DEBUG] 2025-10-15 10:40:15.666 [main] SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
[DEBUG] 2025-10-15 10:40:15.666 [main] SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
[DEBUG] 2025-10-15 10:40:15.666 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@51888019] under current_date; prior registration was null
[DEBUG] 2025-10-15 10:40:15.666 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6f50d55c] under current_time; prior registration was null
[DEBUG] 2025-10-15 10:40:15.666 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@19b5214b] under current_timestamp; prior registration was null
[DEBUG] 2025-10-15 10:40:15.666 [main] SqmFunctionRegistry - Registering alternate key : current date -> current_date
[DEBUG] 2025-10-15 10:40:15.667 [main] SqmFunctionRegistry - Registering alternate key : current time -> current_time
[DEBUG] 2025-10-15 10:40:15.667 [main] SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2025-10-15 10:40:15.667 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5fb3111a] under local_date; prior registration was null
[DEBUG] 2025-10-15 10:40:15.667 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4aaecabd] under local_time; prior registration was null
[DEBUG] 2025-10-15 10:40:15.667 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@23bd0c81] under local_datetime; prior registration was null
[DEBUG] 2025-10-15 10:40:15.667 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1332dec4] under offset_datetime; prior registration was null
[DEBUG] 2025-10-15 10:40:15.667 [main] SqmFunctionRegistry - Registering alternate key : local date -> local_date
[DEBUG] 2025-10-15 10:40:15.667 [main] SqmFunctionRegistry - Registering alternate key : local time -> local_time
[DEBUG] 2025-10-15 10:40:15.667 [main] SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
[DEBUG] 2025-10-15 10:40:15.667 [main] SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2025-10-15 10:40:15.667 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@544e3679] under instant; prior registration was null
[DEBUG] 2025-10-15 10:40:15.667 [main] SqmFunctionRegistry - Registering alternate key : current_instant -> instant
[DEBUG] 2025-10-15 10:40:15.667 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@3820cfe] under sql; prior registration was null
[DEBUG] 2025-10-15 10:40:15.668 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2025-10-15 10:40:15.668 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2025-10-15 10:40:15.668 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2025-10-15 10:40:15.668 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2025-10-15 10:40:15.668 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@22791b75
[DEBUG] 2025-10-15 10:40:15.668 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
[DEBUG] 2025-10-15 10:40:15.668 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2025-10-15 10:40:15.668 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2025-10-15 10:40:15.668 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2025-10-15 10:40:15.668 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2025-10-15 10:40:15.668 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
[DEBUG] 2025-10-15 10:40:15.668 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2025-10-15 10:40:15.668 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2025-10-15 10:40:15.669 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@3b4ef59f] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
[DEBUG] 2025-10-15 10:40:15.669 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@22cb3d59] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
[DEBUG] 2025-10-15 10:40:15.669 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
[DEBUG] 2025-10-15 10:40:15.669 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2025-10-15 10:40:15.669 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2025-10-15 10:40:15.669 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2025-10-15 10:40:15.669 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2025-10-15 10:40:15.669 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2025-10-15 10:40:15.669 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2025-10-15 10:40:15.669 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2025-10-15 10:40:15.669 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
[DEBUG] 2025-10-15 10:40:15.670 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
[DEBUG] 2025-10-15 10:40:15.670 [main] SqmFunctionRegistry - Registering alternate key : day -> dayofmonth
[DEBUG] 2025-10-15 10:40:15.670 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
[DEBUG] 2025-10-15 10:40:15.670 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2025-10-15 10:40:15.670 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2025-10-15 10:40:15.670 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2025-10-15 10:40:15.670 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2025-10-15 10:40:15.670 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
[DEBUG] 2025-10-15 10:40:15.670 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
[DEBUG] 2025-10-15 10:40:15.670 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
[DEBUG] 2025-10-15 10:40:15.670 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
[DEBUG] 2025-10-15 10:40:15.670 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
[DEBUG] 2025-10-15 10:40:15.671 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
[DEBUG] 2025-10-15 10:40:15.671 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
[DEBUG] 2025-10-15 10:40:15.671 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2025-10-15 10:40:15.671 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
[DEBUG] 2025-10-15 10:40:15.671 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
[DEBUG] 2025-10-15 10:40:15.671 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
[DEBUG] 2025-10-15 10:40:15.671 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
[DEBUG] 2025-10-15 10:40:15.671 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2025-10-15 10:40:15.671 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2025-10-15 10:40:15.671 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2025-10-15 10:40:15.671 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2025-10-15 10:40:15.671 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2025-10-15 10:40:15.671 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@33e4b9c4] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@703fa45
[DEBUG] 2025-10-15 10:40:15.671 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2025-10-15 10:40:15.671 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2025-10-15 10:40:15.671 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2025-10-15 10:40:15.676 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@73e4387] under trunc; prior registration was null
[DEBUG] 2025-10-15 10:40:15.676 [main] SqmFunctionRegistry - Registering alternate key : truncate -> trunc
[DEBUG] 2025-10-15 10:40:15.676 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2025-10-15 10:40:15.676 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@d87d449] under bitand; prior registration was null
[DEBUG] 2025-10-15 10:40:15.676 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4137aab0] under bitor; prior registration was null
[DEBUG] 2025-10-15 10:40:15.676 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1df9186f] under bitxor; prior registration was null
[DEBUG] 2025-10-15 10:40:15.676 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@682e422c] under bitnot; prior registration was null
[DEBUG] 2025-10-15 10:40:15.676 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2025-10-15 10:40:15.676 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2025-10-15 10:40:15.676 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
[DEBUG] 2025-10-15 10:40:15.676 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2025-10-15 10:40:15.676 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2025-10-15 10:40:15.677 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
[DEBUG] 2025-10-15 10:40:15.677 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2025-10-15 10:40:15.677 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2025-10-15 10:40:15.677 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
[DEBUG] 2025-10-15 10:40:15.677 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
[DEBUG] 2025-10-15 10:40:15.677 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
[DEBUG] 2025-10-15 10:40:15.677 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
[DEBUG] 2025-10-15 10:40:15.677 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
[DEBUG] 2025-10-15 10:40:15.677 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@5bb8e6fc] under format; prior registration was org.hibernate.dialect.function.FormatFunction@138f0661
[DEBUG] 2025-10-15 10:40:15.677 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
[DEBUG] 2025-10-15 10:40:15.677 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
[DEBUG] 2025-10-15 10:40:15.677 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2025-10-15 10:40:15.677 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2025-10-15 10:40:15.677 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@4aaecabd
[DEBUG] 2025-10-15 10:40:15.677 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@23bd0c81
[DEBUG] 2025-10-15 10:40:15.677 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
[DEBUG] 2025-10-15 10:40:15.678 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2726a511] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@599f1b7
[DEBUG] 2025-10-15 10:40:15.678 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@72c9ebfa] under chr; prior registration was null
[DEBUG] 2025-10-15 10:40:15.678 [main] SqmFunctionRegistry - Registering alternate key : char -> chr
[DEBUG] 2025-10-15 10:40:15.678 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@686cf8ad] under sysdate; prior registration was null
[DEBUG] 2025-10-15 10:40:15.678 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2025-10-15 10:40:15.678 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2025-10-15 10:40:15.678 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2025-10-15 10:40:15.678 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2025-10-15 10:40:15.678 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2025-10-15 10:40:15.678 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2025-10-15 10:40:15.680 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@62f9c790] under rank; prior registration was null
[DEBUG] 2025-10-15 10:40:15.680 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@21e5f0b6] under dense_rank; prior registration was null
[DEBUG] 2025-10-15 10:40:15.680 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@93bf0e0] under percent_rank; prior registration was null
[DEBUG] 2025-10-15 10:40:15.680 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@4981d95b] under cume_dist; prior registration was null
[DEBUG] 2025-10-15 10:40:15.681 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@7a606260] under listagg; prior registration was null
[DEBUG] 2025-10-15 10:40:15.685 [main] HQL_FUNCTIONS - abs(NUMERIC arg)
[DEBUG] 2025-10-15 10:40:15.685 [main] HQL_FUNCTIONS - Double acos(NUMERIC arg)
[DEBUG] 2025-10-15 10:40:15.685 [main] HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days)
[DEBUG] 2025-10-15 10:40:15.685 [main] HQL_FUNCTIONS - addtime(TIME datetime, TIME time)
[DEBUG] 2025-10-15 10:40:15.685 [main] HQL_FUNCTIONS - Boolean any(BOOLEAN arg)
[DEBUG] 2025-10-15 10:40:15.685 [main] HQL_FUNCTIONS - Integer ascii(STRING arg)
[DEBUG] 2025-10-15 10:40:15.685 [main] HQL_FUNCTIONS - Double asin(NUMERIC arg)
[DEBUG] 2025-10-15 10:40:15.685 [main] HQL_FUNCTIONS - Double atan(NUMERIC arg)
[DEBUG] 2025-10-15 10:40:15.686 [main] HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2025-10-15 10:40:15.686 [main] HQL_FUNCTIONS - avg(arg)
[DEBUG] 2025-10-15 10:40:15.686 [main] HQL_FUNCTIONS - bit_and(arg)
[DEBUG] 2025-10-15 10:40:15.686 [main] HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2025-10-15 10:40:15.686 [main] HQL_FUNCTIONS - bit_or(arg)
[DEBUG] 2025-10-15 10:40:15.686 [main] HQL_FUNCTIONS - bitand(arg0, arg1)
[DEBUG] 2025-10-15 10:40:15.686 [main] HQL_FUNCTIONS - bitnot(arg)
[DEBUG] 2025-10-15 10:40:15.686 [main] HQL_FUNCTIONS - bitor(arg0, arg1)
[DEBUG] 2025-10-15 10:40:15.686 [main] HQL_FUNCTIONS - bitxor(arg0, arg1)
[DEBUG] 2025-10-15 10:40:15.686 [main] HQL_FUNCTIONS - cast(arg as Type)
[DEBUG] 2025-10-15 10:40:15.686 [main] HQL_FUNCTIONS - ceiling(NUMERIC arg)
[DEBUG] 2025-10-15 10:40:15.686 [main] HQL_FUNCTIONS - Character char(INTEGER arg)
[DEBUG] 2025-10-15 10:40:15.686 [main] HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2025-10-15 10:40:15.686 [main] HQL_FUNCTIONS - Character chr(INTEGER arg)
[DEBUG] 2025-10-15 10:40:15.686 [main] HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
[DEBUG] 2025-10-15 10:40:15.686 [main] HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
[DEBUG] 2025-10-15 10:40:15.686 [main] HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2025-10-15 10:40:15.686 [main] HQL_FUNCTIONS - Double cos(NUMERIC arg)
[DEBUG] 2025-10-15 10:40:15.686 [main] HQL_FUNCTIONS - Double cosh(NUMERIC arg)
[DEBUG] 2025-10-15 10:40:15.686 [main] HQL_FUNCTIONS - Double cot(NUMERIC arg)
[DEBUG] 2025-10-15 10:40:15.686 [main] HQL_FUNCTIONS - Long count([distinct ]{arg|*})
[DEBUG] 2025-10-15 10:40:15.686 [main] HQL_FUNCTIONS - Integer crc32(arg)
[DEBUG] 2025-10-15 10:40:15.686 [main] HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
[DEBUG] 2025-10-15 10:40:15.686 [main] HQL_FUNCTIONS - Date curdate()
[DEBUG] 2025-10-15 10:40:15.687 [main] HQL_FUNCTIONS - Date current date
[DEBUG] 2025-10-15 10:40:15.687 [main] HQL_FUNCTIONS - Time current time
[DEBUG] 2025-10-15 10:40:15.687 [main] HQL_FUNCTIONS - Timestamp current timestamp
[DEBUG] 2025-10-15 10:40:15.687 [main] HQL_FUNCTIONS - Date current_date
[DEBUG] 2025-10-15 10:40:15.687 [main] HQL_FUNCTIONS - Instant current_instant
[DEBUG] 2025-10-15 10:40:15.687 [main] HQL_FUNCTIONS - Time current_time
[DEBUG] 2025-10-15 10:40:15.687 [main] HQL_FUNCTIONS - Timestamp current_timestamp
[DEBUG] 2025-10-15 10:40:15.687 [main] HQL_FUNCTIONS - Time curtime()
[DEBUG] 2025-10-15 10:40:15.687 [main] HQL_FUNCTIONS - Date date(arg)
[DEBUG] 2025-10-15 10:40:15.687 [main] HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2025-10-15 10:40:15.687 [main] HQL_FUNCTIONS - Integer datediff(DATE end, DATE start)
[DEBUG] 2025-10-15 10:40:15.687 [main] HQL_FUNCTIONS - Integer day(DATE arg)
[DEBUG] 2025-10-15 10:40:15.687 [main] HQL_FUNCTIONS - String dayname(DATE arg)
[DEBUG] 2025-10-15 10:40:15.687 [main] HQL_FUNCTIONS - Integer dayofmonth(DATE arg)
[DEBUG] 2025-10-15 10:40:15.687 [main] HQL_FUNCTIONS - Integer dayofweek(DATE arg)
[DEBUG] 2025-10-15 10:40:15.687 [main] HQL_FUNCTIONS - Integer dayofyear(DATE arg)
[DEBUG] 2025-10-15 10:40:15.687 [main] HQL_FUNCTIONS - Double degrees(NUMERIC arg)
[DEBUG] 2025-10-15 10:40:15.687 [main] HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
[DEBUG] 2025-10-15 10:40:15.687 [main] HQL_FUNCTIONS - Boolean every(BOOLEAN arg)
[DEBUG] 2025-10-15 10:40:15.687 [main] HQL_FUNCTIONS - Double exp(NUMERIC arg)
[DEBUG] 2025-10-15 10:40:15.687 [main] HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2025-10-15 10:40:15.687 [main] HQL_FUNCTIONS - first_valueANY value
[DEBUG] 2025-10-15 10:40:15.687 [main] HQL_FUNCTIONS - floor(NUMERIC arg)
[DEBUG] 2025-10-15 10:40:15.687 [main] HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2025-10-15 10:40:15.687 [main] HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2025-10-15 10:40:15.687 [main] HQL_FUNCTIONS - Integer hour(TIME arg)
[DEBUG] 2025-10-15 10:40:15.687 [main] HQL_FUNCTIONS - ifnull(arg0, arg1)
[DEBUG] 2025-10-15 10:40:15.687 [main] HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2025-10-15 10:40:15.687 [main] HQL_FUNCTIONS - Instant instant
[DEBUG] 2025-10-15 10:40:15.687 [main] HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2025-10-15 10:40:15.688 [main] HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2025-10-15 10:40:15.688 [main] HQL_FUNCTIONS - Date last_day(DATE arg)
[DEBUG] 2025-10-15 10:40:15.688 [main] HQL_FUNCTIONS - last_valueANY value
[DEBUG] 2025-10-15 10:40:15.688 [main] HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2025-10-15 10:40:15.688 [main] HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2025-10-15 10:40:15.688 [main] HQL_FUNCTIONS - String left(STRING string, INTEGER length)
[DEBUG] 2025-10-15 10:40:15.688 [main] HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
[DEBUG] 2025-10-15 10:40:15.688 [main] HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
[DEBUG] 2025-10-15 10:40:15.688 [main] HQL_FUNCTIONS - Double ln(NUMERIC arg)
[DEBUG] 2025-10-15 10:40:15.688 [main] HQL_FUNCTIONS - LocalDate local date
[DEBUG] 2025-10-15 10:40:15.688 [main] HQL_FUNCTIONS - LocalDateTime local datetime
[DEBUG] 2025-10-15 10:40:15.688 [main] HQL_FUNCTIONS - LocalTime local time
[DEBUG] 2025-10-15 10:40:15.688 [main] HQL_FUNCTIONS - LocalDate local_date
[DEBUG] 2025-10-15 10:40:15.688 [main] HQL_FUNCTIONS - LocalDateTime local_datetime
[DEBUG] 2025-10-15 10:40:15.688 [main] HQL_FUNCTIONS - LocalTime local_time
[DEBUG] 2025-10-15 10:40:15.688 [main] HQL_FUNCTIONS - Timestamp localtime
[DEBUG] 2025-10-15 10:40:15.688 [main] HQL_FUNCTIONS - Timestamp localtimestamp
[DEBUG] 2025-10-15 10:40:15.688 [main] HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2025-10-15 10:40:15.688 [main] HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
[DEBUG] 2025-10-15 10:40:15.688 [main] HQL_FUNCTIONS - Double log10(NUMERIC arg)
[DEBUG] 2025-10-15 10:40:15.688 [main] HQL_FUNCTIONS - Double log2(NUMERIC arg)
[DEBUG] 2025-10-15 10:40:15.688 [main] HQL_FUNCTIONS - String lower(STRING string)
[DEBUG] 2025-10-15 10:40:15.688 [main] HQL_FUNCTIONS - String lpad(string, length[, padding])
[DEBUG] 2025-10-15 10:40:15.688 [main] HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
[DEBUG] 2025-10-15 10:40:15.688 [main] HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear)
[DEBUG] 2025-10-15 10:40:15.688 [main] HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
[DEBUG] 2025-10-15 10:40:15.688 [main] HQL_FUNCTIONS - max(COMPARABLE arg)
[DEBUG] 2025-10-15 10:40:15.689 [main] HQL_FUNCTIONS - String md5(arg)
[DEBUG] 2025-10-15 10:40:15.689 [main] HQL_FUNCTIONS - Integer microsecond(TIME arg)
[DEBUG] 2025-10-15 10:40:15.689 [main] HQL_FUNCTIONS - min(COMPARABLE arg)
[DEBUG] 2025-10-15 10:40:15.689 [main] HQL_FUNCTIONS - Integer minute(TIME arg)
[DEBUG] 2025-10-15 10:40:15.689 [main] HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2025-10-15 10:40:15.689 [main] HQL_FUNCTIONS - Integer month(DATE arg)
[DEBUG] 2025-10-15 10:40:15.689 [main] HQL_FUNCTIONS - String monthname(DATE arg)
[DEBUG] 2025-10-15 10:40:15.689 [main] HQL_FUNCTIONS - Timestamp now()
[DEBUG] 2025-10-15 10:40:15.689 [main] HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
[DEBUG] 2025-10-15 10:40:15.689 [main] HQL_FUNCTIONS - nullif(arg0, arg1)
[DEBUG] 2025-10-15 10:40:15.689 [main] HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2025-10-15 10:40:15.689 [main] HQL_FUNCTIONS - OffsetDateTime offset datetime
[DEBUG] 2025-10-15 10:40:15.689 [main] HQL_FUNCTIONS - OffsetDateTime offset_datetime
[DEBUG] 2025-10-15 10:40:15.689 [main] HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2025-10-15 10:40:15.689 [main] HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2025-10-15 10:40:15.689 [main] HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
[DEBUG] 2025-10-15 10:40:15.689 [main] HQL_FUNCTIONS - Double pi
[DEBUG] 2025-10-15 10:40:15.689 [main] HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
[DEBUG] 2025-10-15 10:40:15.689 [main] HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2025-10-15 10:40:15.689 [main] HQL_FUNCTIONS - Integer quarter(DATE arg)
[DEBUG] 2025-10-15 10:40:15.690 [main] HQL_FUNCTIONS - Double radians(NUMERIC arg)
[DEBUG] 2025-10-15 10:40:15.690 [main] HQL_FUNCTIONS - Double rand([INTEGER seed])
[DEBUG] 2025-10-15 10:40:15.690 [main] HQL_FUNCTIONS - Long rank([arg0[, ...]])
[DEBUG] 2025-10-15 10:40:15.690 [main] HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
[DEBUG] 2025-10-15 10:40:15.690 [main] HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2025-10-15 10:40:15.690 [main] HQL_FUNCTIONS - String reverse(STRING arg)
[DEBUG] 2025-10-15 10:40:15.690 [main] HQL_FUNCTIONS - String right(STRING string, INTEGER length)
[DEBUG] 2025-10-15 10:40:15.690 [main] HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
[DEBUG] 2025-10-15 10:40:15.690 [main] HQL_FUNCTIONS - Long row_number()
[DEBUG] 2025-10-15 10:40:15.690 [main] HQL_FUNCTIONS - String rpad(string, length[, padding])
[DEBUG] 2025-10-15 10:40:15.690 [main] HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
[DEBUG] 2025-10-15 10:40:15.690 [main] HQL_FUNCTIONS - Integer second(TIME arg)
[DEBUG] 2025-10-15 10:40:15.690 [main] HQL_FUNCTIONS - String sha(arg)
[DEBUG] 2025-10-15 10:40:15.690 [main] HQL_FUNCTIONS - String sha1(arg)
[DEBUG] 2025-10-15 10:40:15.690 [main] HQL_FUNCTIONS - String sha2(arg0, arg1)
[DEBUG] 2025-10-15 10:40:15.690 [main] HQL_FUNCTIONS - Integer sign(NUMERIC arg)
[DEBUG] 2025-10-15 10:40:15.690 [main] HQL_FUNCTIONS - Double sin(NUMERIC arg)
[DEBUG] 2025-10-15 10:40:15.690 [main] HQL_FUNCTIONS - Double sinh(NUMERIC arg)
[DEBUG] 2025-10-15 10:40:15.690 [main] HQL_FUNCTIONS - String soundex(arg)
[DEBUG] 2025-10-15 10:40:15.690 [main] HQL_FUNCTIONS - String space(INTEGER arg)
[DEBUG] 2025-10-15 10:40:15.690 [main] HQL_FUNCTIONS - Object sql
[DEBUG] 2025-10-15 10:40:15.690 [main] HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
[DEBUG] 2025-10-15 10:40:15.690 [main] HQL_FUNCTIONS - Double stddev(NUMERIC arg)
[DEBUG] 2025-10-15 10:40:15.690 [main] HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
[DEBUG] 2025-10-15 10:40:15.690 [main] HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
[DEBUG] 2025-10-15 10:40:15.690 [main] HQL_FUNCTIONS - String str(arg)
[DEBUG] 2025-10-15 10:40:15.690 [main] HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days)
[DEBUG] 2025-10-15 10:40:15.691 [main] HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2025-10-15 10:40:15.691 [main] HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2025-10-15 10:40:15.691 [main] HQL_FUNCTIONS - subtime(TIME datetime, TIME time)
[DEBUG] 2025-10-15 10:40:15.691 [main] HQL_FUNCTIONS - sum(arg)
[DEBUG] 2025-10-15 10:40:15.691 [main] HQL_FUNCTIONS - Timestamp sysdate()
[DEBUG] 2025-10-15 10:40:15.691 [main] HQL_FUNCTIONS - Double tan(NUMERIC arg)
[DEBUG] 2025-10-15 10:40:15.691 [main] HQL_FUNCTIONS - Double tanh(NUMERIC arg)
[DEBUG] 2025-10-15 10:40:15.691 [main] HQL_FUNCTIONS - String time(arg)
[DEBUG] 2025-10-15 10:40:15.691 [main] HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1])
[DEBUG] 2025-10-15 10:40:15.691 [main] HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2025-10-15 10:40:15.691 [main] HQL_FUNCTIONS - basicType@14(java.lang.Long,-5)|basicType@17(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2025-10-15 10:40:15.691 [main] HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2025-10-15 10:40:15.691 [main] HQL_FUNCTIONS - trunc( ... )
[DEBUG] 2025-10-15 10:40:15.691 [main] HQL_FUNCTIONS - truncate( ... )
[DEBUG] 2025-10-15 10:40:15.691 [main] HQL_FUNCTIONS - String upper(STRING string)
[DEBUG] 2025-10-15 10:40:15.691 [main] HQL_FUNCTIONS - Date utc_date
[DEBUG] 2025-10-15 10:40:15.691 [main] HQL_FUNCTIONS - Time utc_time
[DEBUG] 2025-10-15 10:40:15.691 [main] HQL_FUNCTIONS - Timestamp utc_timestamp
[DEBUG] 2025-10-15 10:40:15.691 [main] HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
[DEBUG] 2025-10-15 10:40:15.691 [main] HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
[DEBUG] 2025-10-15 10:40:15.691 [main] HQL_FUNCTIONS - Double variance(NUMERIC arg)
[DEBUG] 2025-10-15 10:40:15.691 [main] HQL_FUNCTIONS - Integer week(DATE arg)
[DEBUG] 2025-10-15 10:40:15.692 [main] HQL_FUNCTIONS - Integer year(DATE arg)
[DEBUG] 2025-10-15 10:40:15.697 [main] cache - Starting QueryInterpretationCache(2048)
[DEBUG] 2025-10-15 10:40:15.808 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2025-10-15 10:40:15.809 [main] EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
[DEBUG] 2025-10-15 10:40:15.915 [main] ClassLoaderAccessImpl - Not known whether passed class name [org.hungrybadger.entity.Review] is safe
[DEBUG] 2025-10-15 10:40:15.915 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.hungrybadger.entity.Review
[DEBUG] 2025-10-15 10:40:16.133 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.hungrybadger.entity.Review]: private accessor [cuisineType]
[DEBUG] 2025-10-15 10:40:16.194 [main] creation - Starting post-init callbacks
[DEBUG] 2025-10-15 10:40:16.195 [main] creation - Starting PostInitCallbackEntry : Entity(org.hungrybadger.entity.Review) `staticFetchableList` generator
[DEBUG] 2025-10-15 10:40:16.285 [main] create - Created new SQL alias : r1_0
[DEBUG] 2025-10-15 10:40:16.287 [main] create - Registration of TableGroup [StandardTableGroup(org.hungrybadger.entity.Review)] with identifierForTableGroup [org.hungrybadger.entity.Review] for NavigablePath [org.hungrybadger.entity.Review] 
[DEBUG] 2025-10-15 10:40:16.305 [main] AST - DomainResult Graph:
 \-EntityResultImpl [org.hungrybadger.entity.Review]
 |  +-BasicFetch [org.hungrybadger.entity.Review.cuisineType]
 |  +-BasicFetch [org.hungrybadger.entity.Review.personalNotes]
 |  +-BasicFetch [org.hungrybadger.entity.Review.personalRating]
 |  \-BasicFetch [org.hungrybadger.entity.Review.restaurantName]

[DEBUG] 2025-10-15 10:40:16.315 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.hungrybadger.entity.Review) {
          primaryTableReference : review as r1_0
        }
      }
    }

[DEBUG] 2025-10-15 10:40:16.328 [main] AbstractEntityPersister - Static SQL for entity: org.hungrybadger.entity.Review
[DEBUG] 2025-10-15 10:40:16.328 [main] AbstractEntityPersister -  Version select: select id from review where id=?
[DEBUG] 2025-10-15 10:40:16.328 [main] AbstractEntityPersister -  Insert (0): insert into review (cuisine_type,personal_notes,personal_rating,restaurant_name) values (?,?,?,?)
[DEBUG] 2025-10-15 10:40:16.328 [main] AbstractEntityPersister -  Update (0): update review set cuisine_type=?,personal_notes=?,personal_rating=?,restaurant_name=? where id=?
[DEBUG] 2025-10-15 10:40:16.328 [main] AbstractEntityPersister -  Delete (0): delete from review where id=?
[DEBUG] 2025-10-15 10:40:16.361 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2025-10-15 10:40:16.361 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2025-10-15 10:40:16.368 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2025-10-15 10:40:16.369 [main] JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[DEBUG] 2025-10-15 10:40:16.370 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7377781e] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@39e3ea78]
[DEBUG] 2025-10-15 10:40:16.371 [main] NamedObjectRepository - Checking 0 named HQL queries
[DEBUG] 2025-10-15 10:40:16.372 [main] NamedObjectRepository - Checking 0 named SQL queries
[DEBUG] 2025-10-15 10:40:16.372 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2025-10-15 10:40:16.372 [main] SchemaManagementToolCoordinator - No actions found; doing nothing
[DEBUG] 2025-10-15 10:40:16.375 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@246de37e
[DEBUG] 2025-10-15 10:40:16.375 [main] SessionFactoryRegistry - Registering SessionFactory: 113255dd-3ac0-4394-9ca7-e1baea6bedf6 (<unnamed>)
[DEBUG] 2025-10-15 10:40:16.375 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2025-10-15 10:40:16.375 [main] SessionFactoryImpl - Instantiated SessionFactory
[DEBUG] 2025-10-15 10:40:16.423 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2025-10-15 10:40:16.445 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2025-10-15 10:40:16.458 [main] results - Initializer list:
	  org.hungrybadger.entity.Review -> EntityResultInitializer(org.hungrybadger.entity.Review)@2042950203 (SingleTableEntityPersister(org.hungrybadger.entity.Review))

[DEBUG] 2025-10-15 10:40:16.466 [main] SQL - select r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from review r1_0 where r1_0.id=?
[DEBUG] 2025-10-15 10:40:16.488 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review): 2
[DEBUG] 2025-10-15 10:40:16.491 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Review#2] : 1597889670
[DEBUG] 2025-10-15 10:40:16.492 [main] results - Extracted JDBC value [1] - [American]
[DEBUG] 2025-10-15 10:40:16.492 [main] results - Extracted JDBC value [2] - [Wraps, good after a long day]
[DEBUG] 2025-10-15 10:40:16.492 [main] results - Extracted JDBC value [3] - [4]
[DEBUG] 2025-10-15 10:40:16.492 [main] results - Extracted JDBC value [4] - [Conrads]
[DEBUG] 2025-10-15 10:40:16.497 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Review#2
[DEBUG] 2025-10-15 10:40:16.497 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@389008d1
[DEBUG] 2025-10-15 10:40:16.500 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 10:40:16.503 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2025-10-15 10:40:16.503 [main] TransactionImpl - begin
[DEBUG] 2025-10-15 10:40:16.514 [main] TransactionImpl - committing
[DEBUG] 2025-10-15 10:40:16.515 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2025-10-15 10:40:16.516 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2025-10-15 10:40:16.520 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
[DEBUG] 2025-10-15 10:40:16.520 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2025-10-15 10:40:16.521 [main] EntityPrinter - Listing entities:
[DEBUG] 2025-10-15 10:40:16.522 [main] EntityPrinter - org.hungrybadger.entity.Review{personalNotes=Wraps, good after a long day, personalRating=4, restaurantName=Conrads, id=2, cuisineType=American}
[DEBUG] 2025-10-15 10:40:16.530 [main] SQL - delete from review where id=?
[DEBUG] 2025-10-15 10:40:16.537 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 10:40:16.538 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 10:40:16.538 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2025-10-15 10:40:16.538 [main] results - Initializer list:
	  org.hungrybadger.entity.Review -> EntityResultInitializer(org.hungrybadger.entity.Review)@439576838 (SingleTableEntityPersister(org.hungrybadger.entity.Review))

[DEBUG] 2025-10-15 10:40:16.538 [main] SQL - select r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from review r1_0 where r1_0.id=?
[DEBUG] 2025-10-15 10:40:16.540 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 10:40:16.773 [main] create - Created new SQL alias : r1_0
[DEBUG] 2025-10-15 10:40:16.773 [main] create - Registration of TableGroup [StandardTableGroup(org.hungrybadger.entity.Review(8534561313200))] with identifierForTableGroup [org.hungrybadger.entity.Review] for NavigablePath [org.hungrybadger.entity.Review] 
[DEBUG] 2025-10-15 10:40:16.783 [main] AST - DomainResult Graph:
 \-EntityResultImpl [org.hungrybadger.entity.Review(8534561313200)]
 |  +-BasicFetch [org.hungrybadger.entity.Review(8534561313200).cuisineType]
 |  +-BasicFetch [org.hungrybadger.entity.Review(8534561313200).personalNotes]
 |  +-BasicFetch [org.hungrybadger.entity.Review(8534561313200).personalRating]
 |  \-BasicFetch [org.hungrybadger.entity.Review(8534561313200).restaurantName]

[DEBUG] 2025-10-15 10:40:16.783 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.hungrybadger.entity.Review(8534561313200)) {
          primaryTableReference : review as r1_0
        }
      }
    }

[DEBUG] 2025-10-15 10:40:16.786 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
[DEBUG] 2025-10-15 10:40:16.786 [main] results - Initializer list:
	  org.hungrybadger.entity.Review(8534561313200) -> EntityResultInitializer(org.hungrybadger.entity.Review(8534561313200))@870900038 (SingleTableEntityPersister(org.hungrybadger.entity.Review))

[DEBUG] 2025-10-15 10:40:16.786 [main] SQL - select r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from review r1_0
[DEBUG] 2025-10-15 10:40:16.789 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2025-10-15 10:40:16.789 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review(8534561313200)): 1
[DEBUG] 2025-10-15 10:40:16.789 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Review(8534561313200)#1] : 1214850053
[DEBUG] 2025-10-15 10:40:16.789 [main] results - Extracted JDBC value [1] - [Japanese]
[DEBUG] 2025-10-15 10:40:16.790 [main] results - Extracted JDBC value [2] - [Good cheap rolls. Togo or sit down are both great]
[DEBUG] 2025-10-15 10:40:16.790 [main] results - Extracted JDBC value [3] - [5]
[DEBUG] 2025-10-15 10:40:16.790 [main] results - Extracted JDBC value [4] - [Sushi Express]
[DEBUG] 2025-10-15 10:40:16.790 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Review(8534561313200)#1
[DEBUG] 2025-10-15 10:40:16.790 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@e8c84eb
[DEBUG] 2025-10-15 10:40:16.790 [main] results - Extracted JDBC value [0] - [2]
[DEBUG] 2025-10-15 10:40:16.790 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review(8534561313200)): 2
[DEBUG] 2025-10-15 10:40:16.790 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Review(8534561313200)#2] : 256167987
[DEBUG] 2025-10-15 10:40:16.790 [main] results - Extracted JDBC value [1] - [American]
[DEBUG] 2025-10-15 10:40:16.790 [main] results - Extracted JDBC value [2] - [Wraps, good after a long day]
[DEBUG] 2025-10-15 10:40:16.790 [main] results - Extracted JDBC value [3] - [4]
[DEBUG] 2025-10-15 10:40:16.790 [main] results - Extracted JDBC value [4] - [Conrads]
[DEBUG] 2025-10-15 10:40:16.790 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Review(8534561313200)#2
[DEBUG] 2025-10-15 10:40:16.790 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@e8c84eb
[DEBUG] 2025-10-15 10:40:16.790 [main] results - Extracted JDBC value [0] - [3]
[DEBUG] 2025-10-15 10:40:16.790 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review(8534561313200)): 3
[DEBUG] 2025-10-15 10:40:16.791 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Review(8534561313200)#3] : 675002551
[DEBUG] 2025-10-15 10:40:16.791 [main] results - Extracted JDBC value [1] - [American]
[DEBUG] 2025-10-15 10:40:16.791 [main] results - Extracted JDBC value [2] - [Mac and Cheese Slice for the win!]
[DEBUG] 2025-10-15 10:40:16.791 [main] results - Extracted JDBC value [3] - [5]
[DEBUG] 2025-10-15 10:40:16.791 [main] results - Extracted JDBC value [4] - [Ians Pizza]
[DEBUG] 2025-10-15 10:40:16.791 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Review(8534561313200)#3
[DEBUG] 2025-10-15 10:40:16.791 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@e8c84eb
[DEBUG] 2025-10-15 10:40:16.791 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 10:40:16.792 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 10:40:16.933 [main] create - Created new SQL alias : r1_0
[DEBUG] 2025-10-15 10:40:16.933 [main] create - Registration of TableGroup [StandardTableGroup(org.hungrybadger.entity.Review(8534794645600))] with identifierForTableGroup [org.hungrybadger.entity.Review] for NavigablePath [org.hungrybadger.entity.Review] 
[DEBUG] 2025-10-15 10:40:16.938 [main] BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1f75fd1d
[DEBUG] 2025-10-15 10:40:16.938 [main] BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.hungrybadger.entity.Review(8534794645600).restaurantName) 
[DEBUG] 2025-10-15 10:40:16.941 [main] AST - DomainResult Graph:
 \-EntityResultImpl [org.hungrybadger.entity.Review(8534794645600)]
 |  +-BasicFetch [org.hungrybadger.entity.Review(8534794645600).cuisineType]
 |  +-BasicFetch [org.hungrybadger.entity.Review(8534794645600).personalNotes]
 |  +-BasicFetch [org.hungrybadger.entity.Review(8534794645600).personalRating]
 |  \-BasicFetch [org.hungrybadger.entity.Review(8534794645600).restaurantName]

[DEBUG] 2025-10-15 10:40:16.941 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.hungrybadger.entity.Review(8534794645600)) {
          primaryTableReference : review as r1_0
        }
      }
    }

[DEBUG] 2025-10-15 10:40:16.942 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
[DEBUG] 2025-10-15 10:40:16.942 [main] results - Initializer list:
	  org.hungrybadger.entity.Review(8534794645600) -> EntityResultInitializer(org.hungrybadger.entity.Review(8534794645600))@1066437568 (SingleTableEntityPersister(org.hungrybadger.entity.Review))

[DEBUG] 2025-10-15 10:40:16.942 [main] SQL - select r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from review r1_0 where r1_0.restaurant_name like ? escape ''
[DEBUG] 2025-10-15 10:40:16.945 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2025-10-15 10:40:16.945 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review(8534794645600)): 1
[DEBUG] 2025-10-15 10:40:16.945 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Review(8534794645600)#1] : 1120917396
[DEBUG] 2025-10-15 10:40:16.945 [main] results - Extracted JDBC value [1] - [Japanese]
[DEBUG] 2025-10-15 10:40:16.945 [main] results - Extracted JDBC value [2] - [Good cheap rolls. Togo or sit down are both great]
[DEBUG] 2025-10-15 10:40:16.945 [main] results - Extracted JDBC value [3] - [5]
[DEBUG] 2025-10-15 10:40:16.945 [main] results - Extracted JDBC value [4] - [Sushi Express]
[DEBUG] 2025-10-15 10:40:16.945 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Review(8534794645600)#1
[DEBUG] 2025-10-15 10:40:16.945 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@43778371
[DEBUG] 2025-10-15 10:40:16.945 [main] results - Extracted JDBC value [0] - [2]
[DEBUG] 2025-10-15 10:40:16.945 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review(8534794645600)): 2
[DEBUG] 2025-10-15 10:40:16.945 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Review(8534794645600)#2] : 1908321704
[DEBUG] 2025-10-15 10:40:16.945 [main] results - Extracted JDBC value [1] - [American]
[DEBUG] 2025-10-15 10:40:16.945 [main] results - Extracted JDBC value [2] - [Wraps, good after a long day]
[DEBUG] 2025-10-15 10:40:16.945 [main] results - Extracted JDBC value [3] - [4]
[DEBUG] 2025-10-15 10:40:16.946 [main] results - Extracted JDBC value [4] - [Conrads]
[DEBUG] 2025-10-15 10:40:16.946 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Review(8534794645600)#2
[DEBUG] 2025-10-15 10:40:16.946 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@43778371
[DEBUG] 2025-10-15 10:40:16.946 [main] results - Extracted JDBC value [0] - [3]
[DEBUG] 2025-10-15 10:40:16.946 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review(8534794645600)): 3
[DEBUG] 2025-10-15 10:40:16.946 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Review(8534794645600)#3] : 401872697
[DEBUG] 2025-10-15 10:40:16.946 [main] results - Extracted JDBC value [1] - [American]
[DEBUG] 2025-10-15 10:40:16.946 [main] results - Extracted JDBC value [2] - [Mac and Cheese Slice for the win!]
[DEBUG] 2025-10-15 10:40:16.946 [main] results - Extracted JDBC value [3] - [5]
[DEBUG] 2025-10-15 10:40:16.946 [main] results - Extracted JDBC value [4] - [Ians Pizza]
[DEBUG] 2025-10-15 10:40:16.946 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Review(8534794645600)#3
[DEBUG] 2025-10-15 10:40:16.946 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@43778371
[DEBUG] 2025-10-15 10:40:16.946 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 10:40:16.947 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 10:40:17.082 [main] create - Created new SQL alias : r1_0
[DEBUG] 2025-10-15 10:40:17.082 [main] create - Registration of TableGroup [StandardTableGroup(org.hungrybadger.entity.Review(8534954066800))] with identifierForTableGroup [org.hungrybadger.entity.Review] for NavigablePath [org.hungrybadger.entity.Review] 
[DEBUG] 2025-10-15 10:40:17.083 [main] BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2a2798a2
[DEBUG] 2025-10-15 10:40:17.083 [main] BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.hungrybadger.entity.Review(8534954066800).restaurantName) 
[DEBUG] 2025-10-15 10:40:17.084 [main] AST - DomainResult Graph:
 \-EntityResultImpl [org.hungrybadger.entity.Review(8534954066800)]
 |  +-BasicFetch [org.hungrybadger.entity.Review(8534954066800).cuisineType]
 |  +-BasicFetch [org.hungrybadger.entity.Review(8534954066800).personalNotes]
 |  +-BasicFetch [org.hungrybadger.entity.Review(8534954066800).personalRating]
 |  \-BasicFetch [org.hungrybadger.entity.Review(8534954066800).restaurantName]

[DEBUG] 2025-10-15 10:40:17.084 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.hungrybadger.entity.Review(8534954066800)) {
          primaryTableReference : review as r1_0
        }
      }
    }

[DEBUG] 2025-10-15 10:40:17.085 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
[DEBUG] 2025-10-15 10:40:17.085 [main] results - Initializer list:
	  org.hungrybadger.entity.Review(8534954066800) -> EntityResultInitializer(org.hungrybadger.entity.Review(8534954066800))@873447850 (SingleTableEntityPersister(org.hungrybadger.entity.Review))

[DEBUG] 2025-10-15 10:40:17.085 [main] SQL - select r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from review r1_0 where r1_0.restaurant_name=?
[DEBUG] 2025-10-15 10:40:17.088 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2025-10-15 10:40:17.088 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review(8534954066800)): 1
[DEBUG] 2025-10-15 10:40:17.088 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Review(8534954066800)#1] : 719068804
[DEBUG] 2025-10-15 10:40:17.088 [main] results - Extracted JDBC value [1] - [Japanese]
[DEBUG] 2025-10-15 10:40:17.088 [main] results - Extracted JDBC value [2] - [Good cheap rolls. Togo or sit down are both great]
[DEBUG] 2025-10-15 10:40:17.088 [main] results - Extracted JDBC value [3] - [5]
[DEBUG] 2025-10-15 10:40:17.088 [main] results - Extracted JDBC value [4] - [Sushi Express]
[DEBUG] 2025-10-15 10:40:17.088 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Review(8534954066800)#1
[DEBUG] 2025-10-15 10:40:17.088 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2a99fa07
[DEBUG] 2025-10-15 10:40:17.088 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 10:40:17.089 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 10:40:17.231 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2025-10-15 10:40:17.231 [main] results - Initializer list:
	  org.hungrybadger.entity.Review -> EntityResultInitializer(org.hungrybadger.entity.Review)@1469217737 (SingleTableEntityPersister(org.hungrybadger.entity.Review))

[DEBUG] 2025-10-15 10:40:17.231 [main] SQL - select r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from review r1_0 where r1_0.id=?
[DEBUG] 2025-10-15 10:40:17.233 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review): 1
[DEBUG] 2025-10-15 10:40:17.233 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Review#1] : 2006056784
[DEBUG] 2025-10-15 10:40:17.233 [main] results - Extracted JDBC value [1] - [Japanese]
[DEBUG] 2025-10-15 10:40:17.233 [main] results - Extracted JDBC value [2] - [Good cheap rolls. Togo or sit down are both great]
[DEBUG] 2025-10-15 10:40:17.233 [main] results - Extracted JDBC value [3] - [5]
[DEBUG] 2025-10-15 10:40:17.233 [main] results - Extracted JDBC value [4] - [Sushi Express]
[DEBUG] 2025-10-15 10:40:17.234 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Review#1
[DEBUG] 2025-10-15 10:40:17.234 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@46de118b
[DEBUG] 2025-10-15 10:40:17.234 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 10:40:17.346 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2025-10-15 10:40:17.346 [main] results - Initializer list:
	  org.hungrybadger.entity.Review -> EntityResultInitializer(org.hungrybadger.entity.Review)@743901415 (SingleTableEntityPersister(org.hungrybadger.entity.Review))

[DEBUG] 2025-10-15 10:40:17.346 [main] SQL - select r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from review r1_0 where r1_0.id=?
[DEBUG] 2025-10-15 10:40:17.348 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review): 1
[DEBUG] 2025-10-15 10:40:17.348 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Review#1] : 1810419227
[DEBUG] 2025-10-15 10:40:17.348 [main] results - Extracted JDBC value [1] - [Japanese]
[DEBUG] 2025-10-15 10:40:17.348 [main] results - Extracted JDBC value [2] - [Good cheap rolls. Togo or sit down are both great]
[DEBUG] 2025-10-15 10:40:17.348 [main] results - Extracted JDBC value [3] - [5]
[DEBUG] 2025-10-15 10:40:17.348 [main] results - Extracted JDBC value [4] - [Sushi Express]
[DEBUG] 2025-10-15 10:40:17.348 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Review#1
[DEBUG] 2025-10-15 10:40:17.349 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@e3c36d
[DEBUG] 2025-10-15 10:40:17.349 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 10:40:17.349 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2025-10-15 10:40:17.349 [main] TransactionImpl - begin
[DEBUG] 2025-10-15 10:40:17.353 [main] create - Created new SQL alias : r1_0
[DEBUG] 2025-10-15 10:40:17.353 [main] create - Registration of TableGroup [StandardTableGroup(org.hungrybadger.entity.Review)] with identifierForTableGroup [org.hungrybadger.entity.Review] for NavigablePath [org.hungrybadger.entity.Review] 
[DEBUG] 2025-10-15 10:40:17.353 [main] AST - DomainResult Graph:
 \-EntityResultImpl [org.hungrybadger.entity.Review]
 |  +-BasicFetch [org.hungrybadger.entity.Review.cuisineType]
 |  +-BasicFetch [org.hungrybadger.entity.Review.personalNotes]
 |  +-BasicFetch [org.hungrybadger.entity.Review.personalRating]
 |  \-BasicFetch [org.hungrybadger.entity.Review.restaurantName]

[DEBUG] 2025-10-15 10:40:17.353 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.hungrybadger.entity.Review) {
          primaryTableReference : review as r1_0
        }
      }
    }

[DEBUG] 2025-10-15 10:40:17.353 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2025-10-15 10:40:17.353 [main] results - Initializer list:
	  org.hungrybadger.entity.Review -> EntityResultInitializer(org.hungrybadger.entity.Review)@341829803 (SingleTableEntityPersister(org.hungrybadger.entity.Review))

[DEBUG] 2025-10-15 10:40:17.354 [main] SQL - select r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from review r1_0 where r1_0.id=?
[DEBUG] 2025-10-15 10:40:17.354 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review): 1
[DEBUG] 2025-10-15 10:40:17.355 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Review#1] : 1911013695
[DEBUG] 2025-10-15 10:40:17.355 [main] results - Extracted JDBC value [1] - [Japanese]
[DEBUG] 2025-10-15 10:40:17.355 [main] results - Extracted JDBC value [2] - [Good cheap rolls. Togo or sit down are both great]
[DEBUG] 2025-10-15 10:40:17.355 [main] results - Extracted JDBC value [3] - [5]
[DEBUG] 2025-10-15 10:40:17.355 [main] results - Extracted JDBC value [4] - [Sushi Express]
[DEBUG] 2025-10-15 10:40:17.355 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Review#1
[DEBUG] 2025-10-15 10:40:17.355 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2295566b
[DEBUG] 2025-10-15 10:40:17.355 [main] TransactionImpl - committing
[DEBUG] 2025-10-15 10:40:17.355 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2025-10-15 10:40:17.355 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2025-10-15 10:40:17.357 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
[DEBUG] 2025-10-15 10:40:17.357 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2025-10-15 10:40:17.357 [main] EntityPrinter - Listing entities:
[DEBUG] 2025-10-15 10:40:17.357 [main] EntityPrinter - org.hungrybadger.entity.Review{personalNotes=Good cheap rolls. Togo or sit down are both great, personalRating=5, restaurantName=Conrads Wraps, id=1, cuisineType=Japanese}
[DEBUG] 2025-10-15 10:40:17.361 [main] SQL - update review set cuisine_type=?,personal_notes=?,personal_rating=?,restaurant_name=? where id=?
[DEBUG] 2025-10-15 10:40:17.365 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 10:40:17.365 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 10:40:17.365 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2025-10-15 10:40:17.366 [main] results - Initializer list:
	  org.hungrybadger.entity.Review -> EntityResultInitializer(org.hungrybadger.entity.Review)@595239111 (SingleTableEntityPersister(org.hungrybadger.entity.Review))

[DEBUG] 2025-10-15 10:40:17.366 [main] SQL - select r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from review r1_0 where r1_0.id=?
[DEBUG] 2025-10-15 10:40:17.367 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review): 1
[DEBUG] 2025-10-15 10:40:17.367 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Review#1] : 1145680499
[DEBUG] 2025-10-15 10:40:17.367 [main] results - Extracted JDBC value [1] - [Japanese]
[DEBUG] 2025-10-15 10:40:17.367 [main] results - Extracted JDBC value [2] - [Good cheap rolls. Togo or sit down are both great]
[DEBUG] 2025-10-15 10:40:17.367 [main] results - Extracted JDBC value [3] - [5]
[DEBUG] 2025-10-15 10:40:17.367 [main] results - Extracted JDBC value [4] - [Conrads Wraps]
[DEBUG] 2025-10-15 10:40:17.367 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Review#1
[DEBUG] 2025-10-15 10:40:17.367 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1fa18f87
[DEBUG] 2025-10-15 10:40:17.367 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 10:40:17.477 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2025-10-15 10:40:17.477 [main] TransactionImpl - begin
[DEBUG] 2025-10-15 10:40:17.481 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2025-10-15 10:40:17.483 [main] SQL - insert into review (cuisine_type,personal_notes,personal_rating,restaurant_name) values (?,?,?,?)
[DEBUG] 2025-10-15 10:40:17.489 [main] IdentifierGeneratorHelper - Natively generated identity (org.hungrybadger.entity.Review) : 4
[DEBUG] 2025-10-15 10:40:17.490 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2025-10-15 10:40:17.491 [main] ResourceRegistryStandardImpl - Exception clearing maxRows/queryTimeout [You can't operate on a closed Statement!!!]
[DEBUG] 2025-10-15 10:40:17.493 [main] TransactionImpl - committing
[DEBUG] 2025-10-15 10:40:17.493 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2025-10-15 10:40:17.493 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2025-10-15 10:40:17.493 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2025-10-15 10:40:17.493 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2025-10-15 10:40:17.493 [main] EntityPrinter - Listing entities:
[DEBUG] 2025-10-15 10:40:17.493 [main] EntityPrinter - org.hungrybadger.entity.Review{personalNotes=Worked here for 2 years, gluten free!, personalRating=4, restaurantName=Madison Chocolate Company, id=4, cuisineType=French}
[DEBUG] 2025-10-15 10:40:17.495 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 10:40:17.495 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 10:40:17.496 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2025-10-15 10:40:17.497 [main] results - Initializer list:
	  org.hungrybadger.entity.Review -> EntityResultInitializer(org.hungrybadger.entity.Review)@1073819729 (SingleTableEntityPersister(org.hungrybadger.entity.Review))

[DEBUG] 2025-10-15 10:40:17.497 [main] SQL - select r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from review r1_0 where r1_0.id=?
[DEBUG] 2025-10-15 10:40:17.498 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review): 4
[DEBUG] 2025-10-15 10:40:17.498 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Review#4] : 1269528782
[DEBUG] 2025-10-15 10:40:17.498 [main] results - Extracted JDBC value [1] - [French]
[DEBUG] 2025-10-15 10:40:17.498 [main] results - Extracted JDBC value [2] - [Worked here for 2 years, gluten free!]
[DEBUG] 2025-10-15 10:40:17.498 [main] results - Extracted JDBC value [3] - [4]
[DEBUG] 2025-10-15 10:40:17.498 [main] results - Extracted JDBC value [4] - [Madison Chocolate Company]
[DEBUG] 2025-10-15 10:40:17.498 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Review#4
[DEBUG] 2025-10-15 10:40:17.498 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@42ffbab6
[DEBUG] 2025-10-15 10:40:17.498 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 11:46:21.444 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2025-10-15 11:46:21.455 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2025-10-15 11:46:21.497 [main] Version - HHH000412: Hibernate ORM core version 6.4.3.Final
[DEBUG] 2025-10-15 11:46:21.499 [main] Environment - HHH000206: 'hibernate.properties' not found
[DEBUG] 2025-10-15 11:46:21.566 [main] LocalXmlResourceResolver - Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
[DEBUG] 2025-10-15 11:46:21.573 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2025-10-15 11:46:21.817 [main] factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2025-10-15 11:46:21.822 [main] factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2025-10-15 11:46:21.823 [main] factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2025-10-15 11:46:21.824 [main] factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2025-10-15 11:46:21.824 [main] factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2025-10-15 11:46:21.824 [main] factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2025-10-15 11:46:21.825 [main] factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2025-10-15 11:46:21.826 [main] factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2025-10-15 11:46:21.827 [main] factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2025-10-15 11:46:21.828 [main] factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2025-10-15 11:46:21.828 [main] factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2025-10-15 11:46:21.828 [main] factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2025-10-15 11:46:21.829 [main] factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2025-10-15 11:46:21.839 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[INFO ] 2025-10-15 11:46:21.840 [main] RegionFactoryInitiator - HHH000026: Second-level cache disabled
[DEBUG] 2025-10-15 11:46:21.965 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@19f7222e
[DEBUG] 2025-10-15 11:46:21.965 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@19f7222e
[DEBUG] 2025-10-15 11:46:21.965 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@19f7222e
[DEBUG] 2025-10-15 11:46:21.965 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3f725306
[DEBUG] 2025-10-15 11:46:21.965 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3f725306
[DEBUG] 2025-10-15 11:46:21.966 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3c69362a
[DEBUG] 2025-10-15 11:46:21.966 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3c69362a
[DEBUG] 2025-10-15 11:46:21.966 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@2412a42b
[DEBUG] 2025-10-15 11:46:21.966 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@2412a42b
[DEBUG] 2025-10-15 11:46:21.966 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@45404d5
[DEBUG] 2025-10-15 11:46:21.966 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@45404d5
[DEBUG] 2025-10-15 11:46:21.966 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@45404d5
[DEBUG] 2025-10-15 11:46:21.966 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@29138d3a
[DEBUG] 2025-10-15 11:46:21.966 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@29138d3a
[DEBUG] 2025-10-15 11:46:21.966 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@29138d3a
[DEBUG] 2025-10-15 11:46:21.966 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@5cbe2654
[DEBUG] 2025-10-15 11:46:21.966 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@5cbe2654
[DEBUG] 2025-10-15 11:46:21.966 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@6dbcf214
[DEBUG] 2025-10-15 11:46:21.967 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@496a31da
[DEBUG] 2025-10-15 11:46:21.967 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@496a31da
[DEBUG] 2025-10-15 11:46:21.967 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@7c251f90
[DEBUG] 2025-10-15 11:46:21.967 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@51841ac6
[DEBUG] 2025-10-15 11:46:21.967 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@5ba26eb0
[DEBUG] 2025-10-15 11:46:21.967 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@5ba26eb0
[DEBUG] 2025-10-15 11:46:21.967 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@5ba26eb0
[DEBUG] 2025-10-15 11:46:21.967 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@435e60ff
[DEBUG] 2025-10-15 11:46:21.967 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@435e60ff
[DEBUG] 2025-10-15 11:46:21.967 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@435e60ff
[DEBUG] 2025-10-15 11:46:21.967 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@17d32e9b
[DEBUG] 2025-10-15 11:46:21.967 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@17d32e9b
[DEBUG] 2025-10-15 11:46:21.967 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@17d32e9b
[DEBUG] 2025-10-15 11:46:21.968 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@66f0548d
[DEBUG] 2025-10-15 11:46:21.968 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@66f0548d
[DEBUG] 2025-10-15 11:46:21.968 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@66f0548d
[DEBUG] 2025-10-15 11:46:21.968 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@2e6f610d
[DEBUG] 2025-10-15 11:46:21.968 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@2e6f610d
[DEBUG] 2025-10-15 11:46:21.968 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@2e6f610d
[DEBUG] 2025-10-15 11:46:21.968 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@1e86a5a7
[DEBUG] 2025-10-15 11:46:21.968 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@1e86a5a7
[DEBUG] 2025-10-15 11:46:21.968 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@10afe71a
[DEBUG] 2025-10-15 11:46:21.968 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@10afe71a
[DEBUG] 2025-10-15 11:46:21.968 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@741f8dbe
[DEBUG] 2025-10-15 11:46:21.968 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@741f8dbe
[DEBUG] 2025-10-15 11:46:21.969 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@741f8dbe
[DEBUG] 2025-10-15 11:46:21.969 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@212dfd39
[DEBUG] 2025-10-15 11:46:21.969 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@a2ddf26
[DEBUG] 2025-10-15 11:46:21.969 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@a2ddf26
[DEBUG] 2025-10-15 11:46:21.969 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@65d57e4e
[DEBUG] 2025-10-15 11:46:21.969 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@6daf7d37
[DEBUG] 2025-10-15 11:46:21.969 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@6daf7d37
[DEBUG] 2025-10-15 11:46:21.969 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@6daf7d37
[DEBUG] 2025-10-15 11:46:21.969 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@23a5818e
[DEBUG] 2025-10-15 11:46:21.969 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@4715ae33
[DEBUG] 2025-10-15 11:46:21.969 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@9fc9f91
[DEBUG] 2025-10-15 11:46:21.969 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@1fac1d5c
[DEBUG] 2025-10-15 11:46:21.969 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@1fac1d5c
[DEBUG] 2025-10-15 11:46:21.969 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@108a46d6
[DEBUG] 2025-10-15 11:46:21.970 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@108a46d6
[DEBUG] 2025-10-15 11:46:21.970 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@7a8406c2
[DEBUG] 2025-10-15 11:46:21.970 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@17690e14
[DEBUG] 2025-10-15 11:46:21.970 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6850b758
[DEBUG] 2025-10-15 11:46:21.970 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@2a2ef072
[DEBUG] 2025-10-15 11:46:21.970 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@704641e3
[DEBUG] 2025-10-15 11:46:21.970 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@2f00f851
[DEBUG] 2025-10-15 11:46:21.970 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@4207609e
[DEBUG] 2025-10-15 11:46:21.970 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@4207609e
[DEBUG] 2025-10-15 11:46:21.970 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@1f77b5cc
[DEBUG] 2025-10-15 11:46:21.970 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@1f77b5cc
[DEBUG] 2025-10-15 11:46:21.970 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@5d7ca698
[DEBUG] 2025-10-15 11:46:21.970 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@5d7ca698
[DEBUG] 2025-10-15 11:46:21.971 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@75961f16
[DEBUG] 2025-10-15 11:46:21.971 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@75961f16
[DEBUG] 2025-10-15 11:46:21.971 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@c6c82aa
[DEBUG] 2025-10-15 11:46:21.971 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@c6c82aa
[DEBUG] 2025-10-15 11:46:21.971 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2e179f3e
[DEBUG] 2025-10-15 11:46:21.971 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@16e7b402
[DEBUG] 2025-10-15 11:46:21.971 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@534c6767
[DEBUG] 2025-10-15 11:46:21.971 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@534c6767
[DEBUG] 2025-10-15 11:46:21.971 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@3bddc676
[DEBUG] 2025-10-15 11:46:21.971 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@29a1505c
[DEBUG] 2025-10-15 11:46:21.971 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@24db6ce
[DEBUG] 2025-10-15 11:46:21.971 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@320a8ebf
[DEBUG] 2025-10-15 11:46:21.971 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@320a8ebf
[DEBUG] 2025-10-15 11:46:21.971 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@67b100fe
[DEBUG] 2025-10-15 11:46:21.972 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@44b18fe4
[DEBUG] 2025-10-15 11:46:21.972 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@2ba5aa7a
[DEBUG] 2025-10-15 11:46:21.972 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@2ba5aa7a
[DEBUG] 2025-10-15 11:46:21.972 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@4d3ca6c7
[DEBUG] 2025-10-15 11:46:21.972 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@4d3ca6c7
[DEBUG] 2025-10-15 11:46:21.972 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@22e5f96e
[DEBUG] 2025-10-15 11:46:21.972 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@22e5f96e
[DEBUG] 2025-10-15 11:46:21.972 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@22e5f96e
[DEBUG] 2025-10-15 11:46:21.972 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@6a638c79
[DEBUG] 2025-10-15 11:46:21.972 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@6a638c79
[DEBUG] 2025-10-15 11:46:21.973 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@6a638c79
[DEBUG] 2025-10-15 11:46:21.973 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@6c931d35
[DEBUG] 2025-10-15 11:46:21.973 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@44b194fe
[DEBUG] 2025-10-15 11:46:21.973 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@49122b8f
[DEBUG] 2025-10-15 11:46:21.973 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@49122b8f
[DEBUG] 2025-10-15 11:46:21.973 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@3fe46690
[DEBUG] 2025-10-15 11:46:21.973 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@3fe46690
[DEBUG] 2025-10-15 11:46:21.973 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@3fe46690
[DEBUG] 2025-10-15 11:46:21.973 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4beabeec
[DEBUG] 2025-10-15 11:46:21.973 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@3b4d50b
[DEBUG] 2025-10-15 11:46:21.973 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@5b22d8a1
[DEBUG] 2025-10-15 11:46:21.973 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@5b22d8a1
[DEBUG] 2025-10-15 11:46:21.973 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@476ee5b3
[DEBUG] 2025-10-15 11:46:21.974 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@476ee5b3
[DEBUG] 2025-10-15 11:46:21.974 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@476ee5b3
[DEBUG] 2025-10-15 11:46:21.974 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@59ed3e6c
[DEBUG] 2025-10-15 11:46:21.974 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@59ed3e6c
[DEBUG] 2025-10-15 11:46:21.974 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@7cd4a4d7
[DEBUG] 2025-10-15 11:46:21.974 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@7cd4a4d7
[DEBUG] 2025-10-15 11:46:21.974 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@317e9c3c
[DEBUG] 2025-10-15 11:46:21.974 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@317e9c3c
[DEBUG] 2025-10-15 11:46:21.974 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@18da4dd
[DEBUG] 2025-10-15 11:46:21.974 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@18da4dd
[DEBUG] 2025-10-15 11:46:21.974 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@31a3f4de
[DEBUG] 2025-10-15 11:46:21.974 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@31a3f4de
[DEBUG] 2025-10-15 11:46:21.974 [main] BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@68880c21
[DEBUG] 2025-10-15 11:46:21.974 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@2dd2e270
[DEBUG] 2025-10-15 11:46:21.981 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@35267fd4
[DEBUG] 2025-10-15 11:46:21.981 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@35267fd4
[DEBUG] 2025-10-15 11:46:21.982 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@4e08acf9
[DEBUG] 2025-10-15 11:46:21.983 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@42ea287
[DEBUG] 2025-10-15 11:46:21.983 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@78cd163b
[DEBUG] 2025-10-15 11:46:21.983 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@1f0b3cfe
[DEBUG] 2025-10-15 11:46:21.983 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@14ef2482
[DEBUG] 2025-10-15 11:46:21.983 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@65a48602
[DEBUG] 2025-10-15 11:46:21.983 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@75483843
[DEBUG] 2025-10-15 11:46:21.983 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@336206d8
[DEBUG] 2025-10-15 11:46:21.983 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@5ec4ff02
[INFO ] 2025-10-15 11:46:22.021 [main] c3p0 - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3307/hungryBadger_test
[INFO ] 2025-10-15 11:46:22.021 [main] c3p0 - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2025-10-15 11:46:22.021 [main] c3p0 - HHH10001003: Autocommit mode: false
[INFO ] 2025-10-15 11:46:22.145 [main] c3p0 - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2025-10-15 11:46:22.252 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 9.4.0
      major : 9
      minor : 4
[DEBUG] 2025-10-15 11:46:22.252 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2025-10-15 11:46:22.252 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[DEBUG] 2025-10-15 11:46:22.320 [main] dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 9.4
[DEBUG] 2025-10-15 11:46:22.331 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2025-10-15 11:46:22.331 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2025-10-15 11:46:22.350 [main] DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@17410c07) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6ee99964)
[DEBUG] 2025-10-15 11:46:22.350 [main] DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@257ef9ed) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@59c70ceb)
[DEBUG] 2025-10-15 11:46:22.350 [main] DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@46f902e0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@64f981e2)
[DEBUG] 2025-10-15 11:46:22.350 [main] DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@361abd01) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@575b5f7d)
[DEBUG] 2025-10-15 11:46:22.350 [main] DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@59bbb974) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7165d530)
[DEBUG] 2025-10-15 11:46:22.350 [main] DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@12f49ca8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1fd9893c)
[DEBUG] 2025-10-15 11:46:22.350 [main] DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1b2df3aa) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@44be69aa)
[DEBUG] 2025-10-15 11:46:22.351 [main] DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7219ac49) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@21da4b5f)
[DEBUG] 2025-10-15 11:46:22.351 [main] DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@551e4c6d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@625a9c5d)
[DEBUG] 2025-10-15 11:46:22.352 [main] JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2025-10-15 11:46:22.353 [main] JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2025-10-15 11:46:22.353 [main] JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2025-10-15 11:46:22.356 [main] JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2025-10-15 11:46:22.356 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2025-10-15 11:46:22.361 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@57c00115
[DEBUG] 2025-10-15 11:46:22.361 [main] BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@4e08acf9`
[DEBUG] 2025-10-15 11:46:22.368 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
[DEBUG] 2025-10-15 11:46:22.368 [main] BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2025-10-15 11:46:22.369 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2025-10-15 11:46:22.373 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2025-10-15 11:46:22.373 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2025-10-15 11:46:22.373 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2025-10-15 11:46:22.373 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2025-10-15 11:46:22.373 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2025-10-15 11:46:22.373 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2025-10-15 11:46:22.374 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2025-10-15 11:46:22.374 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2025-10-15 11:46:22.374 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2025-10-15 11:46:22.376 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7377781e] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@31db34da]
[DEBUG] 2025-10-15 11:46:22.429 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2025-10-15 11:46:22.460 [main] EntityBinder - Binding entity from annotated class: org.hungrybadger.entity.Review
[DEBUG] 2025-10-15 11:46:22.471 [main] EntityBinder - Import with entity name Review
[DEBUG] 2025-10-15 11:46:22.479 [main] EntityBinder - Bind entity org.hungrybadger.entity.Review on table review
[DEBUG] 2025-10-15 11:46:22.490 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2025-10-15 11:46:22.515 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2025-10-15 11:46:22.516 [main] ClassLoaderAccessImpl - Not known whether passed class name [org.hungrybadger.entity.Review] is safe
[DEBUG] 2025-10-15 11:46:22.516 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.hungrybadger.entity.Review
[DEBUG] 2025-10-15 11:46:22.519 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2025-10-15 11:46:22.523 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.hungrybadger.entity.Review:id]
[DEBUG] 2025-10-15 11:46:22.528 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2025-10-15 11:46:22.532 [main] BasicValue - Skipping column re-registration: review.id
[DEBUG] 2025-10-15 11:46:22.533 [main] PropertyBinder - Building property id
[DEBUG] 2025-10-15 11:46:22.538 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2025-10-15 11:46:22.543 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='cuisine_type')
[DEBUG] 2025-10-15 11:46:22.543 [main] PropertyBinder - MetadataSourceProcessor property cuisineType with lazy=false
[DEBUG] 2025-10-15 11:46:22.543 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.hungrybadger.entity.Review:cuisineType]
[DEBUG] 2025-10-15 11:46:22.543 [main] BasicValueBinder - building BasicValue for cuisineType
[DEBUG] 2025-10-15 11:46:22.543 [main] BasicValue - Skipping column re-registration: review.cuisine_type
[DEBUG] 2025-10-15 11:46:22.543 [main] PropertyBinder - Building property cuisineType
[DEBUG] 2025-10-15 11:46:22.544 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='personal_notes')
[DEBUG] 2025-10-15 11:46:22.544 [main] PropertyBinder - MetadataSourceProcessor property personalNotes with lazy=false
[DEBUG] 2025-10-15 11:46:22.544 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.hungrybadger.entity.Review:personalNotes]
[DEBUG] 2025-10-15 11:46:22.544 [main] BasicValueBinder - building BasicValue for personalNotes
[DEBUG] 2025-10-15 11:46:22.544 [main] BasicValue - Skipping column re-registration: review.personal_notes
[DEBUG] 2025-10-15 11:46:22.544 [main] PropertyBinder - Building property personalNotes
[DEBUG] 2025-10-15 11:46:22.545 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='personal_rating')
[DEBUG] 2025-10-15 11:46:22.545 [main] PropertyBinder - MetadataSourceProcessor property personalRating with lazy=false
[DEBUG] 2025-10-15 11:46:22.545 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.hungrybadger.entity.Review:personalRating]
[DEBUG] 2025-10-15 11:46:22.545 [main] BasicValueBinder - building BasicValue for personalRating
[DEBUG] 2025-10-15 11:46:22.545 [main] BasicValue - Skipping column re-registration: review.personal_rating
[DEBUG] 2025-10-15 11:46:22.545 [main] PropertyBinder - Building property personalRating
[DEBUG] 2025-10-15 11:46:22.547 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2025-10-15 11:46:22.547 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2025-10-15 11:46:22.561 [main] AnnotatedColumn - Binding column: IndexColumn(column='photos_ORDER')
[DEBUG] 2025-10-15 11:46:22.564 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2025-10-15 11:46:22.565 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='photos_KEY')
[DEBUG] 2025-10-15 11:46:22.565 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='photos_KEY')
[DEBUG] 2025-10-15 11:46:22.567 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2025-10-15 11:46:22.567 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2025-10-15 11:46:22.570 [main] CollectionBinder - Collection role: org.hungrybadger.entity.Review.photos
[DEBUG] 2025-10-15 11:46:22.572 [main] PropertyBinder - Building property photos
[DEBUG] 2025-10-15 11:46:22.572 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='restaurant_name')
[DEBUG] 2025-10-15 11:46:22.572 [main] PropertyBinder - MetadataSourceProcessor property restaurantName with lazy=false
[DEBUG] 2025-10-15 11:46:22.572 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.hungrybadger.entity.Review:restaurantName]
[DEBUG] 2025-10-15 11:46:22.572 [main] BasicValueBinder - building BasicValue for restaurantName
[DEBUG] 2025-10-15 11:46:22.573 [main] BasicValue - Skipping column re-registration: review.restaurant_name
[DEBUG] 2025-10-15 11:46:22.573 [main] PropertyBinder - Building property restaurantName
[DEBUG] 2025-10-15 11:46:22.573 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: org.hungrybadger.entity
[DEBUG] 2025-10-15 11:46:22.579 [main] EntityBinder - Binding entity from annotated class: org.hungrybadger.entity.Photo
[DEBUG] 2025-10-15 11:46:22.580 [main] EntityBinder - Import with entity name Photo
[DEBUG] 2025-10-15 11:46:22.580 [main] EntityBinder - Bind entity org.hungrybadger.entity.Photo on table photos
[DEBUG] 2025-10-15 11:46:22.580 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2025-10-15 11:46:22.584 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2025-10-15 11:46:22.584 [main] ClassLoaderAccessImpl - Not known whether passed class name [org.hungrybadger.entity.Photo] is safe
[DEBUG] 2025-10-15 11:46:22.584 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.hungrybadger.entity.Photo
[DEBUG] 2025-10-15 11:46:22.584 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2025-10-15 11:46:22.584 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.hungrybadger.entity.Photo:id]
[DEBUG] 2025-10-15 11:46:22.584 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2025-10-15 11:46:22.584 [main] BasicValue - Skipping column re-registration: photos.id
[DEBUG] 2025-10-15 11:46:22.585 [main] PropertyBinder - Building property id
[DEBUG] 2025-10-15 11:46:22.585 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2025-10-15 11:46:22.585 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='image_path')
[DEBUG] 2025-10-15 11:46:22.585 [main] PropertyBinder - MetadataSourceProcessor property imagePath with lazy=false
[DEBUG] 2025-10-15 11:46:22.585 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.hungrybadger.entity.Photo:imagePath]
[DEBUG] 2025-10-15 11:46:22.585 [main] BasicValueBinder - building BasicValue for imagePath
[DEBUG] 2025-10-15 11:46:22.585 [main] BasicValue - Skipping column re-registration: photos.image_path
[DEBUG] 2025-10-15 11:46:22.585 [main] PropertyBinder - Building property imagePath
[DEBUG] 2025-10-15 11:46:22.586 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='review_id')
[DEBUG] 2025-10-15 11:46:22.586 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2025-10-15 11:46:22.589 [main] PropertyBinder - Building property review
[DEBUG] 2025-10-15 11:46:22.590 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: org.hungrybadger.entity
[DEBUG] 2025-10-15 11:46:22.591 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2025-10-15 11:46:22.591 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for cuisineType
[DEBUG] 2025-10-15 11:46:22.593 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for personalNotes
[DEBUG] 2025-10-15 11:46:22.593 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for personalRating
[DEBUG] 2025-10-15 11:46:22.593 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for restaurantName
[DEBUG] 2025-10-15 11:46:22.593 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2025-10-15 11:46:22.593 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for imagePath
[DEBUG] 2025-10-15 11:46:22.599 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [review]
[DEBUG] 2025-10-15 11:46:22.599 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [photos]
[DEBUG] 2025-10-15 11:46:22.599 [main] CollectionSecondPass - Second pass for collection: org.hungrybadger.entity.Review.photos
[DEBUG] 2025-10-15 11:46:22.601 [main] CollectionBinder - Binding a OneToMany: org.hungrybadger.entity.Review.photos through a foreign key
[DEBUG] 2025-10-15 11:46:22.603 [main] CollectionBinder - Mapping collection: org.hungrybadger.entity.Review.photos -> photos
[DEBUG] 2025-10-15 11:46:22.604 [main] TableBinder - Retrieving property org.hungrybadger.entity.Photo.review
[DEBUG] 2025-10-15 11:46:22.605 [main] CollectionSecondPass - Mapped collection key: review_id, one-to-many: org.hungrybadger.entity.Photo
[DEBUG] 2025-10-15 11:46:22.605 [main] InFlightMetadataCollectorImpl - Resolving reference to class: org.hungrybadger.entity.Review
[DEBUG] 2025-10-15 11:46:22.619 [main] InFlightMetadataCollectorImpl - Resolving reference to class: org.hungrybadger.entity.Review
[DEBUG] 2025-10-15 11:46:22.830 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2025-10-15 11:46:22.887 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2025-10-15 11:46:22.887 [main] SessionFactoryImpl - Instantiating SessionFactory with settings: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=11, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, java.class.path=C:\Program Files\JetBrains\IntelliJ IDEA 2025.2.1\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2025.2.1\plugins\junit\lib\junit5-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2025.2.1\plugins\junit\lib\junit-rt.jar;C:\Users\mamcc\IdeaProjects\PersonalFoodReviewer\target\test-classes;C:\Users\mamcc\IdeaProjects\PersonalFoodReviewer\target\classes;C:\Users\mamcc\.m2\repository\org\hibernate\orm\hibernate-core\6.4.3.Final\hibernate-core-6.4.3.Final.jar;C:\Users\mamcc\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\mamcc\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\mamcc\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\mamcc\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\mamcc\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\mamcc\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\mamcc\.m2\repository\net\bytebuddy\byte-buddy\1.14.7\byte-buddy-1.14.7.jar;C:\Users\mamcc\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\mamcc\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\mamcc\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\mamcc\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\mamcc\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\mamcc\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\mamcc\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\mamcc\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\mamcc\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\mamcc\.m2\repository\org\hibernate\orm\hibernate-c3p0\6.4.3.Final\hibernate-c3p0-6.4.3.Final.jar;C:\Users\mamcc\.m2\repository\com\mchange\c3p0\0.9.5.5\c3p0-0.9.5.5.jar;C:\Users\mamcc\.m2\repository\com\mchange\mchange-commons-java\0.2.19\mchange-commons-java-0.2.19.jar;C:\Users\mamcc\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\mamcc\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\mamcc\.m2\repository\javax\javaee-web-api\7.0\javaee-web-api-7.0.jar;C:\Users\mamcc\.m2\repository\mysql\mysql-connector-java\8.0.16\mysql-connector-java-8.0.16.jar;C:\Users\mamcc\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\mamcc\.m2\repository\org\apache\logging\log4j\log4j-api\2.17.1\log4j-api-2.17.1.jar;C:\Users\mamcc\.m2\repository\org\apache\logging\log4j\log4j-core\2.17.1\log4j-core-2.17.1.jar;C:\Users\mamcc\.m2\repository\jstl\jstl\1.2\jstl-1.2.jar;C:\Users\mamcc\.m2\repository\org\junit\platform\junit-platform-runner\1.0.0\junit-platform-runner-1.0.0.jar;C:\Users\mamcc\.m2\repository\org\apiguardian\apiguardian-api\1.0.0\apiguardian-api-1.0.0.jar;C:\Users\mamcc\.m2\repository\org\junit\platform\junit-platform-launcher\1.0.0\junit-platform-launcher-1.0.0.jar;C:\Users\mamcc\.m2\repository\org\junit\platform\junit-platform-suite-api\1.0.0\junit-platform-suite-api-1.0.0.jar;C:\Users\mamcc\.m2\repository\org\junit\platform\junit-platform-commons\1.0.0\junit-platform-commons-1.0.0.jar;C:\Users\mamcc\.m2\repository\org\junit\vintage\junit-vintage-engine\4.12.0\junit-vintage-engine-4.12.0.jar;C:\Users\mamcc\.m2\repository\org\junit\platform\junit-platform-engine\1.0.0\junit-platform-engine-1.0.0.jar;C:\Users\mamcc\.m2\repository\org\opentest4j\opentest4j\1.0.0\opentest4j-1.0.0.jar;C:\Users\mamcc\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.0.0\junit-jupiter-engine-5.0.0.jar;C:\Users\mamcc\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.0.0\junit-jupiter-api-5.0.0.jar, kotlinx.coroutines.debug.enable.mutable.state.flows.stack.trace=true, java.vm.vendor=Eclipse Adoptium, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=https://adoptium.net/, user.timezone=America/Chicago, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Eclipse Adoptium\jdk-11.0.28.6-hotspot\bin, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 org.hungrybadger.persistence.PhotoDaoTest, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\mamcc, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2025-07-15, java.home=C:\Program Files\Eclipse Adoptium\jdk-11.0.28.6-hotspot, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, intellij.debug.agent=true, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, user.script=, connection.password=Marthacodes, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=11.0.28+6, user.name=Test, path.separator=;, kotlinx.coroutines.debug.enable.creation.stack.trace=false, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3307/hungryBadger_test, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, java.vendor.version=Temurin-11.0.28+6, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=C:\Users\mamcc\AppData\Local\Temp\, java.version=11.0.28, jboss.modules.system.pkgs=com.intellij.rt, user.dir=C:\Users\mamcc\IdeaProjects\PersonalFoodReviewer, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@75882261, kotlinx.coroutines.debug.enable.flows.stack.trace=true, java.library.path=C:\Program Files\Eclipse Adoptium\jdk-11.0.28.6-hotspot\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Microsoft\jdk-21.0.2.13-hotspot\bin;C:\Program Files\Eclipse Adoptium\jdk-11.0.28.6-hotspot\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\dotnet\;C:\Program Files\Amazon\AWSCLIV2\;C:\Program Files\nodejs\;C:\Program Files\MySQL\MySQL Server 9.0\bin;C:\Program Files\NVIDIA Corporation\NVIDIA app\NvDLISR;C:\Program Files\Git\cmd;C:\Users\mamcc\AppData\Local\Microsoft\WindowsApps;;C:\Users\mamcc\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\mamcc\AppData\Roaming\npm;., java.vendor=Eclipse Adoptium, java.vm.info=mixed mode, java.vm.version=11.0.28+6, java.specification.maintenance.version=3, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3307/hungryBadger_test, debugger.agent.enable.coroutines=true, java.class.version=55.0}
[DEBUG] 2025-10-15 11:46:22.893 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2025-10-15 11:46:22.900 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2025-10-15 11:46:22.951 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2025-10-15 11:46:22.951 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2025-10-15 11:46:22.952 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2025-10-15 11:46:22.953 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2025-10-15 11:46:22.954 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@2ee4706d] under count; prior registration was null
[DEBUG] 2025-10-15 11:46:22.955 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@111cba40] under every; prior registration was null
[DEBUG] 2025-10-15 11:46:22.955 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@48e41b5d] under any; prior registration was null
[DEBUG] 2025-10-15 11:46:22.955 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2025-10-15 11:46:22.956 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2025-10-15 11:46:22.956 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2025-10-15 11:46:22.956 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2025-10-15 11:46:22.956 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2025-10-15 11:46:22.956 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2025-10-15 11:46:22.956 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2025-10-15 11:46:22.956 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2025-10-15 11:46:22.956 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2025-10-15 11:46:22.956 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2025-10-15 11:46:22.956 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2025-10-15 11:46:22.957 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2025-10-15 11:46:22.957 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2025-10-15 11:46:22.957 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2025-10-15 11:46:22.957 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2025-10-15 11:46:22.957 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2025-10-15 11:46:22.957 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2025-10-15 11:46:22.959 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6fbf5db2] under sinh; prior registration was null
[DEBUG] 2025-10-15 11:46:22.959 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@509a6095] under cosh; prior registration was null
[DEBUG] 2025-10-15 11:46:22.959 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@57cabdc3] under tanh; prior registration was null
[DEBUG] 2025-10-15 11:46:22.959 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@75bd28d] under pi; prior registration was null
[DEBUG] 2025-10-15 11:46:22.959 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@129c4d19] under log; prior registration was null
[DEBUG] 2025-10-15 11:46:22.960 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2025-10-15 11:46:22.960 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2025-10-15 11:46:22.960 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2025-10-15 11:46:22.960 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2025-10-15 11:46:22.960 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2025-10-15 11:46:22.960 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2025-10-15 11:46:22.960 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2025-10-15 11:46:22.960 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2025-10-15 11:46:22.960 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2025-10-15 11:46:22.960 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2025-10-15 11:46:22.960 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2025-10-15 11:46:22.961 [main] SqmFunctionRegistry - Registering alternate key : length -> character_length
[DEBUG] 2025-10-15 11:46:22.961 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@279126f5] under position; prior registration was null
[DEBUG] 2025-10-15 11:46:22.963 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@33eb0d4] under overlay; prior registration was null
[DEBUG] 2025-10-15 11:46:22.964 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@5ca4dce5] under trim; prior registration was null
[DEBUG] 2025-10-15 11:46:22.965 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@5fb54740] under cast; prior registration was null
[DEBUG] 2025-10-15 11:46:22.965 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@325162e9] under collate; prior registration was null
[DEBUG] 2025-10-15 11:46:22.966 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@49c1e294] under extract; prior registration was null
[DEBUG] 2025-10-15 11:46:22.966 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2025-10-15 11:46:22.966 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2025-10-15 11:46:22.966 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@124eb83d] under ifnull; prior registration was null
[DEBUG] 2025-10-15 11:46:22.966 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2025-10-15 11:46:22.966 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2025-10-15 11:46:22.967 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@4a22e4d7] under pad; prior registration was null
[DEBUG] 2025-10-15 11:46:22.967 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@37775bb1] under str; prior registration was null
[DEBUG] 2025-10-15 11:46:22.968 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@1e2445f6] under format; prior registration was null
[DEBUG] 2025-10-15 11:46:22.969 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@6aea99e7] under timestampadd; prior registration was null
[DEBUG] 2025-10-15 11:46:22.970 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@477523ba] under timestampdiff; prior registration was null
[DEBUG] 2025-10-15 11:46:22.970 [main] SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
[DEBUG] 2025-10-15 11:46:22.970 [main] SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
[DEBUG] 2025-10-15 11:46:22.970 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5763a655] under current_date; prior registration was null
[DEBUG] 2025-10-15 11:46:22.970 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@40c8067] under current_time; prior registration was null
[DEBUG] 2025-10-15 11:46:22.970 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@46bb0bdf] under current_timestamp; prior registration was null
[DEBUG] 2025-10-15 11:46:22.970 [main] SqmFunctionRegistry - Registering alternate key : current date -> current_date
[DEBUG] 2025-10-15 11:46:22.971 [main] SqmFunctionRegistry - Registering alternate key : current time -> current_time
[DEBUG] 2025-10-15 11:46:22.971 [main] SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2025-10-15 11:46:22.971 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@561f9d92] under local_date; prior registration was null
[DEBUG] 2025-10-15 11:46:22.971 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1c84d80a] under local_time; prior registration was null
[DEBUG] 2025-10-15 11:46:22.971 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7ceb6c45] under local_datetime; prior registration was null
[DEBUG] 2025-10-15 11:46:22.971 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@629075f4] under offset_datetime; prior registration was null
[DEBUG] 2025-10-15 11:46:22.971 [main] SqmFunctionRegistry - Registering alternate key : local date -> local_date
[DEBUG] 2025-10-15 11:46:22.971 [main] SqmFunctionRegistry - Registering alternate key : local time -> local_time
[DEBUG] 2025-10-15 11:46:22.971 [main] SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
[DEBUG] 2025-10-15 11:46:22.971 [main] SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2025-10-15 11:46:22.971 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@48499739] under instant; prior registration was null
[DEBUG] 2025-10-15 11:46:22.971 [main] SqmFunctionRegistry - Registering alternate key : current_instant -> instant
[DEBUG] 2025-10-15 11:46:22.972 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@30b3d899] under sql; prior registration was null
[DEBUG] 2025-10-15 11:46:22.972 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2025-10-15 11:46:22.972 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2025-10-15 11:46:22.972 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2025-10-15 11:46:22.972 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2025-10-15 11:46:22.972 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@129c4d19
[DEBUG] 2025-10-15 11:46:22.972 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
[DEBUG] 2025-10-15 11:46:22.972 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2025-10-15 11:46:22.972 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2025-10-15 11:46:22.972 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2025-10-15 11:46:22.972 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2025-10-15 11:46:22.972 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
[DEBUG] 2025-10-15 11:46:22.972 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2025-10-15 11:46:22.972 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2025-10-15 11:46:22.973 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@404ced67] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
[DEBUG] 2025-10-15 11:46:22.973 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@71531dd7] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
[DEBUG] 2025-10-15 11:46:22.973 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
[DEBUG] 2025-10-15 11:46:22.973 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2025-10-15 11:46:22.973 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2025-10-15 11:46:22.973 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2025-10-15 11:46:22.973 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2025-10-15 11:46:22.973 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2025-10-15 11:46:22.973 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2025-10-15 11:46:22.973 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2025-10-15 11:46:22.974 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
[DEBUG] 2025-10-15 11:46:22.974 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
[DEBUG] 2025-10-15 11:46:22.974 [main] SqmFunctionRegistry - Registering alternate key : day -> dayofmonth
[DEBUG] 2025-10-15 11:46:22.974 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
[DEBUG] 2025-10-15 11:46:22.974 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2025-10-15 11:46:22.974 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2025-10-15 11:46:22.974 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2025-10-15 11:46:22.974 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2025-10-15 11:46:22.974 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
[DEBUG] 2025-10-15 11:46:22.974 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
[DEBUG] 2025-10-15 11:46:22.974 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
[DEBUG] 2025-10-15 11:46:22.974 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
[DEBUG] 2025-10-15 11:46:22.974 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
[DEBUG] 2025-10-15 11:46:22.974 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
[DEBUG] 2025-10-15 11:46:22.975 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
[DEBUG] 2025-10-15 11:46:22.975 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2025-10-15 11:46:22.975 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
[DEBUG] 2025-10-15 11:46:22.975 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
[DEBUG] 2025-10-15 11:46:22.975 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
[DEBUG] 2025-10-15 11:46:22.975 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
[DEBUG] 2025-10-15 11:46:22.975 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2025-10-15 11:46:22.975 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2025-10-15 11:46:22.975 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2025-10-15 11:46:22.975 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2025-10-15 11:46:22.975 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2025-10-15 11:46:22.975 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@20256a0b] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@279126f5
[DEBUG] 2025-10-15 11:46:22.975 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2025-10-15 11:46:22.975 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2025-10-15 11:46:22.975 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2025-10-15 11:46:22.980 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@6c2a95d5] under trunc; prior registration was null
[DEBUG] 2025-10-15 11:46:22.980 [main] SqmFunctionRegistry - Registering alternate key : truncate -> trunc
[DEBUG] 2025-10-15 11:46:22.980 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2025-10-15 11:46:22.980 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@24d8f87a] under bitand; prior registration was null
[DEBUG] 2025-10-15 11:46:22.980 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3f048c86] under bitor; prior registration was null
[DEBUG] 2025-10-15 11:46:22.980 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@255d9277] under bitxor; prior registration was null
[DEBUG] 2025-10-15 11:46:22.980 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1de13f34] under bitnot; prior registration was null
[DEBUG] 2025-10-15 11:46:22.980 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2025-10-15 11:46:22.980 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2025-10-15 11:46:22.981 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
[DEBUG] 2025-10-15 11:46:22.981 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2025-10-15 11:46:22.981 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2025-10-15 11:46:22.981 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
[DEBUG] 2025-10-15 11:46:22.981 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2025-10-15 11:46:22.981 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2025-10-15 11:46:22.981 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
[DEBUG] 2025-10-15 11:46:22.981 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
[DEBUG] 2025-10-15 11:46:22.981 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
[DEBUG] 2025-10-15 11:46:22.981 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
[DEBUG] 2025-10-15 11:46:22.981 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
[DEBUG] 2025-10-15 11:46:22.981 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@7e191fda] under format; prior registration was org.hibernate.dialect.function.FormatFunction@1e2445f6
[DEBUG] 2025-10-15 11:46:22.981 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
[DEBUG] 2025-10-15 11:46:22.981 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
[DEBUG] 2025-10-15 11:46:22.981 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2025-10-15 11:46:22.982 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2025-10-15 11:46:22.982 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@1c84d80a
[DEBUG] 2025-10-15 11:46:22.982 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@7ceb6c45
[DEBUG] 2025-10-15 11:46:22.982 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
[DEBUG] 2025-10-15 11:46:22.982 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6562cc23] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@75bd28d
[DEBUG] 2025-10-15 11:46:22.982 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2ce524d2] under chr; prior registration was null
[DEBUG] 2025-10-15 11:46:22.982 [main] SqmFunctionRegistry - Registering alternate key : char -> chr
[DEBUG] 2025-10-15 11:46:22.982 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3869a6e5] under sysdate; prior registration was null
[DEBUG] 2025-10-15 11:46:22.982 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2025-10-15 11:46:22.982 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2025-10-15 11:46:22.982 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2025-10-15 11:46:22.983 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2025-10-15 11:46:22.983 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2025-10-15 11:46:22.983 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2025-10-15 11:46:22.984 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@245cb8df] under rank; prior registration was null
[DEBUG] 2025-10-15 11:46:22.985 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@26b3c9a2] under dense_rank; prior registration was null
[DEBUG] 2025-10-15 11:46:22.985 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@241b971f] under percent_rank; prior registration was null
[DEBUG] 2025-10-15 11:46:22.985 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@125f16b2] under cume_dist; prior registration was null
[DEBUG] 2025-10-15 11:46:22.985 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@79195c22] under listagg; prior registration was null
[DEBUG] 2025-10-15 11:46:22.989 [main] HQL_FUNCTIONS - abs(NUMERIC arg)
[DEBUG] 2025-10-15 11:46:22.989 [main] HQL_FUNCTIONS - Double acos(NUMERIC arg)
[DEBUG] 2025-10-15 11:46:22.989 [main] HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days)
[DEBUG] 2025-10-15 11:46:22.989 [main] HQL_FUNCTIONS - addtime(TIME datetime, TIME time)
[DEBUG] 2025-10-15 11:46:22.990 [main] HQL_FUNCTIONS - Boolean any(BOOLEAN arg)
[DEBUG] 2025-10-15 11:46:22.990 [main] HQL_FUNCTIONS - Integer ascii(STRING arg)
[DEBUG] 2025-10-15 11:46:22.990 [main] HQL_FUNCTIONS - Double asin(NUMERIC arg)
[DEBUG] 2025-10-15 11:46:22.990 [main] HQL_FUNCTIONS - Double atan(NUMERIC arg)
[DEBUG] 2025-10-15 11:46:22.990 [main] HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2025-10-15 11:46:22.990 [main] HQL_FUNCTIONS - avg(arg)
[DEBUG] 2025-10-15 11:46:22.990 [main] HQL_FUNCTIONS - bit_and(arg)
[DEBUG] 2025-10-15 11:46:22.990 [main] HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2025-10-15 11:46:22.990 [main] HQL_FUNCTIONS - bit_or(arg)
[DEBUG] 2025-10-15 11:46:22.990 [main] HQL_FUNCTIONS - bitand(arg0, arg1)
[DEBUG] 2025-10-15 11:46:22.990 [main] HQL_FUNCTIONS - bitnot(arg)
[DEBUG] 2025-10-15 11:46:22.990 [main] HQL_FUNCTIONS - bitor(arg0, arg1)
[DEBUG] 2025-10-15 11:46:22.990 [main] HQL_FUNCTIONS - bitxor(arg0, arg1)
[DEBUG] 2025-10-15 11:46:22.990 [main] HQL_FUNCTIONS - cast(arg as Type)
[DEBUG] 2025-10-15 11:46:22.990 [main] HQL_FUNCTIONS - ceiling(NUMERIC arg)
[DEBUG] 2025-10-15 11:46:22.990 [main] HQL_FUNCTIONS - Character char(INTEGER arg)
[DEBUG] 2025-10-15 11:46:22.990 [main] HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2025-10-15 11:46:22.990 [main] HQL_FUNCTIONS - Character chr(INTEGER arg)
[DEBUG] 2025-10-15 11:46:22.990 [main] HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
[DEBUG] 2025-10-15 11:46:22.990 [main] HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
[DEBUG] 2025-10-15 11:46:22.990 [main] HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2025-10-15 11:46:22.990 [main] HQL_FUNCTIONS - Double cos(NUMERIC arg)
[DEBUG] 2025-10-15 11:46:22.990 [main] HQL_FUNCTIONS - Double cosh(NUMERIC arg)
[DEBUG] 2025-10-15 11:46:22.990 [main] HQL_FUNCTIONS - Double cot(NUMERIC arg)
[DEBUG] 2025-10-15 11:46:22.991 [main] HQL_FUNCTIONS - Long count([distinct ]{arg|*})
[DEBUG] 2025-10-15 11:46:22.991 [main] HQL_FUNCTIONS - Integer crc32(arg)
[DEBUG] 2025-10-15 11:46:22.991 [main] HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
[DEBUG] 2025-10-15 11:46:22.991 [main] HQL_FUNCTIONS - Date curdate()
[DEBUG] 2025-10-15 11:46:22.991 [main] HQL_FUNCTIONS - Date current date
[DEBUG] 2025-10-15 11:46:22.991 [main] HQL_FUNCTIONS - Time current time
[DEBUG] 2025-10-15 11:46:22.991 [main] HQL_FUNCTIONS - Timestamp current timestamp
[DEBUG] 2025-10-15 11:46:22.991 [main] HQL_FUNCTIONS - Date current_date
[DEBUG] 2025-10-15 11:46:22.991 [main] HQL_FUNCTIONS - Instant current_instant
[DEBUG] 2025-10-15 11:46:22.991 [main] HQL_FUNCTIONS - Time current_time
[DEBUG] 2025-10-15 11:46:22.991 [main] HQL_FUNCTIONS - Timestamp current_timestamp
[DEBUG] 2025-10-15 11:46:22.991 [main] HQL_FUNCTIONS - Time curtime()
[DEBUG] 2025-10-15 11:46:22.991 [main] HQL_FUNCTIONS - Date date(arg)
[DEBUG] 2025-10-15 11:46:22.991 [main] HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2025-10-15 11:46:22.991 [main] HQL_FUNCTIONS - Integer datediff(DATE end, DATE start)
[DEBUG] 2025-10-15 11:46:22.991 [main] HQL_FUNCTIONS - Integer day(DATE arg)
[DEBUG] 2025-10-15 11:46:22.991 [main] HQL_FUNCTIONS - String dayname(DATE arg)
[DEBUG] 2025-10-15 11:46:22.991 [main] HQL_FUNCTIONS - Integer dayofmonth(DATE arg)
[DEBUG] 2025-10-15 11:46:22.991 [main] HQL_FUNCTIONS - Integer dayofweek(DATE arg)
[DEBUG] 2025-10-15 11:46:22.991 [main] HQL_FUNCTIONS - Integer dayofyear(DATE arg)
[DEBUG] 2025-10-15 11:46:22.991 [main] HQL_FUNCTIONS - Double degrees(NUMERIC arg)
[DEBUG] 2025-10-15 11:46:22.991 [main] HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
[DEBUG] 2025-10-15 11:46:22.991 [main] HQL_FUNCTIONS - Boolean every(BOOLEAN arg)
[DEBUG] 2025-10-15 11:46:22.991 [main] HQL_FUNCTIONS - Double exp(NUMERIC arg)
[DEBUG] 2025-10-15 11:46:22.991 [main] HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2025-10-15 11:46:22.992 [main] HQL_FUNCTIONS - first_valueANY value
[DEBUG] 2025-10-15 11:46:22.992 [main] HQL_FUNCTIONS - floor(NUMERIC arg)
[DEBUG] 2025-10-15 11:46:22.992 [main] HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2025-10-15 11:46:22.992 [main] HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2025-10-15 11:46:22.992 [main] HQL_FUNCTIONS - Integer hour(TIME arg)
[DEBUG] 2025-10-15 11:46:22.992 [main] HQL_FUNCTIONS - ifnull(arg0, arg1)
[DEBUG] 2025-10-15 11:46:22.992 [main] HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2025-10-15 11:46:22.992 [main] HQL_FUNCTIONS - Instant instant
[DEBUG] 2025-10-15 11:46:22.992 [main] HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2025-10-15 11:46:22.992 [main] HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2025-10-15 11:46:22.992 [main] HQL_FUNCTIONS - Date last_day(DATE arg)
[DEBUG] 2025-10-15 11:46:22.992 [main] HQL_FUNCTIONS - last_valueANY value
[DEBUG] 2025-10-15 11:46:22.992 [main] HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2025-10-15 11:46:22.992 [main] HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2025-10-15 11:46:22.992 [main] HQL_FUNCTIONS - String left(STRING string, INTEGER length)
[DEBUG] 2025-10-15 11:46:22.992 [main] HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
[DEBUG] 2025-10-15 11:46:22.992 [main] HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
[DEBUG] 2025-10-15 11:46:22.992 [main] HQL_FUNCTIONS - Double ln(NUMERIC arg)
[DEBUG] 2025-10-15 11:46:22.992 [main] HQL_FUNCTIONS - LocalDate local date
[DEBUG] 2025-10-15 11:46:22.992 [main] HQL_FUNCTIONS - LocalDateTime local datetime
[DEBUG] 2025-10-15 11:46:22.992 [main] HQL_FUNCTIONS - LocalTime local time
[DEBUG] 2025-10-15 11:46:22.992 [main] HQL_FUNCTIONS - LocalDate local_date
[DEBUG] 2025-10-15 11:46:22.992 [main] HQL_FUNCTIONS - LocalDateTime local_datetime
[DEBUG] 2025-10-15 11:46:22.993 [main] HQL_FUNCTIONS - LocalTime local_time
[DEBUG] 2025-10-15 11:46:22.993 [main] HQL_FUNCTIONS - Timestamp localtime
[DEBUG] 2025-10-15 11:46:22.993 [main] HQL_FUNCTIONS - Timestamp localtimestamp
[DEBUG] 2025-10-15 11:46:22.993 [main] HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2025-10-15 11:46:22.993 [main] HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
[DEBUG] 2025-10-15 11:46:22.993 [main] HQL_FUNCTIONS - Double log10(NUMERIC arg)
[DEBUG] 2025-10-15 11:46:22.993 [main] HQL_FUNCTIONS - Double log2(NUMERIC arg)
[DEBUG] 2025-10-15 11:46:22.993 [main] HQL_FUNCTIONS - String lower(STRING string)
[DEBUG] 2025-10-15 11:46:22.993 [main] HQL_FUNCTIONS - String lpad(string, length[, padding])
[DEBUG] 2025-10-15 11:46:22.993 [main] HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
[DEBUG] 2025-10-15 11:46:22.993 [main] HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear)
[DEBUG] 2025-10-15 11:46:22.993 [main] HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
[DEBUG] 2025-10-15 11:46:22.993 [main] HQL_FUNCTIONS - max(COMPARABLE arg)
[DEBUG] 2025-10-15 11:46:22.993 [main] HQL_FUNCTIONS - String md5(arg)
[DEBUG] 2025-10-15 11:46:22.993 [main] HQL_FUNCTIONS - Integer microsecond(TIME arg)
[DEBUG] 2025-10-15 11:46:22.993 [main] HQL_FUNCTIONS - min(COMPARABLE arg)
[DEBUG] 2025-10-15 11:46:22.993 [main] HQL_FUNCTIONS - Integer minute(TIME arg)
[DEBUG] 2025-10-15 11:46:22.993 [main] HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2025-10-15 11:46:22.993 [main] HQL_FUNCTIONS - Integer month(DATE arg)
[DEBUG] 2025-10-15 11:46:22.993 [main] HQL_FUNCTIONS - String monthname(DATE arg)
[DEBUG] 2025-10-15 11:46:22.993 [main] HQL_FUNCTIONS - Timestamp now()
[DEBUG] 2025-10-15 11:46:22.993 [main] HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
[DEBUG] 2025-10-15 11:46:22.993 [main] HQL_FUNCTIONS - nullif(arg0, arg1)
[DEBUG] 2025-10-15 11:46:22.993 [main] HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2025-10-15 11:46:22.993 [main] HQL_FUNCTIONS - OffsetDateTime offset datetime
[DEBUG] 2025-10-15 11:46:22.993 [main] HQL_FUNCTIONS - OffsetDateTime offset_datetime
[DEBUG] 2025-10-15 11:46:22.993 [main] HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2025-10-15 11:46:22.994 [main] HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2025-10-15 11:46:22.994 [main] HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
[DEBUG] 2025-10-15 11:46:22.994 [main] HQL_FUNCTIONS - Double pi
[DEBUG] 2025-10-15 11:46:22.994 [main] HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
[DEBUG] 2025-10-15 11:46:22.994 [main] HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2025-10-15 11:46:22.994 [main] HQL_FUNCTIONS - Integer quarter(DATE arg)
[DEBUG] 2025-10-15 11:46:22.994 [main] HQL_FUNCTIONS - Double radians(NUMERIC arg)
[DEBUG] 2025-10-15 11:46:22.994 [main] HQL_FUNCTIONS - Double rand([INTEGER seed])
[DEBUG] 2025-10-15 11:46:22.994 [main] HQL_FUNCTIONS - Long rank([arg0[, ...]])
[DEBUG] 2025-10-15 11:46:22.994 [main] HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
[DEBUG] 2025-10-15 11:46:22.994 [main] HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2025-10-15 11:46:22.994 [main] HQL_FUNCTIONS - String reverse(STRING arg)
[DEBUG] 2025-10-15 11:46:22.994 [main] HQL_FUNCTIONS - String right(STRING string, INTEGER length)
[DEBUG] 2025-10-15 11:46:22.994 [main] HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
[DEBUG] 2025-10-15 11:46:22.994 [main] HQL_FUNCTIONS - Long row_number()
[DEBUG] 2025-10-15 11:46:22.994 [main] HQL_FUNCTIONS - String rpad(string, length[, padding])
[DEBUG] 2025-10-15 11:46:22.994 [main] HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
[DEBUG] 2025-10-15 11:46:22.994 [main] HQL_FUNCTIONS - Integer second(TIME arg)
[DEBUG] 2025-10-15 11:46:22.994 [main] HQL_FUNCTIONS - String sha(arg)
[DEBUG] 2025-10-15 11:46:22.994 [main] HQL_FUNCTIONS - String sha1(arg)
[DEBUG] 2025-10-15 11:46:22.994 [main] HQL_FUNCTIONS - String sha2(arg0, arg1)
[DEBUG] 2025-10-15 11:46:22.994 [main] HQL_FUNCTIONS - Integer sign(NUMERIC arg)
[DEBUG] 2025-10-15 11:46:22.994 [main] HQL_FUNCTIONS - Double sin(NUMERIC arg)
[DEBUG] 2025-10-15 11:46:22.994 [main] HQL_FUNCTIONS - Double sinh(NUMERIC arg)
[DEBUG] 2025-10-15 11:46:22.995 [main] HQL_FUNCTIONS - String soundex(arg)
[DEBUG] 2025-10-15 11:46:22.995 [main] HQL_FUNCTIONS - String space(INTEGER arg)
[DEBUG] 2025-10-15 11:46:22.995 [main] HQL_FUNCTIONS - Object sql
[DEBUG] 2025-10-15 11:46:22.995 [main] HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
[DEBUG] 2025-10-15 11:46:22.995 [main] HQL_FUNCTIONS - Double stddev(NUMERIC arg)
[DEBUG] 2025-10-15 11:46:22.995 [main] HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
[DEBUG] 2025-10-15 11:46:22.995 [main] HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
[DEBUG] 2025-10-15 11:46:22.995 [main] HQL_FUNCTIONS - String str(arg)
[DEBUG] 2025-10-15 11:46:22.995 [main] HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days)
[DEBUG] 2025-10-15 11:46:22.995 [main] HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2025-10-15 11:46:22.995 [main] HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2025-10-15 11:46:22.995 [main] HQL_FUNCTIONS - subtime(TIME datetime, TIME time)
[DEBUG] 2025-10-15 11:46:22.995 [main] HQL_FUNCTIONS - sum(arg)
[DEBUG] 2025-10-15 11:46:22.995 [main] HQL_FUNCTIONS - Timestamp sysdate()
[DEBUG] 2025-10-15 11:46:22.995 [main] HQL_FUNCTIONS - Double tan(NUMERIC arg)
[DEBUG] 2025-10-15 11:46:22.995 [main] HQL_FUNCTIONS - Double tanh(NUMERIC arg)
[DEBUG] 2025-10-15 11:46:22.995 [main] HQL_FUNCTIONS - String time(arg)
[DEBUG] 2025-10-15 11:46:22.995 [main] HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1])
[DEBUG] 2025-10-15 11:46:22.995 [main] HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2025-10-15 11:46:22.996 [main] HQL_FUNCTIONS - basicType@14(java.lang.Long,-5)|basicType@17(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2025-10-15 11:46:22.996 [main] HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2025-10-15 11:46:22.996 [main] HQL_FUNCTIONS - trunc( ... )
[DEBUG] 2025-10-15 11:46:22.996 [main] HQL_FUNCTIONS - truncate( ... )
[DEBUG] 2025-10-15 11:46:22.996 [main] HQL_FUNCTIONS - String upper(STRING string)
[DEBUG] 2025-10-15 11:46:22.996 [main] HQL_FUNCTIONS - Date utc_date
[DEBUG] 2025-10-15 11:46:22.996 [main] HQL_FUNCTIONS - Time utc_time
[DEBUG] 2025-10-15 11:46:22.996 [main] HQL_FUNCTIONS - Timestamp utc_timestamp
[DEBUG] 2025-10-15 11:46:22.996 [main] HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
[DEBUG] 2025-10-15 11:46:22.996 [main] HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
[DEBUG] 2025-10-15 11:46:22.996 [main] HQL_FUNCTIONS - Double variance(NUMERIC arg)
[DEBUG] 2025-10-15 11:46:22.996 [main] HQL_FUNCTIONS - Integer week(DATE arg)
[DEBUG] 2025-10-15 11:46:22.996 [main] HQL_FUNCTIONS - Integer year(DATE arg)
[DEBUG] 2025-10-15 11:46:23.002 [main] cache - Starting QueryInterpretationCache(2048)
[DEBUG] 2025-10-15 11:46:23.116 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2025-10-15 11:46:23.117 [main] EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
[DEBUG] 2025-10-15 11:46:23.226 [main] ClassLoaderAccessImpl - Not known whether passed class name [org.hungrybadger.entity.Review] is safe
[DEBUG] 2025-10-15 11:46:23.226 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.hungrybadger.entity.Review
[DEBUG] 2025-10-15 11:46:23.452 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.hungrybadger.entity.Review]: private accessor [cuisineType]
[DEBUG] 2025-10-15 11:46:23.488 [main] interceptor - To-one property `org.hungrybadger.entity.Photo#review` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2025-10-15 11:46:23.488 [main] interceptor - To-one property `org.hungrybadger.entity.Photo#review` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2025-10-15 11:46:23.488 [main] ClassLoaderAccessImpl - Not known whether passed class name [org.hungrybadger.entity.Photo] is safe
[DEBUG] 2025-10-15 11:46:23.488 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.hungrybadger.entity.Photo
[DEBUG] 2025-10-15 11:46:23.500 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.hungrybadger.entity.Photo]: private accessor [imagePath]
[DEBUG] 2025-10-15 11:46:23.501 [main] interceptor - To-one property `org.hungrybadger.entity.Photo#review` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2025-10-15 11:46:23.520 [main] mutation - Skipping collection (re)creation - org.hungrybadger.entity.Review.photos
[DEBUG] 2025-10-15 11:46:23.522 [main] mutation - Skipping collection row deletions - org.hungrybadger.entity.Review.photos
[DEBUG] 2025-10-15 11:46:23.522 [main] mutation - Skipping collection removals - org.hungrybadger.entity.Review.photos
[DEBUG] 2025-10-15 11:46:23.556 [main] creation - Starting post-init callbacks
[DEBUG] 2025-10-15 11:46:23.557 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[org.hungrybadger.entity.Review.photos#{element}]) - element descriptor
[DEBUG] 2025-10-15 11:46:23.557 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(org.hungrybadger.entity.Review.photos)#finishInitialization
[DEBUG] 2025-10-15 11:46:23.557 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(org.hungrybadger.entity.Review.photos) - key descriptor
[DEBUG] 2025-10-15 11:46:23.563 [main] creation - Starting PostInitCallbackEntry : Entity(org.hungrybadger.entity.Review) `staticFetchableList` generator
[DEBUG] 2025-10-15 11:46:23.563 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.hungrybadger.entity.Photo.review]
[DEBUG] 2025-10-15 11:46:23.563 [main] creation - Starting PostInitCallbackEntry : Entity(org.hungrybadger.entity.Photo) `staticFetchableList` generator
[DEBUG] 2025-10-15 11:46:23.563 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[org.hungrybadger.entity.Review.photos#{element}]) - element descriptor
[DEBUG] 2025-10-15 11:46:23.657 [main] create - Created new SQL alias : r1_0
[DEBUG] 2025-10-15 11:46:23.660 [main] create - Registration of TableGroup [StandardTableGroup(org.hungrybadger.entity.Review)] with identifierForTableGroup [org.hungrybadger.entity.Review] for NavigablePath [org.hungrybadger.entity.Review] 
[DEBUG] 2025-10-15 11:46:23.681 [main] AST - DomainResult Graph:
 \-EntityResultImpl [org.hungrybadger.entity.Review]
 |  +-BasicFetch [org.hungrybadger.entity.Review.cuisineType]
 |  +-BasicFetch [org.hungrybadger.entity.Review.personalNotes]
 |  +-BasicFetch [org.hungrybadger.entity.Review.personalRating]
 |  +-DelayedCollectionFetch [org.hungrybadger.entity.Review.photos]
 |  \-BasicFetch [org.hungrybadger.entity.Review.restaurantName]

[DEBUG] 2025-10-15 11:46:23.692 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.hungrybadger.entity.Review) {
          primaryTableReference : review as r1_0
        }
      }
    }

[DEBUG] 2025-10-15 11:46:23.704 [main] AbstractEntityPersister - Static SQL for entity: org.hungrybadger.entity.Review
[DEBUG] 2025-10-15 11:46:23.704 [main] AbstractEntityPersister -  Version select: select id from review where id=?
[DEBUG] 2025-10-15 11:46:23.705 [main] AbstractEntityPersister -  Insert (0): insert into review (cuisine_type,personal_notes,personal_rating,restaurant_name) values (?,?,?,?)
[DEBUG] 2025-10-15 11:46:23.705 [main] AbstractEntityPersister -  Update (0): update review set cuisine_type=?,personal_notes=?,personal_rating=?,restaurant_name=? where id=?
[DEBUG] 2025-10-15 11:46:23.705 [main] AbstractEntityPersister -  Delete (0): delete from review where id=?
[DEBUG] 2025-10-15 11:46:23.705 [main] create - Created new SQL alias : p1_0
[DEBUG] 2025-10-15 11:46:23.705 [main] create - Registration of TableGroup [StandardTableGroup(org.hungrybadger.entity.Photo)] with identifierForTableGroup [org.hungrybadger.entity.Photo] for NavigablePath [org.hungrybadger.entity.Photo] 
[DEBUG] 2025-10-15 11:46:23.709 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@d7055be] with identifierForTableGroup [org.hungrybadger.entity.Photo.review] for NavigablePath [org.hungrybadger.entity.Photo.review] 
[DEBUG] 2025-10-15 11:46:23.711 [main] create - Created new SQL alias : r1_0
[DEBUG] 2025-10-15 11:46:23.712 [main] AST - DomainResult Graph:
 \-EntityResultImpl [org.hungrybadger.entity.Photo]
 |  +-BasicFetch [org.hungrybadger.entity.Photo.imagePath]
 |  \-EntityFetchJoinedImpl [org.hungrybadger.entity.Photo.review]

[DEBUG] 2025-10-15 11:46:23.713 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.hungrybadger.entity.Photo) {
          primaryTableReference : photos as p1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.hungrybadger.entity.Photo.review) {
              primaryTableReference : review as r1_0
            }
          }
        }
      }
    }

[DEBUG] 2025-10-15 11:46:23.714 [main] AbstractEntityPersister - Static SQL for entity: org.hungrybadger.entity.Photo
[DEBUG] 2025-10-15 11:46:23.714 [main] AbstractEntityPersister -  Version select: select id from photos where id=?
[DEBUG] 2025-10-15 11:46:23.714 [main] AbstractEntityPersister -  Insert (0): insert into photos (image_path,review_id) values (?,?)
[DEBUG] 2025-10-15 11:46:23.714 [main] AbstractEntityPersister -  Update (0): update photos set image_path=?,review_id=? where id=?
[DEBUG] 2025-10-15 11:46:23.714 [main] AbstractEntityPersister -  Delete (0): delete from photos where id=?
[DEBUG] 2025-10-15 11:46:23.716 [main] create - Created new SQL alias : p1_0
[DEBUG] 2025-10-15 11:46:23.716 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@30c8c6ab] with identifierForTableGroup [org.hungrybadger.entity.Review.photos] for NavigablePath [org.hungrybadger.entity.Review.photos] 
[DEBUG] 2025-10-15 11:46:23.716 [main] create - Registration of TableGroup [StandardTableGroup(org.hungrybadger.entity.Review.photos.{element})] with identifierForTableGroup [org.hungrybadger.entity.Review.photos.{element}] for NavigablePath [org.hungrybadger.entity.Review.photos.{element}] 
[DEBUG] 2025-10-15 11:46:23.725 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@23c05889] with identifierForTableGroup [org.hungrybadger.entity.Review.photos.{element}.review] for NavigablePath [org.hungrybadger.entity.Review.photos.{element}.review] 
[DEBUG] 2025-10-15 11:46:23.729 [main] AST - DomainResult Graph:
 \-CollectionDomainResult [org.hungrybadger.entity.Review.photos]

[DEBUG] 2025-10-15 11:46:23.729 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (p1 : org.hungrybadger.entity.Review.photos) {
          primaryTableReference : photos as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (r1 : org.hungrybadger.entity.Review.photos.{element}.review) {
            }
          }
        }
      }
    }

[DEBUG] 2025-10-15 11:46:23.729 [main] mutation - Static SQL for collection: org.hungrybadger.entity.Review.photos
[DEBUG] 2025-10-15 11:46:23.768 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2025-10-15 11:46:23.768 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2025-10-15 11:46:23.776 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2025-10-15 11:46:23.776 [main] JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[DEBUG] 2025-10-15 11:46:23.777 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7377781e] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@498e41a4]
[DEBUG] 2025-10-15 11:46:23.779 [main] NamedObjectRepository - Checking 0 named HQL queries
[DEBUG] 2025-10-15 11:46:23.779 [main] NamedObjectRepository - Checking 0 named SQL queries
[DEBUG] 2025-10-15 11:46:23.779 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2025-10-15 11:46:23.779 [main] SchemaManagementToolCoordinator - No actions found; doing nothing
[DEBUG] 2025-10-15 11:46:23.782 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3c3ab672
[DEBUG] 2025-10-15 11:46:23.783 [main] SessionFactoryRegistry - Registering SessionFactory: 191c24ad-e6c9-4110-98f7-db048d3464d2 (<unnamed>)
[DEBUG] 2025-10-15 11:46:23.783 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2025-10-15 11:46:23.783 [main] SessionFactoryImpl - Instantiated SessionFactory
[DEBUG] 2025-10-15 11:46:23.830 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2025-10-15 11:46:23.854 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2025-10-15 11:46:23.875 [main] results - Initializer list:
	  org.hungrybadger.entity.Photo.review -> EntityJoinedFetchInitializer(org.hungrybadger.entity.Photo.review)@1106755629 (ToOneAttributeMapping(NavigableRole[org.hungrybadger.entity.Photo.review])@1825112984)
	  org.hungrybadger.entity.Photo.review.photos -> DelayedCollectionInitializer(org.hungrybadger.entity.Photo.review.photos)@533053618 (PluralAttribute(org.hungrybadger.entity.Review.photos))
	  org.hungrybadger.entity.Photo -> EntityResultInitializer(org.hungrybadger.entity.Photo)@1168981208 (SingleTableEntityPersister(org.hungrybadger.entity.Photo))

[DEBUG] 2025-10-15 11:46:23.882 [main] SQL - select p1_0.id,p1_0.image_path,p1_0.review_id,r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from photos p1_0 join review r1_0 on r1_0.id=p1_0.review_id where p1_0.id=?
[DEBUG] 2025-10-15 11:46:23.912 [main] SqlExceptionHelper - JDBC exception executing SQL [select p1_0.id,p1_0.image_path,p1_0.review_id,r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from photos p1_0 join review r1_0 on r1_0.id=p1_0.review_id where p1_0.id=?] [n/a]
java.sql.SQLSyntaxErrorException: Table 'hungrybadger_test.photos' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:1005) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeQuery(NewProxyPreparedStatement.java:1471) ~[c3p0-0.9.5.5.jar:0.9.5.5]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:246) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:167) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.advanceNext(JdbcValuesResultSetImpl.java:218) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.processNext(JdbcValuesResultSetImpl.java:98) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.results.jdbc.internal.AbstractJdbcValues.next(AbstractJdbcValues.java:19) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.results.internal.RowProcessingStateStandardImpl.next(RowProcessingStateStandardImpl.java:66) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:180) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:33) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:209) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:83) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:76) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:65) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.loader.ast.internal.SingleIdLoadPlan.load(SingleIdLoadPlan.java:145) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.loader.ast.internal.SingleIdLoadPlan.load(SingleIdLoadPlan.java:117) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.loader.ast.internal.SingleIdEntityLoaderStandardImpl.load(SingleIdEntityLoaderStandardImpl.java:75) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.doLoad(AbstractEntityPersister.java:3748) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.load(AbstractEntityPersister.java:3737) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.loadFromDatasource(DefaultLoadEventListener.java:604) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.loadFromCacheOrDatasource(DefaultLoadEventListener.java:590) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.load(DefaultLoadEventListener.java:560) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.doLoad(DefaultLoadEventListener.java:544) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.load(DefaultLoadEventListener.java:207) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.loadWithRegularProxy(DefaultLoadEventListener.java:290) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.proxyOrLoad(DefaultLoadEventListener.java:242) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.doOnLoad(DefaultLoadEventListener.java:111) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.onLoad(DefaultLoadEventListener.java:68) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:138) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.internal.SessionImpl.fireLoadNoChecks(SessionImpl.java:1222) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.internal.SessionImpl.fireLoad(SessionImpl.java:1210) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.loader.internal.IdentifierLoadAccessImpl.load(IdentifierLoadAccessImpl.java:209) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.loader.internal.IdentifierLoadAccessImpl.doLoad(IdentifierLoadAccessImpl.java:160) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.loader.internal.IdentifierLoadAccessImpl.lambda$load$1(IdentifierLoadAccessImpl.java:149) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.loader.internal.IdentifierLoadAccessImpl.perform(IdentifierLoadAccessImpl.java:112) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.loader.internal.IdentifierLoadAccessImpl.load(IdentifierLoadAccessImpl.java:149) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.internal.SessionImpl.get(SessionImpl.java:1018) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hungrybadger.persistence.GenericDao.getById(GenericDao.java:41) ~[classes/:?]
	at org.hungrybadger.persistence.PhotoDaoTest.deleteSuccess(PhotoDaoTest.java:62) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) ~[junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:167) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:163) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:110) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:66) [junit5-rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11) [idea_rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:231) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55) [junit-rt.jar:?]
[WARN ] 2025-10-15 11:46:23.921 [main] SqlExceptionHelper - SQL Error: 1146, SQLState: 42S02
[ERROR] 2025-10-15 11:46:23.921 [main] SqlExceptionHelper - Table 'hungrybadger_test.photos' doesn't exist
[INFO ] 2025-10-15 11:46:23.923 [main] DefaultLoadEventListener - HHH000327: Error performing load command
org.hibernate.exception.SQLGrammarException: JDBC exception executing SQL [select p1_0.id,p1_0.image_path,p1_0.review_id,r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from photos p1_0 join review r1_0 on r1_0.id=p1_0.review_id where p1_0.id=?] [Table 'hungrybadger_test.photos' doesn't exist] [n/a]
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:66) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:265) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:167) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.advanceNext(JdbcValuesResultSetImpl.java:218) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.processNext(JdbcValuesResultSetImpl.java:98) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.results.jdbc.internal.AbstractJdbcValues.next(AbstractJdbcValues.java:19) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.results.internal.RowProcessingStateStandardImpl.next(RowProcessingStateStandardImpl.java:66) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:180) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:33) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:209) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:83) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:76) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:65) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.loader.ast.internal.SingleIdLoadPlan.load(SingleIdLoadPlan.java:145) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.loader.ast.internal.SingleIdLoadPlan.load(SingleIdLoadPlan.java:117) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.loader.ast.internal.SingleIdEntityLoaderStandardImpl.load(SingleIdEntityLoaderStandardImpl.java:75) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.doLoad(AbstractEntityPersister.java:3748) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.load(AbstractEntityPersister.java:3737) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.loadFromDatasource(DefaultLoadEventListener.java:604) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.loadFromCacheOrDatasource(DefaultLoadEventListener.java:590) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.load(DefaultLoadEventListener.java:560) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.doLoad(DefaultLoadEventListener.java:544) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.load(DefaultLoadEventListener.java:207) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.loadWithRegularProxy(DefaultLoadEventListener.java:290) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.proxyOrLoad(DefaultLoadEventListener.java:242) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.doOnLoad(DefaultLoadEventListener.java:111) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.onLoad(DefaultLoadEventListener.java:68) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:138) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.internal.SessionImpl.fireLoadNoChecks(SessionImpl.java:1222) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.internal.SessionImpl.fireLoad(SessionImpl.java:1210) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.loader.internal.IdentifierLoadAccessImpl.load(IdentifierLoadAccessImpl.java:209) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.loader.internal.IdentifierLoadAccessImpl.doLoad(IdentifierLoadAccessImpl.java:160) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.loader.internal.IdentifierLoadAccessImpl.lambda$load$1(IdentifierLoadAccessImpl.java:149) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.loader.internal.IdentifierLoadAccessImpl.perform(IdentifierLoadAccessImpl.java:112) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.loader.internal.IdentifierLoadAccessImpl.load(IdentifierLoadAccessImpl.java:149) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.internal.SessionImpl.get(SessionImpl.java:1018) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hungrybadger.persistence.GenericDao.getById(GenericDao.java:41) ~[classes/:?]
	at org.hungrybadger.persistence.PhotoDaoTest.deleteSuccess(PhotoDaoTest.java:62) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) ~[junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:167) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:163) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:110) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:66) [junit5-rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11) [idea_rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:231) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55) [junit-rt.jar:?]
Caused by: java.sql.SQLSyntaxErrorException: Table 'hungrybadger_test.photos' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:1005) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeQuery(NewProxyPreparedStatement.java:1471) ~[c3p0-0.9.5.5.jar:0.9.5.5]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:246) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	... 89 more
[DEBUG] 2025-10-15 11:46:23.924 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 11:46:24.176 [main] create - Created new SQL alias : p1_0
[DEBUG] 2025-10-15 11:46:24.176 [main] create - Registration of TableGroup [StandardTableGroup(org.hungrybadger.entity.Photo(12501975161600))] with identifierForTableGroup [org.hungrybadger.entity.Photo] for NavigablePath [org.hungrybadger.entity.Photo] 
[DEBUG] 2025-10-15 11:46:24.185 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@69a76b74] with identifierForTableGroup [org.hungrybadger.entity.Photo.review] for NavigablePath [org.hungrybadger.entity.Photo.review] 
[DEBUG] 2025-10-15 11:46:24.188 [main] AST - DomainResult Graph:
 \-EntityResultImpl [org.hungrybadger.entity.Photo(12501975161600)]
 |  +-BasicFetch [org.hungrybadger.entity.Photo(12501975161600).imagePath]
 |  \-CircularFetchImpl [org.hungrybadger.entity.Photo(12501975161600).review]

[DEBUG] 2025-10-15 11:46:24.188 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.hungrybadger.entity.Photo(12501975161600)) {
          primaryTableReference : photos as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (r1 : org.hungrybadger.entity.Photo(12501975161600).review) {
            }
          }
        }
      }
    }

[DEBUG] 2025-10-15 11:46:24.192 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
[DEBUG] 2025-10-15 11:46:24.196 [main] results - Initializer list:
	  org.hungrybadger.entity.Photo(12501975161600) -> EntityResultInitializer(org.hungrybadger.entity.Photo(12501975161600))@497021410 (SingleTableEntityPersister(org.hungrybadger.entity.Photo))
	  org.hungrybadger.entity.Photo(12501975161600).review -> EntitySelectFetchInitializer(org.hungrybadger.entity.Photo(12501975161600).review)@1915435938 (ToOneAttributeMapping(NavigableRole[org.hungrybadger.entity.Photo.review])@1825112984)

[DEBUG] 2025-10-15 11:46:24.196 [main] SQL - select p1_0.id,p1_0.image_path,p1_0.review_id from photos p1_0
[DEBUG] 2025-10-15 11:46:24.198 [main] SqlExceptionHelper - JDBC exception executing SQL [select p1_0.id,p1_0.image_path,p1_0.review_id from photos p1_0] [n/a]
java.sql.SQLSyntaxErrorException: Table 'hungrybadger_test.photos' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:1005) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeQuery(NewProxyPreparedStatement.java:1471) ~[c3p0-0.9.5.5.jar:0.9.5.5]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:246) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:167) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.advanceNext(JdbcValuesResultSetImpl.java:218) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.processNext(JdbcValuesResultSetImpl.java:98) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.results.jdbc.internal.AbstractJdbcValues.next(AbstractJdbcValues.java:19) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.results.internal.RowProcessingStateStandardImpl.next(RowProcessingStateStandardImpl.java:66) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:202) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:33) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:209) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:83) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:76) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:65) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$2(ConcreteSqmSelectQueryPlan.java:137) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:362) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:303) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:509) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:427) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.query.Query.getResultList(Query.java:120) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hungrybadger.persistence.GenericDao.getAll(GenericDao.java:109) ~[classes/:?]
	at org.hungrybadger.persistence.PhotoDaoTest.getAll(PhotoDaoTest.java:70) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) ~[junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:167) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:163) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:110) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:66) [junit5-rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11) [idea_rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:231) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55) [junit-rt.jar:?]
[WARN ] 2025-10-15 11:46:24.199 [main] SqlExceptionHelper - SQL Error: 1146, SQLState: 42S02
[ERROR] 2025-10-15 11:46:24.199 [main] SqlExceptionHelper - Table 'hungrybadger_test.photos' doesn't exist
[DEBUG] 2025-10-15 11:46:24.204 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2025-10-15 11:46:24.204 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 11:46:24.205 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 11:46:24.324 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2025-10-15 11:46:24.324 [main] results - Initializer list:
	  org.hungrybadger.entity.Review.photos -> DelayedCollectionInitializer(org.hungrybadger.entity.Review.photos)@1962297767 (PluralAttribute(org.hungrybadger.entity.Review.photos))
	  org.hungrybadger.entity.Review -> EntityResultInitializer(org.hungrybadger.entity.Review)@814507488 (SingleTableEntityPersister(org.hungrybadger.entity.Review))

[DEBUG] 2025-10-15 11:46:24.324 [main] SQL - select r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from review r1_0 where r1_0.id=?
[DEBUG] 2025-10-15 11:46:24.329 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review): 3
[DEBUG] 2025-10-15 11:46:24.329 [main] results - Extracted JDBC value [0] - [3]
[DEBUG] 2025-10-15 11:46:24.331 [main] collection - (DelayedCollectionInitializer) Current row collection key : org.hungrybadger.entity.Review.photos#3
[DEBUG] 2025-10-15 11:46:24.332 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Review#3] : 382992974
[DEBUG] 2025-10-15 11:46:24.339 [main] results - Extracted JDBC value [1] - [American]
[DEBUG] 2025-10-15 11:46:24.339 [main] results - Extracted JDBC value [2] - [Mac and Cheese Slice for the win!]
[DEBUG] 2025-10-15 11:46:24.339 [main] results - Extracted JDBC value [3] - [5]
[DEBUG] 2025-10-15 11:46:24.340 [main] results - Extracted JDBC value [4] - [Ians Pizza]
[DEBUG] 2025-10-15 11:46:24.345 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Review#3
[DEBUG] 2025-10-15 11:46:24.345 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@e2c627e
[DEBUG] 2025-10-15 11:46:24.346 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 11:46:24.481 [main] create - Created new SQL alias : p1_0
[DEBUG] 2025-10-15 11:46:24.481 [main] create - Registration of TableGroup [StandardTableGroup(org.hungrybadger.entity.Photo(12502342158200))] with identifierForTableGroup [org.hungrybadger.entity.Photo] for NavigablePath [org.hungrybadger.entity.Photo] 
[DEBUG] 2025-10-15 11:46:24.481 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7612116b] with identifierForTableGroup [org.hungrybadger.entity.Photo.review] for NavigablePath [org.hungrybadger.entity.Photo.review] 
[DEBUG] 2025-10-15 11:46:24.486 [main] BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2507a170
[DEBUG] 2025-10-15 11:46:24.486 [main] BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.hungrybadger.entity.Photo(12502342158200).imagePath) 
[DEBUG] 2025-10-15 11:46:24.489 [main] AST - DomainResult Graph:
 \-EntityResultImpl [org.hungrybadger.entity.Photo(12502342158200)]
 |  +-BasicFetch [org.hungrybadger.entity.Photo(12502342158200).imagePath]
 |  \-CircularFetchImpl [org.hungrybadger.entity.Photo(12502342158200).review]

[DEBUG] 2025-10-15 11:46:24.489 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.hungrybadger.entity.Photo(12502342158200)) {
          primaryTableReference : photos as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (r1 : org.hungrybadger.entity.Photo(12502342158200).review) {
            }
          }
        }
      }
    }

[DEBUG] 2025-10-15 11:46:24.490 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
[DEBUG] 2025-10-15 11:46:24.490 [main] results - Initializer list:
	  org.hungrybadger.entity.Photo(12502342158200) -> EntityResultInitializer(org.hungrybadger.entity.Photo(12502342158200))@959718932 (SingleTableEntityPersister(org.hungrybadger.entity.Photo))
	  org.hungrybadger.entity.Photo(12502342158200).review -> EntitySelectFetchInitializer(org.hungrybadger.entity.Photo(12502342158200).review)@2038535743 (ToOneAttributeMapping(NavigableRole[org.hungrybadger.entity.Photo.review])@1825112984)

[DEBUG] 2025-10-15 11:46:24.491 [main] SQL - select p1_0.id,p1_0.image_path,p1_0.review_id from photos p1_0 where p1_0.image_path like ? escape ''
[DEBUG] 2025-10-15 11:46:24.492 [main] SqlExceptionHelper - JDBC exception executing SQL [select p1_0.id,p1_0.image_path,p1_0.review_id from photos p1_0 where p1_0.image_path like ? escape ''] [n/a]
java.sql.SQLSyntaxErrorException: Table 'hungrybadger_test.photos' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:1005) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeQuery(NewProxyPreparedStatement.java:1471) ~[c3p0-0.9.5.5.jar:0.9.5.5]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:246) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:167) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.advanceNext(JdbcValuesResultSetImpl.java:218) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.processNext(JdbcValuesResultSetImpl.java:98) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.results.jdbc.internal.AbstractJdbcValues.next(AbstractJdbcValues.java:19) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.results.internal.RowProcessingStateStandardImpl.next(RowProcessingStateStandardImpl.java:66) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:202) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:33) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:209) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:83) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:76) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:65) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$2(ConcreteSqmSelectQueryPlan.java:137) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:362) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:303) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:509) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:427) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.query.Query.getResultList(Query.java:120) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hungrybadger.persistence.GenericDao.getByPropertyLike(GenericDao.java:155) ~[classes/:?]
	at org.hungrybadger.persistence.PhotoDaoTest.getByPropertyLike(PhotoDaoTest.java:83) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) ~[junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:167) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:163) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:110) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:66) [junit5-rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11) [idea_rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:231) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55) [junit-rt.jar:?]
[WARN ] 2025-10-15 11:46:24.493 [main] SqlExceptionHelper - SQL Error: 1146, SQLState: 42S02
[ERROR] 2025-10-15 11:46:24.493 [main] SqlExceptionHelper - Table 'hungrybadger_test.photos' doesn't exist
[DEBUG] 2025-10-15 11:46:24.493 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2025-10-15 11:46:24.493 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 11:46:24.493 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 11:46:24.601 [main] create - Created new SQL alias : p1_0
[DEBUG] 2025-10-15 11:46:24.601 [main] create - Registration of TableGroup [StandardTableGroup(org.hungrybadger.entity.Photo(12502473657800))] with identifierForTableGroup [org.hungrybadger.entity.Photo] for NavigablePath [org.hungrybadger.entity.Photo] 
[DEBUG] 2025-10-15 11:46:24.601 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@299786b1] with identifierForTableGroup [org.hungrybadger.entity.Photo.review] for NavigablePath [org.hungrybadger.entity.Photo.review] 
[DEBUG] 2025-10-15 11:46:24.602 [main] BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@11f9b95a
[DEBUG] 2025-10-15 11:46:24.602 [main] BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.hungrybadger.entity.Photo(12502473657800).imagePath) 
[DEBUG] 2025-10-15 11:46:24.603 [main] AST - DomainResult Graph:
 \-EntityResultImpl [org.hungrybadger.entity.Photo(12502473657800)]
 |  +-BasicFetch [org.hungrybadger.entity.Photo(12502473657800).imagePath]
 |  \-CircularFetchImpl [org.hungrybadger.entity.Photo(12502473657800).review]

[DEBUG] 2025-10-15 11:46:24.603 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.hungrybadger.entity.Photo(12502473657800)) {
          primaryTableReference : photos as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (r1 : org.hungrybadger.entity.Photo(12502473657800).review) {
            }
          }
        }
      }
    }

[DEBUG] 2025-10-15 11:46:24.603 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
[DEBUG] 2025-10-15 11:46:24.604 [main] results - Initializer list:
	  org.hungrybadger.entity.Photo(12502473657800) -> EntityResultInitializer(org.hungrybadger.entity.Photo(12502473657800))@700973385 (SingleTableEntityPersister(org.hungrybadger.entity.Photo))
	  org.hungrybadger.entity.Photo(12502473657800).review -> EntitySelectFetchInitializer(org.hungrybadger.entity.Photo(12502473657800).review)@1355074 (ToOneAttributeMapping(NavigableRole[org.hungrybadger.entity.Photo.review])@1825112984)

[DEBUG] 2025-10-15 11:46:24.604 [main] SQL - select p1_0.id,p1_0.image_path,p1_0.review_id from photos p1_0 where p1_0.image_path=?
[DEBUG] 2025-10-15 11:46:24.605 [main] SqlExceptionHelper - JDBC exception executing SQL [select p1_0.id,p1_0.image_path,p1_0.review_id from photos p1_0 where p1_0.image_path=?] [n/a]
java.sql.SQLSyntaxErrorException: Table 'hungrybadger_test.photos' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:1005) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeQuery(NewProxyPreparedStatement.java:1471) ~[c3p0-0.9.5.5.jar:0.9.5.5]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:246) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:167) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.advanceNext(JdbcValuesResultSetImpl.java:218) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.processNext(JdbcValuesResultSetImpl.java:98) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.results.jdbc.internal.AbstractJdbcValues.next(AbstractJdbcValues.java:19) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.results.internal.RowProcessingStateStandardImpl.next(RowProcessingStateStandardImpl.java:66) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:202) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:33) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:209) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:83) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:76) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:65) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$2(ConcreteSqmSelectQueryPlan.java:137) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:362) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:303) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:509) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:427) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.query.Query.getResultList(Query.java:120) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hungrybadger.persistence.GenericDao.getByPropertyEqual(GenericDao.java:131) ~[classes/:?]
	at org.hungrybadger.persistence.PhotoDaoTest.getByPropertyEqual(PhotoDaoTest.java:76) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) ~[junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:167) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:163) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:110) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:66) [junit5-rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11) [idea_rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:231) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55) [junit-rt.jar:?]
[WARN ] 2025-10-15 11:46:24.606 [main] SqlExceptionHelper - SQL Error: 1146, SQLState: 42S02
[ERROR] 2025-10-15 11:46:24.606 [main] SqlExceptionHelper - Table 'hungrybadger_test.photos' doesn't exist
[DEBUG] 2025-10-15 11:46:24.606 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2025-10-15 11:46:24.606 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 11:46:24.606 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 11:46:24.704 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2025-10-15 11:46:24.704 [main] results - Initializer list:
	  org.hungrybadger.entity.Photo.review -> EntityJoinedFetchInitializer(org.hungrybadger.entity.Photo.review)@1018262491 (ToOneAttributeMapping(NavigableRole[org.hungrybadger.entity.Photo.review])@1825112984)
	  org.hungrybadger.entity.Photo.review.photos -> DelayedCollectionInitializer(org.hungrybadger.entity.Photo.review.photos)@644950072 (PluralAttribute(org.hungrybadger.entity.Review.photos))
	  org.hungrybadger.entity.Photo -> EntityResultInitializer(org.hungrybadger.entity.Photo)@614090237 (SingleTableEntityPersister(org.hungrybadger.entity.Photo))

[DEBUG] 2025-10-15 11:46:24.704 [main] SQL - select p1_0.id,p1_0.image_path,p1_0.review_id,r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from photos p1_0 join review r1_0 on r1_0.id=p1_0.review_id where p1_0.id=?
[DEBUG] 2025-10-15 11:46:24.706 [main] SqlExceptionHelper - JDBC exception executing SQL [select p1_0.id,p1_0.image_path,p1_0.review_id,r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from photos p1_0 join review r1_0 on r1_0.id=p1_0.review_id where p1_0.id=?] [n/a]
java.sql.SQLSyntaxErrorException: Table 'hungrybadger_test.photos' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:1005) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeQuery(NewProxyPreparedStatement.java:1471) ~[c3p0-0.9.5.5.jar:0.9.5.5]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:246) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:167) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.advanceNext(JdbcValuesResultSetImpl.java:218) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.processNext(JdbcValuesResultSetImpl.java:98) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.results.jdbc.internal.AbstractJdbcValues.next(AbstractJdbcValues.java:19) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.results.internal.RowProcessingStateStandardImpl.next(RowProcessingStateStandardImpl.java:66) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:180) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:33) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:209) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:83) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:76) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:65) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.loader.ast.internal.SingleIdLoadPlan.load(SingleIdLoadPlan.java:145) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.loader.ast.internal.SingleIdLoadPlan.load(SingleIdLoadPlan.java:117) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.loader.ast.internal.SingleIdEntityLoaderStandardImpl.load(SingleIdEntityLoaderStandardImpl.java:75) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.doLoad(AbstractEntityPersister.java:3748) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.load(AbstractEntityPersister.java:3737) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.loadFromDatasource(DefaultLoadEventListener.java:604) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.loadFromCacheOrDatasource(DefaultLoadEventListener.java:590) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.load(DefaultLoadEventListener.java:560) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.doLoad(DefaultLoadEventListener.java:544) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.load(DefaultLoadEventListener.java:207) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.loadWithRegularProxy(DefaultLoadEventListener.java:290) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.proxyOrLoad(DefaultLoadEventListener.java:242) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.doOnLoad(DefaultLoadEventListener.java:111) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.onLoad(DefaultLoadEventListener.java:68) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:138) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.internal.SessionImpl.fireLoadNoChecks(SessionImpl.java:1222) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.internal.SessionImpl.fireLoad(SessionImpl.java:1210) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.loader.internal.IdentifierLoadAccessImpl.load(IdentifierLoadAccessImpl.java:209) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.loader.internal.IdentifierLoadAccessImpl.doLoad(IdentifierLoadAccessImpl.java:160) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.loader.internal.IdentifierLoadAccessImpl.lambda$load$1(IdentifierLoadAccessImpl.java:149) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.loader.internal.IdentifierLoadAccessImpl.perform(IdentifierLoadAccessImpl.java:112) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.loader.internal.IdentifierLoadAccessImpl.load(IdentifierLoadAccessImpl.java:149) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.internal.SessionImpl.get(SessionImpl.java:1018) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hungrybadger.persistence.GenericDao.getById(GenericDao.java:41) ~[classes/:?]
	at org.hungrybadger.persistence.PhotoDaoTest.getByIdSuccess(PhotoDaoTest.java:31) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) ~[junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:167) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:163) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:110) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:66) [junit5-rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11) [idea_rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:231) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55) [junit-rt.jar:?]
[WARN ] 2025-10-15 11:46:24.707 [main] SqlExceptionHelper - SQL Error: 1146, SQLState: 42S02
[ERROR] 2025-10-15 11:46:24.707 [main] SqlExceptionHelper - Table 'hungrybadger_test.photos' doesn't exist
[INFO ] 2025-10-15 11:46:24.707 [main] DefaultLoadEventListener - HHH000327: Error performing load command
org.hibernate.exception.SQLGrammarException: JDBC exception executing SQL [select p1_0.id,p1_0.image_path,p1_0.review_id,r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from photos p1_0 join review r1_0 on r1_0.id=p1_0.review_id where p1_0.id=?] [Table 'hungrybadger_test.photos' doesn't exist] [n/a]
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:66) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:265) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:167) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.advanceNext(JdbcValuesResultSetImpl.java:218) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.processNext(JdbcValuesResultSetImpl.java:98) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.results.jdbc.internal.AbstractJdbcValues.next(AbstractJdbcValues.java:19) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.results.internal.RowProcessingStateStandardImpl.next(RowProcessingStateStandardImpl.java:66) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:180) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:33) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:209) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:83) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:76) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:65) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.loader.ast.internal.SingleIdLoadPlan.load(SingleIdLoadPlan.java:145) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.loader.ast.internal.SingleIdLoadPlan.load(SingleIdLoadPlan.java:117) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.loader.ast.internal.SingleIdEntityLoaderStandardImpl.load(SingleIdEntityLoaderStandardImpl.java:75) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.doLoad(AbstractEntityPersister.java:3748) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.load(AbstractEntityPersister.java:3737) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.loadFromDatasource(DefaultLoadEventListener.java:604) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.loadFromCacheOrDatasource(DefaultLoadEventListener.java:590) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.load(DefaultLoadEventListener.java:560) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.doLoad(DefaultLoadEventListener.java:544) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.load(DefaultLoadEventListener.java:207) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.loadWithRegularProxy(DefaultLoadEventListener.java:290) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.proxyOrLoad(DefaultLoadEventListener.java:242) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.doOnLoad(DefaultLoadEventListener.java:111) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.onLoad(DefaultLoadEventListener.java:68) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:138) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.internal.SessionImpl.fireLoadNoChecks(SessionImpl.java:1222) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.internal.SessionImpl.fireLoad(SessionImpl.java:1210) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.loader.internal.IdentifierLoadAccessImpl.load(IdentifierLoadAccessImpl.java:209) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.loader.internal.IdentifierLoadAccessImpl.doLoad(IdentifierLoadAccessImpl.java:160) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.loader.internal.IdentifierLoadAccessImpl.lambda$load$1(IdentifierLoadAccessImpl.java:149) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.loader.internal.IdentifierLoadAccessImpl.perform(IdentifierLoadAccessImpl.java:112) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.loader.internal.IdentifierLoadAccessImpl.load(IdentifierLoadAccessImpl.java:149) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.internal.SessionImpl.get(SessionImpl.java:1018) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hungrybadger.persistence.GenericDao.getById(GenericDao.java:41) ~[classes/:?]
	at org.hungrybadger.persistence.PhotoDaoTest.getByIdSuccess(PhotoDaoTest.java:31) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) ~[junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:167) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:163) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:110) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:66) [junit5-rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11) [idea_rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:231) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55) [junit-rt.jar:?]
Caused by: java.sql.SQLSyntaxErrorException: Table 'hungrybadger_test.photos' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:1005) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeQuery(NewProxyPreparedStatement.java:1471) ~[c3p0-0.9.5.5.jar:0.9.5.5]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:246) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	... 89 more
[DEBUG] 2025-10-15 11:46:24.707 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 11:46:24.817 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2025-10-15 11:46:24.817 [main] results - Initializer list:
	  org.hungrybadger.entity.Photo.review -> EntityJoinedFetchInitializer(org.hungrybadger.entity.Photo.review)@1433690944 (ToOneAttributeMapping(NavigableRole[org.hungrybadger.entity.Photo.review])@1825112984)
	  org.hungrybadger.entity.Photo.review.photos -> DelayedCollectionInitializer(org.hungrybadger.entity.Photo.review.photos)@1779202806 (PluralAttribute(org.hungrybadger.entity.Review.photos))
	  org.hungrybadger.entity.Photo -> EntityResultInitializer(org.hungrybadger.entity.Photo)@2132465734 (SingleTableEntityPersister(org.hungrybadger.entity.Photo))

[DEBUG] 2025-10-15 11:46:24.817 [main] SQL - select p1_0.id,p1_0.image_path,p1_0.review_id,r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from photos p1_0 join review r1_0 on r1_0.id=p1_0.review_id where p1_0.id=?
[DEBUG] 2025-10-15 11:46:24.818 [main] SqlExceptionHelper - JDBC exception executing SQL [select p1_0.id,p1_0.image_path,p1_0.review_id,r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from photos p1_0 join review r1_0 on r1_0.id=p1_0.review_id where p1_0.id=?] [n/a]
java.sql.SQLSyntaxErrorException: Table 'hungrybadger_test.photos' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:1005) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeQuery(NewProxyPreparedStatement.java:1471) ~[c3p0-0.9.5.5.jar:0.9.5.5]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:246) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:167) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.advanceNext(JdbcValuesResultSetImpl.java:218) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.processNext(JdbcValuesResultSetImpl.java:98) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.results.jdbc.internal.AbstractJdbcValues.next(AbstractJdbcValues.java:19) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.results.internal.RowProcessingStateStandardImpl.next(RowProcessingStateStandardImpl.java:66) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:180) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:33) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:209) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:83) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:76) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:65) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.loader.ast.internal.SingleIdLoadPlan.load(SingleIdLoadPlan.java:145) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.loader.ast.internal.SingleIdLoadPlan.load(SingleIdLoadPlan.java:117) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.loader.ast.internal.SingleIdEntityLoaderStandardImpl.load(SingleIdEntityLoaderStandardImpl.java:75) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.doLoad(AbstractEntityPersister.java:3748) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.load(AbstractEntityPersister.java:3737) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.loadFromDatasource(DefaultLoadEventListener.java:604) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.loadFromCacheOrDatasource(DefaultLoadEventListener.java:590) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.load(DefaultLoadEventListener.java:560) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.doLoad(DefaultLoadEventListener.java:544) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.load(DefaultLoadEventListener.java:207) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.loadWithRegularProxy(DefaultLoadEventListener.java:290) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.proxyOrLoad(DefaultLoadEventListener.java:242) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.doOnLoad(DefaultLoadEventListener.java:111) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.onLoad(DefaultLoadEventListener.java:68) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:138) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.internal.SessionImpl.fireLoadNoChecks(SessionImpl.java:1222) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.internal.SessionImpl.fireLoad(SessionImpl.java:1210) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.loader.internal.IdentifierLoadAccessImpl.load(IdentifierLoadAccessImpl.java:209) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.loader.internal.IdentifierLoadAccessImpl.doLoad(IdentifierLoadAccessImpl.java:160) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.loader.internal.IdentifierLoadAccessImpl.lambda$load$1(IdentifierLoadAccessImpl.java:149) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.loader.internal.IdentifierLoadAccessImpl.perform(IdentifierLoadAccessImpl.java:112) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.loader.internal.IdentifierLoadAccessImpl.load(IdentifierLoadAccessImpl.java:149) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.internal.SessionImpl.get(SessionImpl.java:1018) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hungrybadger.persistence.GenericDao.getById(GenericDao.java:41) ~[classes/:?]
	at org.hungrybadger.persistence.PhotoDaoTest.updateSuccess(PhotoDaoTest.java:38) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) ~[junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:167) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:163) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:110) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:66) [junit5-rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11) [idea_rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:231) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55) [junit-rt.jar:?]
[WARN ] 2025-10-15 11:46:24.819 [main] SqlExceptionHelper - SQL Error: 1146, SQLState: 42S02
[ERROR] 2025-10-15 11:46:24.819 [main] SqlExceptionHelper - Table 'hungrybadger_test.photos' doesn't exist
[INFO ] 2025-10-15 11:46:24.819 [main] DefaultLoadEventListener - HHH000327: Error performing load command
org.hibernate.exception.SQLGrammarException: JDBC exception executing SQL [select p1_0.id,p1_0.image_path,p1_0.review_id,r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from photos p1_0 join review r1_0 on r1_0.id=p1_0.review_id where p1_0.id=?] [Table 'hungrybadger_test.photos' doesn't exist] [n/a]
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:66) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:265) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:167) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.advanceNext(JdbcValuesResultSetImpl.java:218) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.processNext(JdbcValuesResultSetImpl.java:98) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.results.jdbc.internal.AbstractJdbcValues.next(AbstractJdbcValues.java:19) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.results.internal.RowProcessingStateStandardImpl.next(RowProcessingStateStandardImpl.java:66) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:180) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:33) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:209) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:83) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:76) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:65) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.loader.ast.internal.SingleIdLoadPlan.load(SingleIdLoadPlan.java:145) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.loader.ast.internal.SingleIdLoadPlan.load(SingleIdLoadPlan.java:117) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.loader.ast.internal.SingleIdEntityLoaderStandardImpl.load(SingleIdEntityLoaderStandardImpl.java:75) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.doLoad(AbstractEntityPersister.java:3748) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.load(AbstractEntityPersister.java:3737) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.loadFromDatasource(DefaultLoadEventListener.java:604) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.loadFromCacheOrDatasource(DefaultLoadEventListener.java:590) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.load(DefaultLoadEventListener.java:560) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.doLoad(DefaultLoadEventListener.java:544) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.load(DefaultLoadEventListener.java:207) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.loadWithRegularProxy(DefaultLoadEventListener.java:290) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.proxyOrLoad(DefaultLoadEventListener.java:242) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.doOnLoad(DefaultLoadEventListener.java:111) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.onLoad(DefaultLoadEventListener.java:68) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:138) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.internal.SessionImpl.fireLoadNoChecks(SessionImpl.java:1222) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.internal.SessionImpl.fireLoad(SessionImpl.java:1210) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.loader.internal.IdentifierLoadAccessImpl.load(IdentifierLoadAccessImpl.java:209) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.loader.internal.IdentifierLoadAccessImpl.doLoad(IdentifierLoadAccessImpl.java:160) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.loader.internal.IdentifierLoadAccessImpl.lambda$load$1(IdentifierLoadAccessImpl.java:149) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.loader.internal.IdentifierLoadAccessImpl.perform(IdentifierLoadAccessImpl.java:112) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.loader.internal.IdentifierLoadAccessImpl.load(IdentifierLoadAccessImpl.java:149) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.internal.SessionImpl.get(SessionImpl.java:1018) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hungrybadger.persistence.GenericDao.getById(GenericDao.java:41) ~[classes/:?]
	at org.hungrybadger.persistence.PhotoDaoTest.updateSuccess(PhotoDaoTest.java:38) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) ~[junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:167) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:163) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:110) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:66) [junit5-rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11) [idea_rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:231) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55) [junit-rt.jar:?]
Caused by: java.sql.SQLSyntaxErrorException: Table 'hungrybadger_test.photos' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:1005) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeQuery(NewProxyPreparedStatement.java:1471) ~[c3p0-0.9.5.5.jar:0.9.5.5]
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:246) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	... 89 more
[DEBUG] 2025-10-15 11:46:24.820 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 11:46:24.927 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2025-10-15 11:46:24.927 [main] results - Initializer list:
	  org.hungrybadger.entity.Review.photos -> DelayedCollectionInitializer(org.hungrybadger.entity.Review.photos)@1487465071 (PluralAttribute(org.hungrybadger.entity.Review.photos))
	  org.hungrybadger.entity.Review -> EntityResultInitializer(org.hungrybadger.entity.Review)@778778524 (SingleTableEntityPersister(org.hungrybadger.entity.Review))

[DEBUG] 2025-10-15 11:46:24.928 [main] SQL - select r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from review r1_0 where r1_0.id=?
[DEBUG] 2025-10-15 11:46:24.930 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review): 1
[DEBUG] 2025-10-15 11:46:24.930 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2025-10-15 11:46:24.930 [main] collection - (DelayedCollectionInitializer) Current row collection key : org.hungrybadger.entity.Review.photos#1
[DEBUG] 2025-10-15 11:46:24.930 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Review#1] : 1723076051
[DEBUG] 2025-10-15 11:46:24.930 [main] results - Extracted JDBC value [1] - [Japanese]
[DEBUG] 2025-10-15 11:46:24.930 [main] results - Extracted JDBC value [2] - [Good cheap rolls. Togo or sit down are both great]
[DEBUG] 2025-10-15 11:46:24.930 [main] results - Extracted JDBC value [3] - [5]
[DEBUG] 2025-10-15 11:46:24.930 [main] results - Extracted JDBC value [4] - [Sushi Express]
[DEBUG] 2025-10-15 11:46:24.930 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Review#1
[DEBUG] 2025-10-15 11:46:24.931 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4a5066f5
[DEBUG] 2025-10-15 11:46:24.931 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 11:46:24.933 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2025-10-15 11:46:24.934 [main] TransactionImpl - begin
[DEBUG] 2025-10-15 11:46:24.941 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2025-10-15 11:46:24.947 [main] SQL - insert into photos (image_path,review_id) values (?,?)
[DEBUG] 2025-10-15 11:46:24.951 [main] SqlExceptionHelper - could not execute statement [insert into photos (image_path,review_id) values (?,?)]
java.sql.SQLSyntaxErrorException: Table 'hungrybadger_test.photos' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1094) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1042) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1345) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:1027) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeUpdate(NewProxyPreparedStatement.java:1502) ~[c3p0-0.9.5.5.jar:0.9.5.5]
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:194) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.id.insert.GetGeneratedKeysDelegate.performInsert(GetGeneratedKeysDelegate.java:107) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorPostInsertSingleTable.execute(MutationExecutorPostInsertSingleTable.java:100) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.persister.entity.mutation.InsertCoordinator.doStaticInserts(InsertCoordinator.java:175) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.persister.entity.mutation.InsertCoordinator.coordinateInsert(InsertCoordinator.java:113) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:2868) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:81) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:670) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:291) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:272) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:322) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:386) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:300) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:219) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:175) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:93) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:54) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:754) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:738) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hungrybadger.persistence.GenericDao.insert(GenericDao.java:68) ~[classes/:?]
	at org.hungrybadger.persistence.PhotoDaoTest.insertSuccess(PhotoDaoTest.java:52) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) ~[junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:167) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:163) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:110) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:66) [junit5-rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11) [idea_rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:231) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55) [junit-rt.jar:?]
[WARN ] 2025-10-15 11:46:24.952 [main] SqlExceptionHelper - SQL Error: 1146, SQLState: 42S02
[ERROR] 2025-10-15 11:46:24.952 [main] SqlExceptionHelper - Table 'hungrybadger_test.photos' doesn't exist
[DEBUG] 2025-10-15 11:46:24.952 [main] JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:310) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.engine.transaction.internal.TransactionImpl.markRollbackOnly(TransactionImpl.java:203) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.markForRollbackOnly(AbstractSharedSessionContract.java:500) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.internal.ExceptionConverterImpl.rollbackIfNecessary(ExceptionConverterImpl.java:264) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:160) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:167) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:173) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:760) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:738) ~[hibernate-core-6.4.3.Final.jar:6.4.3.Final]
	at org.hungrybadger.persistence.GenericDao.insert(GenericDao.java:68) ~[classes/:?]
	at org.hungrybadger.persistence.PhotoDaoTest.insertSuccess(PhotoDaoTest.java:52) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) ~[junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:167) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:163) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:110) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:66) [junit5-rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11) [idea_rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:231) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55) [junit-rt.jar:?]
[DEBUG] 2025-10-15 11:47:21.821 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2025-10-15 11:47:21.831 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2025-10-15 11:47:21.871 [main] Version - HHH000412: Hibernate ORM core version 6.4.3.Final
[DEBUG] 2025-10-15 11:47:21.874 [main] Environment - HHH000206: 'hibernate.properties' not found
[DEBUG] 2025-10-15 11:47:21.937 [main] LocalXmlResourceResolver - Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
[DEBUG] 2025-10-15 11:47:21.945 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2025-10-15 11:47:22.189 [main] factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2025-10-15 11:47:22.194 [main] factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2025-10-15 11:47:22.195 [main] factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2025-10-15 11:47:22.195 [main] factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2025-10-15 11:47:22.195 [main] factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2025-10-15 11:47:22.196 [main] factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2025-10-15 11:47:22.197 [main] factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2025-10-15 11:47:22.197 [main] factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2025-10-15 11:47:22.199 [main] factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2025-10-15 11:47:22.199 [main] factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2025-10-15 11:47:22.200 [main] factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2025-10-15 11:47:22.200 [main] factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2025-10-15 11:47:22.201 [main] factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2025-10-15 11:47:22.210 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[INFO ] 2025-10-15 11:47:22.211 [main] RegionFactoryInitiator - HHH000026: Second-level cache disabled
[DEBUG] 2025-10-15 11:47:22.335 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@19f7222e
[DEBUG] 2025-10-15 11:47:22.335 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@19f7222e
[DEBUG] 2025-10-15 11:47:22.336 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@19f7222e
[DEBUG] 2025-10-15 11:47:22.336 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3f725306
[DEBUG] 2025-10-15 11:47:22.336 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3f725306
[DEBUG] 2025-10-15 11:47:22.336 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3c69362a
[DEBUG] 2025-10-15 11:47:22.336 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3c69362a
[DEBUG] 2025-10-15 11:47:22.336 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@2412a42b
[DEBUG] 2025-10-15 11:47:22.336 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@2412a42b
[DEBUG] 2025-10-15 11:47:22.336 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@45404d5
[DEBUG] 2025-10-15 11:47:22.336 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@45404d5
[DEBUG] 2025-10-15 11:47:22.336 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@45404d5
[DEBUG] 2025-10-15 11:47:22.336 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@29138d3a
[DEBUG] 2025-10-15 11:47:22.336 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@29138d3a
[DEBUG] 2025-10-15 11:47:22.337 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@29138d3a
[DEBUG] 2025-10-15 11:47:22.337 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@5cbe2654
[DEBUG] 2025-10-15 11:47:22.337 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@5cbe2654
[DEBUG] 2025-10-15 11:47:22.337 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@6dbcf214
[DEBUG] 2025-10-15 11:47:22.337 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@496a31da
[DEBUG] 2025-10-15 11:47:22.337 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@496a31da
[DEBUG] 2025-10-15 11:47:22.337 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@7c251f90
[DEBUG] 2025-10-15 11:47:22.337 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@51841ac6
[DEBUG] 2025-10-15 11:47:22.337 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@5ba26eb0
[DEBUG] 2025-10-15 11:47:22.337 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@5ba26eb0
[DEBUG] 2025-10-15 11:47:22.337 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@5ba26eb0
[DEBUG] 2025-10-15 11:47:22.337 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@435e60ff
[DEBUG] 2025-10-15 11:47:22.337 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@435e60ff
[DEBUG] 2025-10-15 11:47:22.337 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@435e60ff
[DEBUG] 2025-10-15 11:47:22.338 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@17d32e9b
[DEBUG] 2025-10-15 11:47:22.338 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@17d32e9b
[DEBUG] 2025-10-15 11:47:22.338 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@17d32e9b
[DEBUG] 2025-10-15 11:47:22.338 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@66f0548d
[DEBUG] 2025-10-15 11:47:22.338 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@66f0548d
[DEBUG] 2025-10-15 11:47:22.338 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@66f0548d
[DEBUG] 2025-10-15 11:47:22.338 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@2e6f610d
[DEBUG] 2025-10-15 11:47:22.338 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@2e6f610d
[DEBUG] 2025-10-15 11:47:22.338 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@2e6f610d
[DEBUG] 2025-10-15 11:47:22.338 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@1e86a5a7
[DEBUG] 2025-10-15 11:47:22.338 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@1e86a5a7
[DEBUG] 2025-10-15 11:47:22.338 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@10afe71a
[DEBUG] 2025-10-15 11:47:22.339 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@10afe71a
[DEBUG] 2025-10-15 11:47:22.339 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@741f8dbe
[DEBUG] 2025-10-15 11:47:22.339 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@741f8dbe
[DEBUG] 2025-10-15 11:47:22.339 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@741f8dbe
[DEBUG] 2025-10-15 11:47:22.339 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@212dfd39
[DEBUG] 2025-10-15 11:47:22.339 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@a2ddf26
[DEBUG] 2025-10-15 11:47:22.339 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@a2ddf26
[DEBUG] 2025-10-15 11:47:22.339 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@65d57e4e
[DEBUG] 2025-10-15 11:47:22.339 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@6daf7d37
[DEBUG] 2025-10-15 11:47:22.339 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@6daf7d37
[DEBUG] 2025-10-15 11:47:22.339 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@6daf7d37
[DEBUG] 2025-10-15 11:47:22.340 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@23a5818e
[DEBUG] 2025-10-15 11:47:22.340 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@4715ae33
[DEBUG] 2025-10-15 11:47:22.340 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@9fc9f91
[DEBUG] 2025-10-15 11:47:22.340 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@1fac1d5c
[DEBUG] 2025-10-15 11:47:22.340 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@1fac1d5c
[DEBUG] 2025-10-15 11:47:22.340 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@108a46d6
[DEBUG] 2025-10-15 11:47:22.340 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@108a46d6
[DEBUG] 2025-10-15 11:47:22.340 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@7a8406c2
[DEBUG] 2025-10-15 11:47:22.340 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@17690e14
[DEBUG] 2025-10-15 11:47:22.340 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6850b758
[DEBUG] 2025-10-15 11:47:22.340 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@2a2ef072
[DEBUG] 2025-10-15 11:47:22.340 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@704641e3
[DEBUG] 2025-10-15 11:47:22.340 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@2f00f851
[DEBUG] 2025-10-15 11:47:22.340 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@4207609e
[DEBUG] 2025-10-15 11:47:22.341 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@4207609e
[DEBUG] 2025-10-15 11:47:22.341 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@1f77b5cc
[DEBUG] 2025-10-15 11:47:22.341 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@1f77b5cc
[DEBUG] 2025-10-15 11:47:22.341 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@5d7ca698
[DEBUG] 2025-10-15 11:47:22.341 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@5d7ca698
[DEBUG] 2025-10-15 11:47:22.341 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@75961f16
[DEBUG] 2025-10-15 11:47:22.341 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@75961f16
[DEBUG] 2025-10-15 11:47:22.341 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@c6c82aa
[DEBUG] 2025-10-15 11:47:22.341 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@c6c82aa
[DEBUG] 2025-10-15 11:47:22.341 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2e179f3e
[DEBUG] 2025-10-15 11:47:22.341 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@16e7b402
[DEBUG] 2025-10-15 11:47:22.341 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@534c6767
[DEBUG] 2025-10-15 11:47:22.341 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@534c6767
[DEBUG] 2025-10-15 11:47:22.341 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@3bddc676
[DEBUG] 2025-10-15 11:47:22.342 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@29a1505c
[DEBUG] 2025-10-15 11:47:22.342 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@24db6ce
[DEBUG] 2025-10-15 11:47:22.342 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@320a8ebf
[DEBUG] 2025-10-15 11:47:22.342 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@320a8ebf
[DEBUG] 2025-10-15 11:47:22.342 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@67b100fe
[DEBUG] 2025-10-15 11:47:22.342 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@44b18fe4
[DEBUG] 2025-10-15 11:47:22.342 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@2ba5aa7a
[DEBUG] 2025-10-15 11:47:22.342 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@2ba5aa7a
[DEBUG] 2025-10-15 11:47:22.342 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@4d3ca6c7
[DEBUG] 2025-10-15 11:47:22.342 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@4d3ca6c7
[DEBUG] 2025-10-15 11:47:22.342 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@22e5f96e
[DEBUG] 2025-10-15 11:47:22.342 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@22e5f96e
[DEBUG] 2025-10-15 11:47:22.342 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@22e5f96e
[DEBUG] 2025-10-15 11:47:22.342 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@6a638c79
[DEBUG] 2025-10-15 11:47:22.343 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@6a638c79
[DEBUG] 2025-10-15 11:47:22.343 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@6a638c79
[DEBUG] 2025-10-15 11:47:22.343 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@6c931d35
[DEBUG] 2025-10-15 11:47:22.343 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@44b194fe
[DEBUG] 2025-10-15 11:47:22.343 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@49122b8f
[DEBUG] 2025-10-15 11:47:22.343 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@49122b8f
[DEBUG] 2025-10-15 11:47:22.343 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@3fe46690
[DEBUG] 2025-10-15 11:47:22.343 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@3fe46690
[DEBUG] 2025-10-15 11:47:22.343 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@3fe46690
[DEBUG] 2025-10-15 11:47:22.343 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4beabeec
[DEBUG] 2025-10-15 11:47:22.343 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@3b4d50b
[DEBUG] 2025-10-15 11:47:22.343 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@5b22d8a1
[DEBUG] 2025-10-15 11:47:22.343 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@5b22d8a1
[DEBUG] 2025-10-15 11:47:22.343 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@476ee5b3
[DEBUG] 2025-10-15 11:47:22.344 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@476ee5b3
[DEBUG] 2025-10-15 11:47:22.344 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@476ee5b3
[DEBUG] 2025-10-15 11:47:22.344 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@59ed3e6c
[DEBUG] 2025-10-15 11:47:22.344 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@59ed3e6c
[DEBUG] 2025-10-15 11:47:22.344 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@7cd4a4d7
[DEBUG] 2025-10-15 11:47:22.344 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@7cd4a4d7
[DEBUG] 2025-10-15 11:47:22.344 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@317e9c3c
[DEBUG] 2025-10-15 11:47:22.344 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@317e9c3c
[DEBUG] 2025-10-15 11:47:22.344 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@18da4dd
[DEBUG] 2025-10-15 11:47:22.345 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@18da4dd
[DEBUG] 2025-10-15 11:47:22.345 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@31a3f4de
[DEBUG] 2025-10-15 11:47:22.345 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@31a3f4de
[DEBUG] 2025-10-15 11:47:22.345 [main] BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@68880c21
[DEBUG] 2025-10-15 11:47:22.345 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@2dd2e270
[DEBUG] 2025-10-15 11:47:22.351 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@35267fd4
[DEBUG] 2025-10-15 11:47:22.351 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@35267fd4
[DEBUG] 2025-10-15 11:47:22.352 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@4e08acf9
[DEBUG] 2025-10-15 11:47:22.353 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@42ea287
[DEBUG] 2025-10-15 11:47:22.353 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@78cd163b
[DEBUG] 2025-10-15 11:47:22.353 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@1f0b3cfe
[DEBUG] 2025-10-15 11:47:22.353 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@14ef2482
[DEBUG] 2025-10-15 11:47:22.353 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@65a48602
[DEBUG] 2025-10-15 11:47:22.353 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@75483843
[DEBUG] 2025-10-15 11:47:22.353 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@336206d8
[DEBUG] 2025-10-15 11:47:22.353 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@5ec4ff02
[INFO ] 2025-10-15 11:47:22.391 [main] c3p0 - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3307/hungryBadger_test
[INFO ] 2025-10-15 11:47:22.392 [main] c3p0 - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2025-10-15 11:47:22.392 [main] c3p0 - HHH10001003: Autocommit mode: false
[INFO ] 2025-10-15 11:47:22.510 [main] c3p0 - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2025-10-15 11:47:22.615 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 9.4.0
      major : 9
      minor : 4
[DEBUG] 2025-10-15 11:47:22.615 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2025-10-15 11:47:22.615 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[DEBUG] 2025-10-15 11:47:22.687 [main] dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 9.4
[DEBUG] 2025-10-15 11:47:22.700 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2025-10-15 11:47:22.700 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2025-10-15 11:47:22.721 [main] DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@17410c07) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6ee99964)
[DEBUG] 2025-10-15 11:47:22.721 [main] DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@257ef9ed) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@59c70ceb)
[DEBUG] 2025-10-15 11:47:22.721 [main] DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@46f902e0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@64f981e2)
[DEBUG] 2025-10-15 11:47:22.721 [main] DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@361abd01) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@575b5f7d)
[DEBUG] 2025-10-15 11:47:22.721 [main] DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@59bbb974) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7165d530)
[DEBUG] 2025-10-15 11:47:22.721 [main] DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@12f49ca8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1fd9893c)
[DEBUG] 2025-10-15 11:47:22.721 [main] DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1b2df3aa) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@44be69aa)
[DEBUG] 2025-10-15 11:47:22.721 [main] DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7219ac49) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@21da4b5f)
[DEBUG] 2025-10-15 11:47:22.721 [main] DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@551e4c6d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@625a9c5d)
[DEBUG] 2025-10-15 11:47:22.723 [main] JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2025-10-15 11:47:22.723 [main] JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2025-10-15 11:47:22.724 [main] JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2025-10-15 11:47:22.727 [main] JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2025-10-15 11:47:22.727 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2025-10-15 11:47:22.731 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@57c00115
[DEBUG] 2025-10-15 11:47:22.732 [main] BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@4e08acf9`
[DEBUG] 2025-10-15 11:47:22.740 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
[DEBUG] 2025-10-15 11:47:22.740 [main] BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2025-10-15 11:47:22.740 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2025-10-15 11:47:22.745 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2025-10-15 11:47:22.745 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2025-10-15 11:47:22.745 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2025-10-15 11:47:22.745 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2025-10-15 11:47:22.745 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2025-10-15 11:47:22.745 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2025-10-15 11:47:22.747 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2025-10-15 11:47:22.747 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2025-10-15 11:47:22.747 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2025-10-15 11:47:22.749 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7377781e] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@31db34da]
[DEBUG] 2025-10-15 11:47:22.804 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2025-10-15 11:47:22.835 [main] EntityBinder - Binding entity from annotated class: org.hungrybadger.entity.Review
[DEBUG] 2025-10-15 11:47:22.846 [main] EntityBinder - Import with entity name Review
[DEBUG] 2025-10-15 11:47:22.854 [main] EntityBinder - Bind entity org.hungrybadger.entity.Review on table review
[DEBUG] 2025-10-15 11:47:22.865 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2025-10-15 11:47:22.889 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2025-10-15 11:47:22.890 [main] ClassLoaderAccessImpl - Not known whether passed class name [org.hungrybadger.entity.Review] is safe
[DEBUG] 2025-10-15 11:47:22.890 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.hungrybadger.entity.Review
[DEBUG] 2025-10-15 11:47:22.893 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2025-10-15 11:47:22.898 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.hungrybadger.entity.Review:id]
[DEBUG] 2025-10-15 11:47:22.903 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2025-10-15 11:47:22.907 [main] BasicValue - Skipping column re-registration: review.id
[DEBUG] 2025-10-15 11:47:22.908 [main] PropertyBinder - Building property id
[DEBUG] 2025-10-15 11:47:22.913 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2025-10-15 11:47:22.918 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='cuisine_type')
[DEBUG] 2025-10-15 11:47:22.918 [main] PropertyBinder - MetadataSourceProcessor property cuisineType with lazy=false
[DEBUG] 2025-10-15 11:47:22.918 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.hungrybadger.entity.Review:cuisineType]
[DEBUG] 2025-10-15 11:47:22.918 [main] BasicValueBinder - building BasicValue for cuisineType
[DEBUG] 2025-10-15 11:47:22.918 [main] BasicValue - Skipping column re-registration: review.cuisine_type
[DEBUG] 2025-10-15 11:47:22.918 [main] PropertyBinder - Building property cuisineType
[DEBUG] 2025-10-15 11:47:22.919 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='personal_notes')
[DEBUG] 2025-10-15 11:47:22.919 [main] PropertyBinder - MetadataSourceProcessor property personalNotes with lazy=false
[DEBUG] 2025-10-15 11:47:22.919 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.hungrybadger.entity.Review:personalNotes]
[DEBUG] 2025-10-15 11:47:22.919 [main] BasicValueBinder - building BasicValue for personalNotes
[DEBUG] 2025-10-15 11:47:22.919 [main] BasicValue - Skipping column re-registration: review.personal_notes
[DEBUG] 2025-10-15 11:47:22.919 [main] PropertyBinder - Building property personalNotes
[DEBUG] 2025-10-15 11:47:22.919 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='personal_rating')
[DEBUG] 2025-10-15 11:47:22.919 [main] PropertyBinder - MetadataSourceProcessor property personalRating with lazy=false
[DEBUG] 2025-10-15 11:47:22.920 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.hungrybadger.entity.Review:personalRating]
[DEBUG] 2025-10-15 11:47:22.920 [main] BasicValueBinder - building BasicValue for personalRating
[DEBUG] 2025-10-15 11:47:22.920 [main] BasicValue - Skipping column re-registration: review.personal_rating
[DEBUG] 2025-10-15 11:47:22.920 [main] PropertyBinder - Building property personalRating
[DEBUG] 2025-10-15 11:47:22.923 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2025-10-15 11:47:22.923 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2025-10-15 11:47:22.936 [main] AnnotatedColumn - Binding column: IndexColumn(column='photos_ORDER')
[DEBUG] 2025-10-15 11:47:22.938 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2025-10-15 11:47:22.939 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='photos_KEY')
[DEBUG] 2025-10-15 11:47:22.940 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='photos_KEY')
[DEBUG] 2025-10-15 11:47:22.942 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2025-10-15 11:47:22.942 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2025-10-15 11:47:22.944 [main] CollectionBinder - Collection role: org.hungrybadger.entity.Review.photos
[DEBUG] 2025-10-15 11:47:22.947 [main] PropertyBinder - Building property photos
[DEBUG] 2025-10-15 11:47:22.947 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='restaurant_name')
[DEBUG] 2025-10-15 11:47:22.947 [main] PropertyBinder - MetadataSourceProcessor property restaurantName with lazy=false
[DEBUG] 2025-10-15 11:47:22.947 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.hungrybadger.entity.Review:restaurantName]
[DEBUG] 2025-10-15 11:47:22.948 [main] BasicValueBinder - building BasicValue for restaurantName
[DEBUG] 2025-10-15 11:47:22.948 [main] BasicValue - Skipping column re-registration: review.restaurant_name
[DEBUG] 2025-10-15 11:47:22.948 [main] PropertyBinder - Building property restaurantName
[DEBUG] 2025-10-15 11:47:22.948 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: org.hungrybadger.entity
[DEBUG] 2025-10-15 11:47:22.955 [main] EntityBinder - Binding entity from annotated class: org.hungrybadger.entity.Photo
[DEBUG] 2025-10-15 11:47:22.955 [main] EntityBinder - Import with entity name Photo
[DEBUG] 2025-10-15 11:47:22.955 [main] EntityBinder - Bind entity org.hungrybadger.entity.Photo on table photo
[DEBUG] 2025-10-15 11:47:22.955 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2025-10-15 11:47:22.959 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2025-10-15 11:47:22.959 [main] ClassLoaderAccessImpl - Not known whether passed class name [org.hungrybadger.entity.Photo] is safe
[DEBUG] 2025-10-15 11:47:22.959 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.hungrybadger.entity.Photo
[DEBUG] 2025-10-15 11:47:22.959 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2025-10-15 11:47:22.959 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.hungrybadger.entity.Photo:id]
[DEBUG] 2025-10-15 11:47:22.959 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2025-10-15 11:47:22.959 [main] BasicValue - Skipping column re-registration: photo.id
[DEBUG] 2025-10-15 11:47:22.959 [main] PropertyBinder - Building property id
[DEBUG] 2025-10-15 11:47:22.960 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2025-10-15 11:47:22.960 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='image_path')
[DEBUG] 2025-10-15 11:47:22.960 [main] PropertyBinder - MetadataSourceProcessor property imagePath with lazy=false
[DEBUG] 2025-10-15 11:47:22.960 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.hungrybadger.entity.Photo:imagePath]
[DEBUG] 2025-10-15 11:47:22.960 [main] BasicValueBinder - building BasicValue for imagePath
[DEBUG] 2025-10-15 11:47:22.960 [main] BasicValue - Skipping column re-registration: photo.image_path
[DEBUG] 2025-10-15 11:47:22.960 [main] PropertyBinder - Building property imagePath
[DEBUG] 2025-10-15 11:47:22.961 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='review_id')
[DEBUG] 2025-10-15 11:47:22.961 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2025-10-15 11:47:22.964 [main] PropertyBinder - Building property review
[DEBUG] 2025-10-15 11:47:22.965 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: org.hungrybadger.entity
[DEBUG] 2025-10-15 11:47:22.966 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2025-10-15 11:47:22.967 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for cuisineType
[DEBUG] 2025-10-15 11:47:22.968 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for personalNotes
[DEBUG] 2025-10-15 11:47:22.968 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for personalRating
[DEBUG] 2025-10-15 11:47:22.968 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for restaurantName
[DEBUG] 2025-10-15 11:47:22.968 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2025-10-15 11:47:22.968 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for imagePath
[DEBUG] 2025-10-15 11:47:22.974 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [review]
[DEBUG] 2025-10-15 11:47:22.974 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [photo]
[DEBUG] 2025-10-15 11:47:22.974 [main] CollectionSecondPass - Second pass for collection: org.hungrybadger.entity.Review.photos
[DEBUG] 2025-10-15 11:47:22.976 [main] CollectionBinder - Binding a OneToMany: org.hungrybadger.entity.Review.photos through a foreign key
[DEBUG] 2025-10-15 11:47:22.978 [main] CollectionBinder - Mapping collection: org.hungrybadger.entity.Review.photos -> photo
[DEBUG] 2025-10-15 11:47:22.979 [main] TableBinder - Retrieving property org.hungrybadger.entity.Photo.review
[DEBUG] 2025-10-15 11:47:22.980 [main] CollectionSecondPass - Mapped collection key: review_id, one-to-many: org.hungrybadger.entity.Photo
[DEBUG] 2025-10-15 11:47:22.980 [main] InFlightMetadataCollectorImpl - Resolving reference to class: org.hungrybadger.entity.Review
[DEBUG] 2025-10-15 11:47:22.994 [main] InFlightMetadataCollectorImpl - Resolving reference to class: org.hungrybadger.entity.Review
[DEBUG] 2025-10-15 11:47:23.202 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2025-10-15 11:47:23.257 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2025-10-15 11:47:23.258 [main] SessionFactoryImpl - Instantiating SessionFactory with settings: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=11, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, java.class.path=C:\Program Files\JetBrains\IntelliJ IDEA 2025.2.1\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2025.2.1\plugins\junit\lib\junit5-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2025.2.1\plugins\junit\lib\junit-rt.jar;C:\Users\mamcc\IdeaProjects\PersonalFoodReviewer\target\test-classes;C:\Users\mamcc\IdeaProjects\PersonalFoodReviewer\target\classes;C:\Users\mamcc\.m2\repository\org\hibernate\orm\hibernate-core\6.4.3.Final\hibernate-core-6.4.3.Final.jar;C:\Users\mamcc\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\mamcc\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\mamcc\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\mamcc\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\mamcc\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\mamcc\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\mamcc\.m2\repository\net\bytebuddy\byte-buddy\1.14.7\byte-buddy-1.14.7.jar;C:\Users\mamcc\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\mamcc\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\mamcc\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\mamcc\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\mamcc\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\mamcc\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\mamcc\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\mamcc\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\mamcc\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\mamcc\.m2\repository\org\hibernate\orm\hibernate-c3p0\6.4.3.Final\hibernate-c3p0-6.4.3.Final.jar;C:\Users\mamcc\.m2\repository\com\mchange\c3p0\0.9.5.5\c3p0-0.9.5.5.jar;C:\Users\mamcc\.m2\repository\com\mchange\mchange-commons-java\0.2.19\mchange-commons-java-0.2.19.jar;C:\Users\mamcc\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\mamcc\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\mamcc\.m2\repository\javax\javaee-web-api\7.0\javaee-web-api-7.0.jar;C:\Users\mamcc\.m2\repository\mysql\mysql-connector-java\8.0.16\mysql-connector-java-8.0.16.jar;C:\Users\mamcc\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\mamcc\.m2\repository\org\apache\logging\log4j\log4j-api\2.17.1\log4j-api-2.17.1.jar;C:\Users\mamcc\.m2\repository\org\apache\logging\log4j\log4j-core\2.17.1\log4j-core-2.17.1.jar;C:\Users\mamcc\.m2\repository\jstl\jstl\1.2\jstl-1.2.jar;C:\Users\mamcc\.m2\repository\org\junit\platform\junit-platform-runner\1.0.0\junit-platform-runner-1.0.0.jar;C:\Users\mamcc\.m2\repository\org\apiguardian\apiguardian-api\1.0.0\apiguardian-api-1.0.0.jar;C:\Users\mamcc\.m2\repository\org\junit\platform\junit-platform-launcher\1.0.0\junit-platform-launcher-1.0.0.jar;C:\Users\mamcc\.m2\repository\org\junit\platform\junit-platform-suite-api\1.0.0\junit-platform-suite-api-1.0.0.jar;C:\Users\mamcc\.m2\repository\org\junit\platform\junit-platform-commons\1.0.0\junit-platform-commons-1.0.0.jar;C:\Users\mamcc\.m2\repository\org\junit\vintage\junit-vintage-engine\4.12.0\junit-vintage-engine-4.12.0.jar;C:\Users\mamcc\.m2\repository\org\junit\platform\junit-platform-engine\1.0.0\junit-platform-engine-1.0.0.jar;C:\Users\mamcc\.m2\repository\org\opentest4j\opentest4j\1.0.0\opentest4j-1.0.0.jar;C:\Users\mamcc\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.0.0\junit-jupiter-engine-5.0.0.jar;C:\Users\mamcc\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.0.0\junit-jupiter-api-5.0.0.jar, kotlinx.coroutines.debug.enable.mutable.state.flows.stack.trace=true, java.vm.vendor=Eclipse Adoptium, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=https://adoptium.net/, user.timezone=America/Chicago, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Eclipse Adoptium\jdk-11.0.28.6-hotspot\bin, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 org.hungrybadger.persistence.PhotoDaoTest, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\mamcc, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2025-07-15, java.home=C:\Program Files\Eclipse Adoptium\jdk-11.0.28.6-hotspot, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, intellij.debug.agent=true, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, user.script=, connection.password=Marthacodes, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=11.0.28+6, user.name=Test, path.separator=;, kotlinx.coroutines.debug.enable.creation.stack.trace=false, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3307/hungryBadger_test, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, java.vendor.version=Temurin-11.0.28+6, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=C:\Users\mamcc\AppData\Local\Temp\, java.version=11.0.28, jboss.modules.system.pkgs=com.intellij.rt, user.dir=C:\Users\mamcc\IdeaProjects\PersonalFoodReviewer, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@75882261, kotlinx.coroutines.debug.enable.flows.stack.trace=true, java.library.path=C:\Program Files\Eclipse Adoptium\jdk-11.0.28.6-hotspot\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Microsoft\jdk-21.0.2.13-hotspot\bin;C:\Program Files\Eclipse Adoptium\jdk-11.0.28.6-hotspot\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\dotnet\;C:\Program Files\Amazon\AWSCLIV2\;C:\Program Files\nodejs\;C:\Program Files\MySQL\MySQL Server 9.0\bin;C:\Program Files\NVIDIA Corporation\NVIDIA app\NvDLISR;C:\Program Files\Git\cmd;C:\Users\mamcc\AppData\Local\Microsoft\WindowsApps;;C:\Users\mamcc\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\mamcc\AppData\Roaming\npm;., java.vendor=Eclipse Adoptium, java.vm.info=mixed mode, java.vm.version=11.0.28+6, java.specification.maintenance.version=3, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3307/hungryBadger_test, debugger.agent.enable.coroutines=true, java.class.version=55.0}
[DEBUG] 2025-10-15 11:47:23.263 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2025-10-15 11:47:23.270 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2025-10-15 11:47:23.320 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2025-10-15 11:47:23.321 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2025-10-15 11:47:23.321 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2025-10-15 11:47:23.322 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2025-10-15 11:47:23.323 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@29c53c4f] under count; prior registration was null
[DEBUG] 2025-10-15 11:47:23.324 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@4f2ac7e0] under every; prior registration was null
[DEBUG] 2025-10-15 11:47:23.325 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@2484dbb7] under any; prior registration was null
[DEBUG] 2025-10-15 11:47:23.325 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2025-10-15 11:47:23.325 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2025-10-15 11:47:23.325 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2025-10-15 11:47:23.325 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2025-10-15 11:47:23.325 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2025-10-15 11:47:23.325 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2025-10-15 11:47:23.325 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2025-10-15 11:47:23.325 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2025-10-15 11:47:23.325 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2025-10-15 11:47:23.326 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2025-10-15 11:47:23.326 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2025-10-15 11:47:23.326 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2025-10-15 11:47:23.326 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2025-10-15 11:47:23.326 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2025-10-15 11:47:23.326 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2025-10-15 11:47:23.326 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2025-10-15 11:47:23.326 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2025-10-15 11:47:23.328 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2e952845] under sinh; prior registration was null
[DEBUG] 2025-10-15 11:47:23.329 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@79252c83] under cosh; prior registration was null
[DEBUG] 2025-10-15 11:47:23.329 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6fbf5db2] under tanh; prior registration was null
[DEBUG] 2025-10-15 11:47:23.329 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@509a6095] under pi; prior registration was null
[DEBUG] 2025-10-15 11:47:23.329 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@57cabdc3] under log; prior registration was null
[DEBUG] 2025-10-15 11:47:23.329 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2025-10-15 11:47:23.329 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2025-10-15 11:47:23.329 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2025-10-15 11:47:23.329 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2025-10-15 11:47:23.330 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2025-10-15 11:47:23.330 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2025-10-15 11:47:23.330 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2025-10-15 11:47:23.330 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2025-10-15 11:47:23.330 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2025-10-15 11:47:23.330 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2025-10-15 11:47:23.330 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2025-10-15 11:47:23.330 [main] SqmFunctionRegistry - Registering alternate key : length -> character_length
[DEBUG] 2025-10-15 11:47:23.331 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@5faeeb56] under position; prior registration was null
[DEBUG] 2025-10-15 11:47:23.333 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@37d3e140] under overlay; prior registration was null
[DEBUG] 2025-10-15 11:47:23.334 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@a3cba3a] under trim; prior registration was null
[DEBUG] 2025-10-15 11:47:23.334 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@6169be09] under cast; prior registration was null
[DEBUG] 2025-10-15 11:47:23.335 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5e3db14] under collate; prior registration was null
[DEBUG] 2025-10-15 11:47:23.335 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@5c448ef] under extract; prior registration was null
[DEBUG] 2025-10-15 11:47:23.335 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2025-10-15 11:47:23.335 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2025-10-15 11:47:23.336 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@50e5032c] under ifnull; prior registration was null
[DEBUG] 2025-10-15 11:47:23.336 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2025-10-15 11:47:23.336 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2025-10-15 11:47:23.337 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@10817f46] under pad; prior registration was null
[DEBUG] 2025-10-15 11:47:23.337 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@16681017] under str; prior registration was null
[DEBUG] 2025-10-15 11:47:23.339 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@3a40bb52] under format; prior registration was null
[DEBUG] 2025-10-15 11:47:23.339 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@284990de] under timestampadd; prior registration was null
[DEBUG] 2025-10-15 11:47:23.340 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@377dfb8d] under timestampdiff; prior registration was null
[DEBUG] 2025-10-15 11:47:23.340 [main] SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
[DEBUG] 2025-10-15 11:47:23.340 [main] SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
[DEBUG] 2025-10-15 11:47:23.340 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@78c74647] under current_date; prior registration was null
[DEBUG] 2025-10-15 11:47:23.340 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@39652a30] under current_time; prior registration was null
[DEBUG] 2025-10-15 11:47:23.341 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5763a655] under current_timestamp; prior registration was null
[DEBUG] 2025-10-15 11:47:23.341 [main] SqmFunctionRegistry - Registering alternate key : current date -> current_date
[DEBUG] 2025-10-15 11:47:23.341 [main] SqmFunctionRegistry - Registering alternate key : current time -> current_time
[DEBUG] 2025-10-15 11:47:23.341 [main] SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2025-10-15 11:47:23.341 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@40c8067] under local_date; prior registration was null
[DEBUG] 2025-10-15 11:47:23.341 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@46bb0bdf] under local_time; prior registration was null
[DEBUG] 2025-10-15 11:47:23.341 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@561f9d92] under local_datetime; prior registration was null
[DEBUG] 2025-10-15 11:47:23.341 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1c84d80a] under offset_datetime; prior registration was null
[DEBUG] 2025-10-15 11:47:23.341 [main] SqmFunctionRegistry - Registering alternate key : local date -> local_date
[DEBUG] 2025-10-15 11:47:23.341 [main] SqmFunctionRegistry - Registering alternate key : local time -> local_time
[DEBUG] 2025-10-15 11:47:23.341 [main] SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
[DEBUG] 2025-10-15 11:47:23.341 [main] SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2025-10-15 11:47:23.341 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7ceb6c45] under instant; prior registration was null
[DEBUG] 2025-10-15 11:47:23.341 [main] SqmFunctionRegistry - Registering alternate key : current_instant -> instant
[DEBUG] 2025-10-15 11:47:23.342 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@559991f5] under sql; prior registration was null
[DEBUG] 2025-10-15 11:47:23.342 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2025-10-15 11:47:23.342 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2025-10-15 11:47:23.342 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2025-10-15 11:47:23.342 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2025-10-15 11:47:23.342 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@57cabdc3
[DEBUG] 2025-10-15 11:47:23.342 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
[DEBUG] 2025-10-15 11:47:23.342 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2025-10-15 11:47:23.342 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2025-10-15 11:47:23.342 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2025-10-15 11:47:23.343 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2025-10-15 11:47:23.343 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
[DEBUG] 2025-10-15 11:47:23.343 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2025-10-15 11:47:23.343 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2025-10-15 11:47:23.343 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@61d60e38] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
[DEBUG] 2025-10-15 11:47:23.343 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@6e95973c] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
[DEBUG] 2025-10-15 11:47:23.343 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
[DEBUG] 2025-10-15 11:47:23.343 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2025-10-15 11:47:23.344 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2025-10-15 11:47:23.344 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2025-10-15 11:47:23.344 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2025-10-15 11:47:23.344 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2025-10-15 11:47:23.344 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2025-10-15 11:47:23.344 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2025-10-15 11:47:23.344 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
[DEBUG] 2025-10-15 11:47:23.344 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
[DEBUG] 2025-10-15 11:47:23.344 [main] SqmFunctionRegistry - Registering alternate key : day -> dayofmonth
[DEBUG] 2025-10-15 11:47:23.344 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
[DEBUG] 2025-10-15 11:47:23.344 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2025-10-15 11:47:23.344 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2025-10-15 11:47:23.344 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2025-10-15 11:47:23.344 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2025-10-15 11:47:23.345 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
[DEBUG] 2025-10-15 11:47:23.345 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
[DEBUG] 2025-10-15 11:47:23.345 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
[DEBUG] 2025-10-15 11:47:23.345 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
[DEBUG] 2025-10-15 11:47:23.345 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
[DEBUG] 2025-10-15 11:47:23.345 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
[DEBUG] 2025-10-15 11:47:23.345 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
[DEBUG] 2025-10-15 11:47:23.345 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2025-10-15 11:47:23.345 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
[DEBUG] 2025-10-15 11:47:23.345 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
[DEBUG] 2025-10-15 11:47:23.345 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
[DEBUG] 2025-10-15 11:47:23.346 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
[DEBUG] 2025-10-15 11:47:23.346 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2025-10-15 11:47:23.346 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2025-10-15 11:47:23.346 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2025-10-15 11:47:23.346 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2025-10-15 11:47:23.346 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2025-10-15 11:47:23.346 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@404ced67] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@5faeeb56
[DEBUG] 2025-10-15 11:47:23.346 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2025-10-15 11:47:23.346 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2025-10-15 11:47:23.346 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2025-10-15 11:47:23.351 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@527937d0] under trunc; prior registration was null
[DEBUG] 2025-10-15 11:47:23.351 [main] SqmFunctionRegistry - Registering alternate key : truncate -> trunc
[DEBUG] 2025-10-15 11:47:23.351 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2025-10-15 11:47:23.351 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@36d582cb] under bitand; prior registration was null
[DEBUG] 2025-10-15 11:47:23.351 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6c2a95d5] under bitor; prior registration was null
[DEBUG] 2025-10-15 11:47:23.351 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@24d8f87a] under bitxor; prior registration was null
[DEBUG] 2025-10-15 11:47:23.351 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3f048c86] under bitnot; prior registration was null
[DEBUG] 2025-10-15 11:47:23.352 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2025-10-15 11:47:23.352 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2025-10-15 11:47:23.352 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
[DEBUG] 2025-10-15 11:47:23.352 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2025-10-15 11:47:23.352 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2025-10-15 11:47:23.352 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
[DEBUG] 2025-10-15 11:47:23.352 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2025-10-15 11:47:23.352 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2025-10-15 11:47:23.352 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
[DEBUG] 2025-10-15 11:47:23.352 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
[DEBUG] 2025-10-15 11:47:23.352 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
[DEBUG] 2025-10-15 11:47:23.352 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
[DEBUG] 2025-10-15 11:47:23.353 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
[DEBUG] 2025-10-15 11:47:23.353 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@255d9277] under format; prior registration was org.hibernate.dialect.function.FormatFunction@3a40bb52
[DEBUG] 2025-10-15 11:47:23.353 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
[DEBUG] 2025-10-15 11:47:23.353 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
[DEBUG] 2025-10-15 11:47:23.353 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2025-10-15 11:47:23.353 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2025-10-15 11:47:23.353 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@46bb0bdf
[DEBUG] 2025-10-15 11:47:23.353 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@561f9d92
[DEBUG] 2025-10-15 11:47:23.353 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
[DEBUG] 2025-10-15 11:47:23.353 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1de13f34] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@509a6095
[DEBUG] 2025-10-15 11:47:23.353 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7e191fda] under chr; prior registration was null
[DEBUG] 2025-10-15 11:47:23.353 [main] SqmFunctionRegistry - Registering alternate key : char -> chr
[DEBUG] 2025-10-15 11:47:23.353 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6562cc23] under sysdate; prior registration was null
[DEBUG] 2025-10-15 11:47:23.353 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2025-10-15 11:47:23.354 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2025-10-15 11:47:23.354 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2025-10-15 11:47:23.354 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2025-10-15 11:47:23.354 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2025-10-15 11:47:23.354 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2025-10-15 11:47:23.356 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@53ea380b] under rank; prior registration was null
[DEBUG] 2025-10-15 11:47:23.356 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@578c3fd9] under dense_rank; prior registration was null
[DEBUG] 2025-10-15 11:47:23.356 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@245cb8df] under percent_rank; prior registration was null
[DEBUG] 2025-10-15 11:47:23.356 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@26b3c9a2] under cume_dist; prior registration was null
[DEBUG] 2025-10-15 11:47:23.357 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@6b42e36d] under listagg; prior registration was null
[DEBUG] 2025-10-15 11:47:23.361 [main] HQL_FUNCTIONS - abs(NUMERIC arg)
[DEBUG] 2025-10-15 11:47:23.361 [main] HQL_FUNCTIONS - Double acos(NUMERIC arg)
[DEBUG] 2025-10-15 11:47:23.361 [main] HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days)
[DEBUG] 2025-10-15 11:47:23.361 [main] HQL_FUNCTIONS - addtime(TIME datetime, TIME time)
[DEBUG] 2025-10-15 11:47:23.361 [main] HQL_FUNCTIONS - Boolean any(BOOLEAN arg)
[DEBUG] 2025-10-15 11:47:23.361 [main] HQL_FUNCTIONS - Integer ascii(STRING arg)
[DEBUG] 2025-10-15 11:47:23.361 [main] HQL_FUNCTIONS - Double asin(NUMERIC arg)
[DEBUG] 2025-10-15 11:47:23.361 [main] HQL_FUNCTIONS - Double atan(NUMERIC arg)
[DEBUG] 2025-10-15 11:47:23.361 [main] HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2025-10-15 11:47:23.362 [main] HQL_FUNCTIONS - avg(arg)
[DEBUG] 2025-10-15 11:47:23.362 [main] HQL_FUNCTIONS - bit_and(arg)
[DEBUG] 2025-10-15 11:47:23.362 [main] HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2025-10-15 11:47:23.362 [main] HQL_FUNCTIONS - bit_or(arg)
[DEBUG] 2025-10-15 11:47:23.362 [main] HQL_FUNCTIONS - bitand(arg0, arg1)
[DEBUG] 2025-10-15 11:47:23.362 [main] HQL_FUNCTIONS - bitnot(arg)
[DEBUG] 2025-10-15 11:47:23.362 [main] HQL_FUNCTIONS - bitor(arg0, arg1)
[DEBUG] 2025-10-15 11:47:23.362 [main] HQL_FUNCTIONS - bitxor(arg0, arg1)
[DEBUG] 2025-10-15 11:47:23.362 [main] HQL_FUNCTIONS - cast(arg as Type)
[DEBUG] 2025-10-15 11:47:23.362 [main] HQL_FUNCTIONS - ceiling(NUMERIC arg)
[DEBUG] 2025-10-15 11:47:23.362 [main] HQL_FUNCTIONS - Character char(INTEGER arg)
[DEBUG] 2025-10-15 11:47:23.362 [main] HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2025-10-15 11:47:23.362 [main] HQL_FUNCTIONS - Character chr(INTEGER arg)
[DEBUG] 2025-10-15 11:47:23.362 [main] HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
[DEBUG] 2025-10-15 11:47:23.362 [main] HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
[DEBUG] 2025-10-15 11:47:23.362 [main] HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2025-10-15 11:47:23.362 [main] HQL_FUNCTIONS - Double cos(NUMERIC arg)
[DEBUG] 2025-10-15 11:47:23.362 [main] HQL_FUNCTIONS - Double cosh(NUMERIC arg)
[DEBUG] 2025-10-15 11:47:23.362 [main] HQL_FUNCTIONS - Double cot(NUMERIC arg)
[DEBUG] 2025-10-15 11:47:23.362 [main] HQL_FUNCTIONS - Long count([distinct ]{arg|*})
[DEBUG] 2025-10-15 11:47:23.362 [main] HQL_FUNCTIONS - Integer crc32(arg)
[DEBUG] 2025-10-15 11:47:23.362 [main] HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
[DEBUG] 2025-10-15 11:47:23.362 [main] HQL_FUNCTIONS - Date curdate()
[DEBUG] 2025-10-15 11:47:23.362 [main] HQL_FUNCTIONS - Date current date
[DEBUG] 2025-10-15 11:47:23.362 [main] HQL_FUNCTIONS - Time current time
[DEBUG] 2025-10-15 11:47:23.363 [main] HQL_FUNCTIONS - Timestamp current timestamp
[DEBUG] 2025-10-15 11:47:23.363 [main] HQL_FUNCTIONS - Date current_date
[DEBUG] 2025-10-15 11:47:23.363 [main] HQL_FUNCTIONS - Instant current_instant
[DEBUG] 2025-10-15 11:47:23.363 [main] HQL_FUNCTIONS - Time current_time
[DEBUG] 2025-10-15 11:47:23.363 [main] HQL_FUNCTIONS - Timestamp current_timestamp
[DEBUG] 2025-10-15 11:47:23.363 [main] HQL_FUNCTIONS - Time curtime()
[DEBUG] 2025-10-15 11:47:23.363 [main] HQL_FUNCTIONS - Date date(arg)
[DEBUG] 2025-10-15 11:47:23.363 [main] HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2025-10-15 11:47:23.363 [main] HQL_FUNCTIONS - Integer datediff(DATE end, DATE start)
[DEBUG] 2025-10-15 11:47:23.363 [main] HQL_FUNCTIONS - Integer day(DATE arg)
[DEBUG] 2025-10-15 11:47:23.363 [main] HQL_FUNCTIONS - String dayname(DATE arg)
[DEBUG] 2025-10-15 11:47:23.363 [main] HQL_FUNCTIONS - Integer dayofmonth(DATE arg)
[DEBUG] 2025-10-15 11:47:23.363 [main] HQL_FUNCTIONS - Integer dayofweek(DATE arg)
[DEBUG] 2025-10-15 11:47:23.363 [main] HQL_FUNCTIONS - Integer dayofyear(DATE arg)
[DEBUG] 2025-10-15 11:47:23.363 [main] HQL_FUNCTIONS - Double degrees(NUMERIC arg)
[DEBUG] 2025-10-15 11:47:23.363 [main] HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
[DEBUG] 2025-10-15 11:47:23.363 [main] HQL_FUNCTIONS - Boolean every(BOOLEAN arg)
[DEBUG] 2025-10-15 11:47:23.363 [main] HQL_FUNCTIONS - Double exp(NUMERIC arg)
[DEBUG] 2025-10-15 11:47:23.363 [main] HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2025-10-15 11:47:23.363 [main] HQL_FUNCTIONS - first_valueANY value
[DEBUG] 2025-10-15 11:47:23.363 [main] HQL_FUNCTIONS - floor(NUMERIC arg)
[DEBUG] 2025-10-15 11:47:23.363 [main] HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2025-10-15 11:47:23.364 [main] HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2025-10-15 11:47:23.364 [main] HQL_FUNCTIONS - Integer hour(TIME arg)
[DEBUG] 2025-10-15 11:47:23.364 [main] HQL_FUNCTIONS - ifnull(arg0, arg1)
[DEBUG] 2025-10-15 11:47:23.364 [main] HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2025-10-15 11:47:23.364 [main] HQL_FUNCTIONS - Instant instant
[DEBUG] 2025-10-15 11:47:23.364 [main] HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2025-10-15 11:47:23.364 [main] HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2025-10-15 11:47:23.364 [main] HQL_FUNCTIONS - Date last_day(DATE arg)
[DEBUG] 2025-10-15 11:47:23.364 [main] HQL_FUNCTIONS - last_valueANY value
[DEBUG] 2025-10-15 11:47:23.364 [main] HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2025-10-15 11:47:23.364 [main] HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2025-10-15 11:47:23.364 [main] HQL_FUNCTIONS - String left(STRING string, INTEGER length)
[DEBUG] 2025-10-15 11:47:23.364 [main] HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
[DEBUG] 2025-10-15 11:47:23.364 [main] HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
[DEBUG] 2025-10-15 11:47:23.364 [main] HQL_FUNCTIONS - Double ln(NUMERIC arg)
[DEBUG] 2025-10-15 11:47:23.364 [main] HQL_FUNCTIONS - LocalDate local date
[DEBUG] 2025-10-15 11:47:23.364 [main] HQL_FUNCTIONS - LocalDateTime local datetime
[DEBUG] 2025-10-15 11:47:23.364 [main] HQL_FUNCTIONS - LocalTime local time
[DEBUG] 2025-10-15 11:47:23.364 [main] HQL_FUNCTIONS - LocalDate local_date
[DEBUG] 2025-10-15 11:47:23.364 [main] HQL_FUNCTIONS - LocalDateTime local_datetime
[DEBUG] 2025-10-15 11:47:23.364 [main] HQL_FUNCTIONS - LocalTime local_time
[DEBUG] 2025-10-15 11:47:23.364 [main] HQL_FUNCTIONS - Timestamp localtime
[DEBUG] 2025-10-15 11:47:23.364 [main] HQL_FUNCTIONS - Timestamp localtimestamp
[DEBUG] 2025-10-15 11:47:23.364 [main] HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2025-10-15 11:47:23.364 [main] HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
[DEBUG] 2025-10-15 11:47:23.364 [main] HQL_FUNCTIONS - Double log10(NUMERIC arg)
[DEBUG] 2025-10-15 11:47:23.365 [main] HQL_FUNCTIONS - Double log2(NUMERIC arg)
[DEBUG] 2025-10-15 11:47:23.365 [main] HQL_FUNCTIONS - String lower(STRING string)
[DEBUG] 2025-10-15 11:47:23.365 [main] HQL_FUNCTIONS - String lpad(string, length[, padding])
[DEBUG] 2025-10-15 11:47:23.365 [main] HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
[DEBUG] 2025-10-15 11:47:23.365 [main] HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear)
[DEBUG] 2025-10-15 11:47:23.365 [main] HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
[DEBUG] 2025-10-15 11:47:23.365 [main] HQL_FUNCTIONS - max(COMPARABLE arg)
[DEBUG] 2025-10-15 11:47:23.365 [main] HQL_FUNCTIONS - String md5(arg)
[DEBUG] 2025-10-15 11:47:23.365 [main] HQL_FUNCTIONS - Integer microsecond(TIME arg)
[DEBUG] 2025-10-15 11:47:23.365 [main] HQL_FUNCTIONS - min(COMPARABLE arg)
[DEBUG] 2025-10-15 11:47:23.365 [main] HQL_FUNCTIONS - Integer minute(TIME arg)
[DEBUG] 2025-10-15 11:47:23.365 [main] HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2025-10-15 11:47:23.365 [main] HQL_FUNCTIONS - Integer month(DATE arg)
[DEBUG] 2025-10-15 11:47:23.365 [main] HQL_FUNCTIONS - String monthname(DATE arg)
[DEBUG] 2025-10-15 11:47:23.365 [main] HQL_FUNCTIONS - Timestamp now()
[DEBUG] 2025-10-15 11:47:23.365 [main] HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
[DEBUG] 2025-10-15 11:47:23.365 [main] HQL_FUNCTIONS - nullif(arg0, arg1)
[DEBUG] 2025-10-15 11:47:23.365 [main] HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2025-10-15 11:47:23.365 [main] HQL_FUNCTIONS - OffsetDateTime offset datetime
[DEBUG] 2025-10-15 11:47:23.365 [main] HQL_FUNCTIONS - OffsetDateTime offset_datetime
[DEBUG] 2025-10-15 11:47:23.365 [main] HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2025-10-15 11:47:23.365 [main] HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2025-10-15 11:47:23.365 [main] HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
[DEBUG] 2025-10-15 11:47:23.365 [main] HQL_FUNCTIONS - Double pi
[DEBUG] 2025-10-15 11:47:23.365 [main] HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
[DEBUG] 2025-10-15 11:47:23.365 [main] HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2025-10-15 11:47:23.366 [main] HQL_FUNCTIONS - Integer quarter(DATE arg)
[DEBUG] 2025-10-15 11:47:23.366 [main] HQL_FUNCTIONS - Double radians(NUMERIC arg)
[DEBUG] 2025-10-15 11:47:23.366 [main] HQL_FUNCTIONS - Double rand([INTEGER seed])
[DEBUG] 2025-10-15 11:47:23.366 [main] HQL_FUNCTIONS - Long rank([arg0[, ...]])
[DEBUG] 2025-10-15 11:47:23.366 [main] HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
[DEBUG] 2025-10-15 11:47:23.366 [main] HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2025-10-15 11:47:23.366 [main] HQL_FUNCTIONS - String reverse(STRING arg)
[DEBUG] 2025-10-15 11:47:23.366 [main] HQL_FUNCTIONS - String right(STRING string, INTEGER length)
[DEBUG] 2025-10-15 11:47:23.366 [main] HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
[DEBUG] 2025-10-15 11:47:23.366 [main] HQL_FUNCTIONS - Long row_number()
[DEBUG] 2025-10-15 11:47:23.366 [main] HQL_FUNCTIONS - String rpad(string, length[, padding])
[DEBUG] 2025-10-15 11:47:23.366 [main] HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
[DEBUG] 2025-10-15 11:47:23.366 [main] HQL_FUNCTIONS - Integer second(TIME arg)
[DEBUG] 2025-10-15 11:47:23.366 [main] HQL_FUNCTIONS - String sha(arg)
[DEBUG] 2025-10-15 11:47:23.366 [main] HQL_FUNCTIONS - String sha1(arg)
[DEBUG] 2025-10-15 11:47:23.366 [main] HQL_FUNCTIONS - String sha2(arg0, arg1)
[DEBUG] 2025-10-15 11:47:23.366 [main] HQL_FUNCTIONS - Integer sign(NUMERIC arg)
[DEBUG] 2025-10-15 11:47:23.366 [main] HQL_FUNCTIONS - Double sin(NUMERIC arg)
[DEBUG] 2025-10-15 11:47:23.366 [main] HQL_FUNCTIONS - Double sinh(NUMERIC arg)
[DEBUG] 2025-10-15 11:47:23.366 [main] HQL_FUNCTIONS - String soundex(arg)
[DEBUG] 2025-10-15 11:47:23.366 [main] HQL_FUNCTIONS - String space(INTEGER arg)
[DEBUG] 2025-10-15 11:47:23.366 [main] HQL_FUNCTIONS - Object sql
[DEBUG] 2025-10-15 11:47:23.367 [main] HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
[DEBUG] 2025-10-15 11:47:23.367 [main] HQL_FUNCTIONS - Double stddev(NUMERIC arg)
[DEBUG] 2025-10-15 11:47:23.367 [main] HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
[DEBUG] 2025-10-15 11:47:23.367 [main] HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
[DEBUG] 2025-10-15 11:47:23.367 [main] HQL_FUNCTIONS - String str(arg)
[DEBUG] 2025-10-15 11:47:23.367 [main] HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days)
[DEBUG] 2025-10-15 11:47:23.367 [main] HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2025-10-15 11:47:23.367 [main] HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2025-10-15 11:47:23.367 [main] HQL_FUNCTIONS - subtime(TIME datetime, TIME time)
[DEBUG] 2025-10-15 11:47:23.367 [main] HQL_FUNCTIONS - sum(arg)
[DEBUG] 2025-10-15 11:47:23.367 [main] HQL_FUNCTIONS - Timestamp sysdate()
[DEBUG] 2025-10-15 11:47:23.367 [main] HQL_FUNCTIONS - Double tan(NUMERIC arg)
[DEBUG] 2025-10-15 11:47:23.367 [main] HQL_FUNCTIONS - Double tanh(NUMERIC arg)
[DEBUG] 2025-10-15 11:47:23.367 [main] HQL_FUNCTIONS - String time(arg)
[DEBUG] 2025-10-15 11:47:23.367 [main] HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1])
[DEBUG] 2025-10-15 11:47:23.367 [main] HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2025-10-15 11:47:23.367 [main] HQL_FUNCTIONS - basicType@14(java.lang.Long,-5)|basicType@17(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2025-10-15 11:47:23.367 [main] HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2025-10-15 11:47:23.367 [main] HQL_FUNCTIONS - trunc( ... )
[DEBUG] 2025-10-15 11:47:23.367 [main] HQL_FUNCTIONS - truncate( ... )
[DEBUG] 2025-10-15 11:47:23.367 [main] HQL_FUNCTIONS - String upper(STRING string)
[DEBUG] 2025-10-15 11:47:23.367 [main] HQL_FUNCTIONS - Date utc_date
[DEBUG] 2025-10-15 11:47:23.368 [main] HQL_FUNCTIONS - Time utc_time
[DEBUG] 2025-10-15 11:47:23.368 [main] HQL_FUNCTIONS - Timestamp utc_timestamp
[DEBUG] 2025-10-15 11:47:23.368 [main] HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
[DEBUG] 2025-10-15 11:47:23.368 [main] HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
[DEBUG] 2025-10-15 11:47:23.368 [main] HQL_FUNCTIONS - Double variance(NUMERIC arg)
[DEBUG] 2025-10-15 11:47:23.368 [main] HQL_FUNCTIONS - Integer week(DATE arg)
[DEBUG] 2025-10-15 11:47:23.368 [main] HQL_FUNCTIONS - Integer year(DATE arg)
[DEBUG] 2025-10-15 11:47:23.373 [main] cache - Starting QueryInterpretationCache(2048)
[DEBUG] 2025-10-15 11:47:23.488 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2025-10-15 11:47:23.489 [main] EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
[DEBUG] 2025-10-15 11:47:23.598 [main] ClassLoaderAccessImpl - Not known whether passed class name [org.hungrybadger.entity.Review] is safe
[DEBUG] 2025-10-15 11:47:23.598 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.hungrybadger.entity.Review
[DEBUG] 2025-10-15 11:47:23.826 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.hungrybadger.entity.Review]: private accessor [cuisineType]
[DEBUG] 2025-10-15 11:47:23.862 [main] interceptor - To-one property `org.hungrybadger.entity.Photo#review` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2025-10-15 11:47:23.862 [main] interceptor - To-one property `org.hungrybadger.entity.Photo#review` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2025-10-15 11:47:23.862 [main] ClassLoaderAccessImpl - Not known whether passed class name [org.hungrybadger.entity.Photo] is safe
[DEBUG] 2025-10-15 11:47:23.862 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.hungrybadger.entity.Photo
[DEBUG] 2025-10-15 11:47:23.874 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.hungrybadger.entity.Photo]: private accessor [imagePath]
[DEBUG] 2025-10-15 11:47:23.874 [main] interceptor - To-one property `org.hungrybadger.entity.Photo#review` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2025-10-15 11:47:23.892 [main] mutation - Skipping collection (re)creation - org.hungrybadger.entity.Review.photos
[DEBUG] 2025-10-15 11:47:23.893 [main] mutation - Skipping collection row deletions - org.hungrybadger.entity.Review.photos
[DEBUG] 2025-10-15 11:47:23.894 [main] mutation - Skipping collection removals - org.hungrybadger.entity.Review.photos
[DEBUG] 2025-10-15 11:47:23.926 [main] creation - Starting post-init callbacks
[DEBUG] 2025-10-15 11:47:23.926 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[org.hungrybadger.entity.Review.photos#{element}]) - element descriptor
[DEBUG] 2025-10-15 11:47:23.926 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(org.hungrybadger.entity.Review.photos)#finishInitialization
[DEBUG] 2025-10-15 11:47:23.926 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(org.hungrybadger.entity.Review.photos) - key descriptor
[DEBUG] 2025-10-15 11:47:23.931 [main] creation - Starting PostInitCallbackEntry : Entity(org.hungrybadger.entity.Review) `staticFetchableList` generator
[DEBUG] 2025-10-15 11:47:23.932 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.hungrybadger.entity.Photo.review]
[DEBUG] 2025-10-15 11:47:23.932 [main] creation - Starting PostInitCallbackEntry : Entity(org.hungrybadger.entity.Photo) `staticFetchableList` generator
[DEBUG] 2025-10-15 11:47:23.932 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[org.hungrybadger.entity.Review.photos#{element}]) - element descriptor
[DEBUG] 2025-10-15 11:47:24.022 [main] create - Created new SQL alias : r1_0
[DEBUG] 2025-10-15 11:47:24.025 [main] create - Registration of TableGroup [StandardTableGroup(org.hungrybadger.entity.Review)] with identifierForTableGroup [org.hungrybadger.entity.Review] for NavigablePath [org.hungrybadger.entity.Review] 
[DEBUG] 2025-10-15 11:47:24.044 [main] AST - DomainResult Graph:
 \-EntityResultImpl [org.hungrybadger.entity.Review]
 |  +-BasicFetch [org.hungrybadger.entity.Review.cuisineType]
 |  +-BasicFetch [org.hungrybadger.entity.Review.personalNotes]
 |  +-BasicFetch [org.hungrybadger.entity.Review.personalRating]
 |  +-DelayedCollectionFetch [org.hungrybadger.entity.Review.photos]
 |  \-BasicFetch [org.hungrybadger.entity.Review.restaurantName]

[DEBUG] 2025-10-15 11:47:24.053 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.hungrybadger.entity.Review) {
          primaryTableReference : review as r1_0
        }
      }
    }

[DEBUG] 2025-10-15 11:47:24.065 [main] AbstractEntityPersister - Static SQL for entity: org.hungrybadger.entity.Review
[DEBUG] 2025-10-15 11:47:24.065 [main] AbstractEntityPersister -  Version select: select id from review where id=?
[DEBUG] 2025-10-15 11:47:24.065 [main] AbstractEntityPersister -  Insert (0): insert into review (cuisine_type,personal_notes,personal_rating,restaurant_name) values (?,?,?,?)
[DEBUG] 2025-10-15 11:47:24.065 [main] AbstractEntityPersister -  Update (0): update review set cuisine_type=?,personal_notes=?,personal_rating=?,restaurant_name=? where id=?
[DEBUG] 2025-10-15 11:47:24.065 [main] AbstractEntityPersister -  Delete (0): delete from review where id=?
[DEBUG] 2025-10-15 11:47:24.065 [main] create - Created new SQL alias : p1_0
[DEBUG] 2025-10-15 11:47:24.065 [main] create - Registration of TableGroup [StandardTableGroup(org.hungrybadger.entity.Photo)] with identifierForTableGroup [org.hungrybadger.entity.Photo] for NavigablePath [org.hungrybadger.entity.Photo] 
[DEBUG] 2025-10-15 11:47:24.068 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@ccd000e] with identifierForTableGroup [org.hungrybadger.entity.Photo.review] for NavigablePath [org.hungrybadger.entity.Photo.review] 
[DEBUG] 2025-10-15 11:47:24.070 [main] create - Created new SQL alias : r1_0
[DEBUG] 2025-10-15 11:47:24.071 [main] AST - DomainResult Graph:
 \-EntityResultImpl [org.hungrybadger.entity.Photo]
 |  +-BasicFetch [org.hungrybadger.entity.Photo.imagePath]
 |  \-EntityFetchJoinedImpl [org.hungrybadger.entity.Photo.review]

[DEBUG] 2025-10-15 11:47:24.072 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.hungrybadger.entity.Photo) {
          primaryTableReference : photo as p1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.hungrybadger.entity.Photo.review) {
              primaryTableReference : review as r1_0
            }
          }
        }
      }
    }

[DEBUG] 2025-10-15 11:47:24.072 [main] AbstractEntityPersister - Static SQL for entity: org.hungrybadger.entity.Photo
[DEBUG] 2025-10-15 11:47:24.072 [main] AbstractEntityPersister -  Version select: select id from photo where id=?
[DEBUG] 2025-10-15 11:47:24.072 [main] AbstractEntityPersister -  Insert (0): insert into photo (image_path,review_id) values (?,?)
[DEBUG] 2025-10-15 11:47:24.072 [main] AbstractEntityPersister -  Update (0): update photo set image_path=?,review_id=? where id=?
[DEBUG] 2025-10-15 11:47:24.072 [main] AbstractEntityPersister -  Delete (0): delete from photo where id=?
[DEBUG] 2025-10-15 11:47:24.074 [main] create - Created new SQL alias : p1_0
[DEBUG] 2025-10-15 11:47:24.074 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@7d18338b] with identifierForTableGroup [org.hungrybadger.entity.Review.photos] for NavigablePath [org.hungrybadger.entity.Review.photos] 
[DEBUG] 2025-10-15 11:47:24.074 [main] create - Registration of TableGroup [StandardTableGroup(org.hungrybadger.entity.Review.photos.{element})] with identifierForTableGroup [org.hungrybadger.entity.Review.photos.{element}] for NavigablePath [org.hungrybadger.entity.Review.photos.{element}] 
[DEBUG] 2025-10-15 11:47:24.083 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@106459d9] with identifierForTableGroup [org.hungrybadger.entity.Review.photos.{element}.review] for NavigablePath [org.hungrybadger.entity.Review.photos.{element}.review] 
[DEBUG] 2025-10-15 11:47:24.086 [main] AST - DomainResult Graph:
 \-CollectionDomainResult [org.hungrybadger.entity.Review.photos]

[DEBUG] 2025-10-15 11:47:24.086 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (p1 : org.hungrybadger.entity.Review.photos) {
          primaryTableReference : photo as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (r1 : org.hungrybadger.entity.Review.photos.{element}.review) {
            }
          }
        }
      }
    }

[DEBUG] 2025-10-15 11:47:24.086 [main] mutation - Static SQL for collection: org.hungrybadger.entity.Review.photos
[DEBUG] 2025-10-15 11:47:24.123 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2025-10-15 11:47:24.124 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2025-10-15 11:47:24.131 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2025-10-15 11:47:24.131 [main] JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[DEBUG] 2025-10-15 11:47:24.132 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7377781e] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@d13379e]
[DEBUG] 2025-10-15 11:47:24.134 [main] NamedObjectRepository - Checking 0 named HQL queries
[DEBUG] 2025-10-15 11:47:24.134 [main] NamedObjectRepository - Checking 0 named SQL queries
[DEBUG] 2025-10-15 11:47:24.134 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2025-10-15 11:47:24.134 [main] SchemaManagementToolCoordinator - No actions found; doing nothing
[DEBUG] 2025-10-15 11:47:24.138 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@681d704e
[DEBUG] 2025-10-15 11:47:24.138 [main] SessionFactoryRegistry - Registering SessionFactory: 08549216-d9f4-4405-9d45-9e6c18615de2 (<unnamed>)
[DEBUG] 2025-10-15 11:47:24.138 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2025-10-15 11:47:24.138 [main] SessionFactoryImpl - Instantiated SessionFactory
[DEBUG] 2025-10-15 11:47:24.187 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2025-10-15 11:47:24.208 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2025-10-15 11:47:24.229 [main] results - Initializer list:
	  org.hungrybadger.entity.Photo.review -> EntityJoinedFetchInitializer(org.hungrybadger.entity.Photo.review)@508397424 (ToOneAttributeMapping(NavigableRole[org.hungrybadger.entity.Photo.review])@347419231)
	  org.hungrybadger.entity.Photo.review.photos -> DelayedCollectionInitializer(org.hungrybadger.entity.Photo.review.photos)@155833159 (PluralAttribute(org.hungrybadger.entity.Review.photos))
	  org.hungrybadger.entity.Photo -> EntityResultInitializer(org.hungrybadger.entity.Photo)@257614494 (SingleTableEntityPersister(org.hungrybadger.entity.Photo))

[DEBUG] 2025-10-15 11:47:24.235 [main] SQL - select p1_0.id,p1_0.image_path,p1_0.review_id,r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from photo p1_0 join review r1_0 on r1_0.id=p1_0.review_id where p1_0.id=?
[DEBUG] 2025-10-15 11:47:24.258 [main] results - Extracted JDBC value [3] - [2]
[DEBUG] 2025-10-15 11:47:24.258 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.hungrybadger.entity.Photo.review): 2
[DEBUG] 2025-10-15 11:47:24.258 [main] results - Extracted JDBC value [2] - [2]
[DEBUG] 2025-10-15 11:47:24.258 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Photo): 2
[DEBUG] 2025-10-15 11:47:24.258 [main] results - Extracted JDBC value [3] - [2]
[DEBUG] 2025-10-15 11:47:24.260 [main] collection - (DelayedCollectionInitializer) Current row collection key : org.hungrybadger.entity.Photo.review.photos#2
[DEBUG] 2025-10-15 11:47:24.262 [main] entity - (EntityJoinedFetchInitializer) Created new entity instance [org.hungrybadger.entity.Photo.review#2] : 481577519
[DEBUG] 2025-10-15 11:47:24.262 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Photo#2] : 527826205
[DEBUG] 2025-10-15 11:47:24.270 [main] results - Extracted JDBC value [4] - [American]
[DEBUG] 2025-10-15 11:47:24.270 [main] results - Extracted JDBC value [5] - [Wraps, good after a long day]
[DEBUG] 2025-10-15 11:47:24.271 [main] results - Extracted JDBC value [6] - [4]
[DEBUG] 2025-10-15 11:47:24.271 [main] results - Extracted JDBC value [7] - [Conrads]
[DEBUG] 2025-10-15 11:47:24.276 [main] entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.hungrybadger.entity.Photo.review#2
[DEBUG] 2025-10-15 11:47:24.276 [main] results - Extracted JDBC value [1] - [images/conrads_wrap.jpg]
[DEBUG] 2025-10-15 11:47:24.277 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Photo#2
[DEBUG] 2025-10-15 11:47:24.277 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@16949dfa
[DEBUG] 2025-10-15 11:47:24.279 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 11:47:24.283 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2025-10-15 11:47:24.283 [main] TransactionImpl - begin
[DEBUG] 2025-10-15 11:47:24.294 [main] TransactionImpl - committing
[DEBUG] 2025-10-15 11:47:24.304 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2025-10-15 11:47:24.306 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2025-10-15 11:47:24.311 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
[DEBUG] 2025-10-15 11:47:24.311 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2025-10-15 11:47:24.316 [main] EntityPrinter - Listing entities:
[DEBUG] 2025-10-15 11:47:24.316 [main] EntityPrinter - org.hungrybadger.entity.Photo{imagePath=images/conrads_wrap.jpg, review=org.hungrybadger.entity.Review#2, id=2}
[DEBUG] 2025-10-15 11:47:24.325 [main] SQL - delete from photo where id=?
[DEBUG] 2025-10-15 11:47:24.332 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 11:47:24.333 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 11:47:24.334 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2025-10-15 11:47:24.334 [main] results - Initializer list:
	  org.hungrybadger.entity.Photo.review -> EntityJoinedFetchInitializer(org.hungrybadger.entity.Photo.review)@1042853700 (ToOneAttributeMapping(NavigableRole[org.hungrybadger.entity.Photo.review])@347419231)
	  org.hungrybadger.entity.Photo.review.photos -> DelayedCollectionInitializer(org.hungrybadger.entity.Photo.review.photos)@864622150 (PluralAttribute(org.hungrybadger.entity.Review.photos))
	  org.hungrybadger.entity.Photo -> EntityResultInitializer(org.hungrybadger.entity.Photo)@1004271827 (SingleTableEntityPersister(org.hungrybadger.entity.Photo))

[DEBUG] 2025-10-15 11:47:24.334 [main] SQL - select p1_0.id,p1_0.image_path,p1_0.review_id,r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from photo p1_0 join review r1_0 on r1_0.id=p1_0.review_id where p1_0.id=?
[DEBUG] 2025-10-15 11:47:24.335 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 11:47:24.550 [main] create - Created new SQL alias : p1_0
[DEBUG] 2025-10-15 11:47:24.550 [main] create - Registration of TableGroup [StandardTableGroup(org.hungrybadger.entity.Photo(12562352571900))] with identifierForTableGroup [org.hungrybadger.entity.Photo] for NavigablePath [org.hungrybadger.entity.Photo] 
[DEBUG] 2025-10-15 11:47:24.559 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4c000cc4] with identifierForTableGroup [org.hungrybadger.entity.Photo.review] for NavigablePath [org.hungrybadger.entity.Photo.review] 
[DEBUG] 2025-10-15 11:47:24.561 [main] AST - DomainResult Graph:
 \-EntityResultImpl [org.hungrybadger.entity.Photo(12562352571900)]
 |  +-BasicFetch [org.hungrybadger.entity.Photo(12562352571900).imagePath]
 |  \-CircularFetchImpl [org.hungrybadger.entity.Photo(12562352571900).review]

[DEBUG] 2025-10-15 11:47:24.561 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.hungrybadger.entity.Photo(12562352571900)) {
          primaryTableReference : photo as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (r1 : org.hungrybadger.entity.Photo(12562352571900).review) {
            }
          }
        }
      }
    }

[DEBUG] 2025-10-15 11:47:24.563 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
[DEBUG] 2025-10-15 11:47:24.567 [main] results - Initializer list:
	  org.hungrybadger.entity.Photo(12562352571900).review -> EntitySelectFetchInitializer(org.hungrybadger.entity.Photo(12562352571900).review)@243076530 (ToOneAttributeMapping(NavigableRole[org.hungrybadger.entity.Photo.review])@347419231)
	  org.hungrybadger.entity.Photo(12562352571900) -> EntityResultInitializer(org.hungrybadger.entity.Photo(12562352571900))@1245825773 (SingleTableEntityPersister(org.hungrybadger.entity.Photo))

[DEBUG] 2025-10-15 11:47:24.568 [main] SQL - select p1_0.id,p1_0.image_path,p1_0.review_id from photo p1_0
[DEBUG] 2025-10-15 11:47:24.569 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2025-10-15 11:47:24.570 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Photo(12562352571900)): 1
[DEBUG] 2025-10-15 11:47:24.570 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Photo(12562352571900)#1] : 1993314761
[DEBUG] 2025-10-15 11:47:24.570 [main] results - Extracted JDBC value [2] - [1]
[DEBUG] 2025-10-15 11:47:24.570 [main] entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.hungrybadger.entity.Photo(12562352571900).review#1) : 1
[DEBUG] 2025-10-15 11:47:24.570 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2025-10-15 11:47:24.570 [main] results - Initializer list:
	  org.hungrybadger.entity.Review.photos -> DelayedCollectionInitializer(org.hungrybadger.entity.Review.photos)@1958731110 (PluralAttribute(org.hungrybadger.entity.Review.photos))
	  org.hungrybadger.entity.Review -> EntityResultInitializer(org.hungrybadger.entity.Review)@1875372072 (SingleTableEntityPersister(org.hungrybadger.entity.Review))

[DEBUG] 2025-10-15 11:47:24.570 [main] SQL - select r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from review r1_0 where r1_0.id=?
[DEBUG] 2025-10-15 11:47:24.572 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review): 1
[DEBUG] 2025-10-15 11:47:24.572 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2025-10-15 11:47:24.572 [main] collection - (DelayedCollectionInitializer) Current row collection key : org.hungrybadger.entity.Review.photos#1
[DEBUG] 2025-10-15 11:47:24.572 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Review#1] : 1098139353
[DEBUG] 2025-10-15 11:47:24.572 [main] results - Extracted JDBC value [1] - [Japanese]
[DEBUG] 2025-10-15 11:47:24.573 [main] results - Extracted JDBC value [2] - [Good cheap rolls. Togo or sit down are both great]
[DEBUG] 2025-10-15 11:47:24.573 [main] results - Extracted JDBC value [3] - [5]
[DEBUG] 2025-10-15 11:47:24.573 [main] results - Extracted JDBC value [4] - [Sushi Express]
[DEBUG] 2025-10-15 11:47:24.573 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Review#1
[DEBUG] 2025-10-15 11:47:24.573 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1e7d3d87
[DEBUG] 2025-10-15 11:47:24.573 [main] entity - (EntitySelectFetchInitializer) Entity [org.hungrybadger.entity.Photo(12562352571900).review#1] : 1 has being loaded by session.internalLoad.
[DEBUG] 2025-10-15 11:47:24.573 [main] results - Extracted JDBC value [1] - [images/sushi_express_rolls.jpg]
[DEBUG] 2025-10-15 11:47:24.573 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Photo(12562352571900)#1
[DEBUG] 2025-10-15 11:47:24.573 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7e76a66f
[DEBUG] 2025-10-15 11:47:24.573 [main] results - Extracted JDBC value [0] - [2]
[DEBUG] 2025-10-15 11:47:24.573 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Photo(12562352571900)): 2
[DEBUG] 2025-10-15 11:47:24.573 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Photo(12562352571900)#2] : 1914928104
[DEBUG] 2025-10-15 11:47:24.573 [main] results - Extracted JDBC value [2] - [2]
[DEBUG] 2025-10-15 11:47:24.573 [main] entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.hungrybadger.entity.Photo(12562352571900).review#2) : 2
[DEBUG] 2025-10-15 11:47:24.574 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2025-10-15 11:47:24.574 [main] results - Initializer list:
	  org.hungrybadger.entity.Review.photos -> DelayedCollectionInitializer(org.hungrybadger.entity.Review.photos)@96858414 (PluralAttribute(org.hungrybadger.entity.Review.photos))
	  org.hungrybadger.entity.Review -> EntityResultInitializer(org.hungrybadger.entity.Review)@603456365 (SingleTableEntityPersister(org.hungrybadger.entity.Review))

[DEBUG] 2025-10-15 11:47:24.574 [main] SQL - select r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from review r1_0 where r1_0.id=?
[DEBUG] 2025-10-15 11:47:24.575 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review): 2
[DEBUG] 2025-10-15 11:47:24.575 [main] results - Extracted JDBC value [0] - [2]
[DEBUG] 2025-10-15 11:47:24.575 [main] collection - (DelayedCollectionInitializer) Current row collection key : org.hungrybadger.entity.Review.photos#2
[DEBUG] 2025-10-15 11:47:24.575 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Review#2] : 251788397
[DEBUG] 2025-10-15 11:47:24.575 [main] results - Extracted JDBC value [1] - [American]
[DEBUG] 2025-10-15 11:47:24.575 [main] results - Extracted JDBC value [2] - [Wraps, good after a long day]
[DEBUG] 2025-10-15 11:47:24.575 [main] results - Extracted JDBC value [3] - [4]
[DEBUG] 2025-10-15 11:47:24.575 [main] results - Extracted JDBC value [4] - [Conrads]
[DEBUG] 2025-10-15 11:47:24.575 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Review#2
[DEBUG] 2025-10-15 11:47:24.575 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@688d2a5d
[DEBUG] 2025-10-15 11:47:24.576 [main] entity - (EntitySelectFetchInitializer) Entity [org.hungrybadger.entity.Photo(12562352571900).review#2] : 2 has being loaded by session.internalLoad.
[DEBUG] 2025-10-15 11:47:24.576 [main] results - Extracted JDBC value [1] - [images/conrads_wrap.jpg]
[DEBUG] 2025-10-15 11:47:24.576 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Photo(12562352571900)#2
[DEBUG] 2025-10-15 11:47:24.576 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7e76a66f
[DEBUG] 2025-10-15 11:47:24.576 [main] results - Extracted JDBC value [0] - [3]
[DEBUG] 2025-10-15 11:47:24.576 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Photo(12562352571900)): 3
[DEBUG] 2025-10-15 11:47:24.576 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Photo(12562352571900)#3] : 675463320
[DEBUG] 2025-10-15 11:47:24.576 [main] results - Extracted JDBC value [2] - [3]
[DEBUG] 2025-10-15 11:47:24.576 [main] entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.hungrybadger.entity.Photo(12562352571900).review#3) : 3
[DEBUG] 2025-10-15 11:47:24.577 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2025-10-15 11:47:24.577 [main] results - Initializer list:
	  org.hungrybadger.entity.Review.photos -> DelayedCollectionInitializer(org.hungrybadger.entity.Review.photos)@673231721 (PluralAttribute(org.hungrybadger.entity.Review.photos))
	  org.hungrybadger.entity.Review -> EntityResultInitializer(org.hungrybadger.entity.Review)@1186076210 (SingleTableEntityPersister(org.hungrybadger.entity.Review))

[DEBUG] 2025-10-15 11:47:24.577 [main] SQL - select r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from review r1_0 where r1_0.id=?
[DEBUG] 2025-10-15 11:47:24.578 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review): 3
[DEBUG] 2025-10-15 11:47:24.578 [main] results - Extracted JDBC value [0] - [3]
[DEBUG] 2025-10-15 11:47:24.578 [main] collection - (DelayedCollectionInitializer) Current row collection key : org.hungrybadger.entity.Review.photos#3
[DEBUG] 2025-10-15 11:47:24.578 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Review#3] : 2116089059
[DEBUG] 2025-10-15 11:47:24.578 [main] results - Extracted JDBC value [1] - [American]
[DEBUG] 2025-10-15 11:47:24.578 [main] results - Extracted JDBC value [2] - [Mac and Cheese Slice for the win!]
[DEBUG] 2025-10-15 11:47:24.578 [main] results - Extracted JDBC value [3] - [5]
[DEBUG] 2025-10-15 11:47:24.578 [main] results - Extracted JDBC value [4] - [Ians Pizza]
[DEBUG] 2025-10-15 11:47:24.578 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Review#3
[DEBUG] 2025-10-15 11:47:24.578 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4f6ff62
[DEBUG] 2025-10-15 11:47:24.578 [main] entity - (EntitySelectFetchInitializer) Entity [org.hungrybadger.entity.Photo(12562352571900).review#3] : 3 has being loaded by session.internalLoad.
[DEBUG] 2025-10-15 11:47:24.579 [main] results - Extracted JDBC value [1] - [images/ians_mac_slice.jpg]
[DEBUG] 2025-10-15 11:47:24.579 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Photo(12562352571900)#3
[DEBUG] 2025-10-15 11:47:24.579 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7e76a66f
[DEBUG] 2025-10-15 11:47:24.579 [main] results - Extracted JDBC value [0] - [4]
[DEBUG] 2025-10-15 11:47:24.579 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Photo(12562352571900)): 4
[DEBUG] 2025-10-15 11:47:24.579 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Photo(12562352571900)#4] : 476238509
[DEBUG] 2025-10-15 11:47:24.579 [main] results - Extracted JDBC value [2] - [3]
[DEBUG] 2025-10-15 11:47:24.579 [main] entity - (EntitySelectFetchInitializer) Found existing loading entry [org.hungrybadger.entity.Photo(12562352571900).review#3] - using loading instance
[DEBUG] 2025-10-15 11:47:24.579 [main] results - Extracted JDBC value [1] - [images/ians_inside.jpg]
[DEBUG] 2025-10-15 11:47:24.579 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Photo(12562352571900)#4
[DEBUG] 2025-10-15 11:47:24.579 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7e76a66f
[DEBUG] 2025-10-15 11:47:24.580 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 11:47:24.580 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 11:47:24.713 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2025-10-15 11:47:24.713 [main] results - Initializer list:
	  org.hungrybadger.entity.Review.photos -> DelayedCollectionInitializer(org.hungrybadger.entity.Review.photos)@332464215 (PluralAttribute(org.hungrybadger.entity.Review.photos))
	  org.hungrybadger.entity.Review -> EntityResultInitializer(org.hungrybadger.entity.Review)@1720994940 (SingleTableEntityPersister(org.hungrybadger.entity.Review))

[DEBUG] 2025-10-15 11:47:24.713 [main] SQL - select r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from review r1_0 where r1_0.id=?
[DEBUG] 2025-10-15 11:47:24.715 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review): 3
[DEBUG] 2025-10-15 11:47:24.715 [main] results - Extracted JDBC value [0] - [3]
[DEBUG] 2025-10-15 11:47:24.715 [main] collection - (DelayedCollectionInitializer) Current row collection key : org.hungrybadger.entity.Review.photos#3
[DEBUG] 2025-10-15 11:47:24.716 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Review#3] : 699787227
[DEBUG] 2025-10-15 11:47:24.716 [main] results - Extracted JDBC value [1] - [American]
[DEBUG] 2025-10-15 11:47:24.716 [main] results - Extracted JDBC value [2] - [Mac and Cheese Slice for the win!]
[DEBUG] 2025-10-15 11:47:24.716 [main] results - Extracted JDBC value [3] - [5]
[DEBUG] 2025-10-15 11:47:24.716 [main] results - Extracted JDBC value [4] - [Ians Pizza]
[DEBUG] 2025-10-15 11:47:24.716 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Review#3
[DEBUG] 2025-10-15 11:47:24.716 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1468e880
[DEBUG] 2025-10-15 11:47:24.716 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 11:47:24.853 [main] create - Created new SQL alias : p1_0
[DEBUG] 2025-10-15 11:47:24.853 [main] create - Registration of TableGroup [StandardTableGroup(org.hungrybadger.entity.Photo(12562714679000))] with identifierForTableGroup [org.hungrybadger.entity.Photo] for NavigablePath [org.hungrybadger.entity.Photo] 
[DEBUG] 2025-10-15 11:47:24.854 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2a259f6f] with identifierForTableGroup [org.hungrybadger.entity.Photo.review] for NavigablePath [org.hungrybadger.entity.Photo.review] 
[DEBUG] 2025-10-15 11:47:24.858 [main] BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@79ec57b8
[DEBUG] 2025-10-15 11:47:24.858 [main] BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.hungrybadger.entity.Photo(12562714679000).imagePath) 
[DEBUG] 2025-10-15 11:47:24.861 [main] AST - DomainResult Graph:
 \-EntityResultImpl [org.hungrybadger.entity.Photo(12562714679000)]
 |  +-BasicFetch [org.hungrybadger.entity.Photo(12562714679000).imagePath]
 |  \-CircularFetchImpl [org.hungrybadger.entity.Photo(12562714679000).review]

[DEBUG] 2025-10-15 11:47:24.861 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.hungrybadger.entity.Photo(12562714679000)) {
          primaryTableReference : photo as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (r1 : org.hungrybadger.entity.Photo(12562714679000).review) {
            }
          }
        }
      }
    }

[DEBUG] 2025-10-15 11:47:24.862 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
[DEBUG] 2025-10-15 11:47:24.863 [main] results - Initializer list:
	  org.hungrybadger.entity.Photo(12562714679000) -> EntityResultInitializer(org.hungrybadger.entity.Photo(12562714679000))@77780590 (SingleTableEntityPersister(org.hungrybadger.entity.Photo))
	  org.hungrybadger.entity.Photo(12562714679000).review -> EntitySelectFetchInitializer(org.hungrybadger.entity.Photo(12562714679000).review)@81788921 (ToOneAttributeMapping(NavigableRole[org.hungrybadger.entity.Photo.review])@347419231)

[DEBUG] 2025-10-15 11:47:24.863 [main] SQL - select p1_0.id,p1_0.image_path,p1_0.review_id from photo p1_0 where p1_0.image_path like ? escape ''
[DEBUG] 2025-10-15 11:47:24.865 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2025-10-15 11:47:24.865 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Photo(12562714679000)): 1
[DEBUG] 2025-10-15 11:47:24.865 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Photo(12562714679000)#1] : 1253600042
[DEBUG] 2025-10-15 11:47:24.865 [main] results - Extracted JDBC value [2] - [1]
[DEBUG] 2025-10-15 11:47:24.865 [main] entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.hungrybadger.entity.Photo(12562714679000).review#1) : 1
[DEBUG] 2025-10-15 11:47:24.865 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2025-10-15 11:47:24.865 [main] results - Initializer list:
	  org.hungrybadger.entity.Review.photos -> DelayedCollectionInitializer(org.hungrybadger.entity.Review.photos)@2006168925 (PluralAttribute(org.hungrybadger.entity.Review.photos))
	  org.hungrybadger.entity.Review -> EntityResultInitializer(org.hungrybadger.entity.Review)@717874492 (SingleTableEntityPersister(org.hungrybadger.entity.Review))

[DEBUG] 2025-10-15 11:47:24.865 [main] SQL - select r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from review r1_0 where r1_0.id=?
[DEBUG] 2025-10-15 11:47:24.868 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review): 1
[DEBUG] 2025-10-15 11:47:24.868 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2025-10-15 11:47:24.868 [main] collection - (DelayedCollectionInitializer) Current row collection key : org.hungrybadger.entity.Review.photos#1
[DEBUG] 2025-10-15 11:47:24.868 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Review#1] : 63221076
[DEBUG] 2025-10-15 11:47:24.868 [main] results - Extracted JDBC value [1] - [Japanese]
[DEBUG] 2025-10-15 11:47:24.868 [main] results - Extracted JDBC value [2] - [Good cheap rolls. Togo or sit down are both great]
[DEBUG] 2025-10-15 11:47:24.868 [main] results - Extracted JDBC value [3] - [5]
[DEBUG] 2025-10-15 11:47:24.868 [main] results - Extracted JDBC value [4] - [Sushi Express]
[DEBUG] 2025-10-15 11:47:24.868 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Review#1
[DEBUG] 2025-10-15 11:47:24.868 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@498b611e
[DEBUG] 2025-10-15 11:47:24.868 [main] entity - (EntitySelectFetchInitializer) Entity [org.hungrybadger.entity.Photo(12562714679000).review#1] : 1 has being loaded by session.internalLoad.
[DEBUG] 2025-10-15 11:47:24.868 [main] results - Extracted JDBC value [1] - [images/sushi_express_rolls.jpg]
[DEBUG] 2025-10-15 11:47:24.869 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Photo(12562714679000)#1
[DEBUG] 2025-10-15 11:47:24.869 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6dde1bf5
[DEBUG] 2025-10-15 11:47:24.869 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 11:47:24.869 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 11:47:24.979 [main] create - Created new SQL alias : p1_0
[DEBUG] 2025-10-15 11:47:24.979 [main] create - Registration of TableGroup [StandardTableGroup(org.hungrybadger.entity.Photo(12562851227400))] with identifierForTableGroup [org.hungrybadger.entity.Photo] for NavigablePath [org.hungrybadger.entity.Photo] 
[DEBUG] 2025-10-15 11:47:24.979 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@614d7fbf] with identifierForTableGroup [org.hungrybadger.entity.Photo.review] for NavigablePath [org.hungrybadger.entity.Photo.review] 
[DEBUG] 2025-10-15 11:47:24.980 [main] BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@12e3f4ae
[DEBUG] 2025-10-15 11:47:24.980 [main] BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.hungrybadger.entity.Photo(12562851227400).imagePath) 
[DEBUG] 2025-10-15 11:47:24.981 [main] AST - DomainResult Graph:
 \-EntityResultImpl [org.hungrybadger.entity.Photo(12562851227400)]
 |  +-BasicFetch [org.hungrybadger.entity.Photo(12562851227400).imagePath]
 |  \-CircularFetchImpl [org.hungrybadger.entity.Photo(12562851227400).review]

[DEBUG] 2025-10-15 11:47:24.981 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.hungrybadger.entity.Photo(12562851227400)) {
          primaryTableReference : photo as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (r1 : org.hungrybadger.entity.Photo(12562851227400).review) {
            }
          }
        }
      }
    }

[DEBUG] 2025-10-15 11:47:24.982 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
[DEBUG] 2025-10-15 11:47:24.982 [main] results - Initializer list:
	  org.hungrybadger.entity.Photo(12562851227400) -> EntityResultInitializer(org.hungrybadger.entity.Photo(12562851227400))@1982652230 (SingleTableEntityPersister(org.hungrybadger.entity.Photo))
	  org.hungrybadger.entity.Photo(12562851227400).review -> EntitySelectFetchInitializer(org.hungrybadger.entity.Photo(12562851227400).review)@1424575977 (ToOneAttributeMapping(NavigableRole[org.hungrybadger.entity.Photo.review])@347419231)

[DEBUG] 2025-10-15 11:47:24.982 [main] SQL - select p1_0.id,p1_0.image_path,p1_0.review_id from photo p1_0 where p1_0.image_path=?
[DEBUG] 2025-10-15 11:47:24.984 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 11:47:24.985 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 11:47:25.105 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2025-10-15 11:47:25.105 [main] results - Initializer list:
	  org.hungrybadger.entity.Photo.review -> EntityJoinedFetchInitializer(org.hungrybadger.entity.Photo.review)@1901543742 (ToOneAttributeMapping(NavigableRole[org.hungrybadger.entity.Photo.review])@347419231)
	  org.hungrybadger.entity.Photo.review.photos -> DelayedCollectionInitializer(org.hungrybadger.entity.Photo.review.photos)@843444187 (PluralAttribute(org.hungrybadger.entity.Review.photos))
	  org.hungrybadger.entity.Photo -> EntityResultInitializer(org.hungrybadger.entity.Photo)@789479336 (SingleTableEntityPersister(org.hungrybadger.entity.Photo))

[DEBUG] 2025-10-15 11:47:25.105 [main] SQL - select p1_0.id,p1_0.image_path,p1_0.review_id,r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from photo p1_0 join review r1_0 on r1_0.id=p1_0.review_id where p1_0.id=?
[DEBUG] 2025-10-15 11:47:25.108 [main] results - Extracted JDBC value [3] - [1]
[DEBUG] 2025-10-15 11:47:25.108 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.hungrybadger.entity.Photo.review): 1
[DEBUG] 2025-10-15 11:47:25.108 [main] results - Extracted JDBC value [2] - [1]
[DEBUG] 2025-10-15 11:47:25.108 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Photo): 1
[DEBUG] 2025-10-15 11:47:25.108 [main] results - Extracted JDBC value [3] - [1]
[DEBUG] 2025-10-15 11:47:25.108 [main] collection - (DelayedCollectionInitializer) Current row collection key : org.hungrybadger.entity.Photo.review.photos#1
[DEBUG] 2025-10-15 11:47:25.108 [main] entity - (EntityJoinedFetchInitializer) Created new entity instance [org.hungrybadger.entity.Photo.review#1] : 480975330
[DEBUG] 2025-10-15 11:47:25.108 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Photo#1] : 1752820099
[DEBUG] 2025-10-15 11:47:25.109 [main] results - Extracted JDBC value [4] - [Japanese]
[DEBUG] 2025-10-15 11:47:25.109 [main] results - Extracted JDBC value [5] - [Good cheap rolls. Togo or sit down are both great]
[DEBUG] 2025-10-15 11:47:25.109 [main] results - Extracted JDBC value [6] - [5]
[DEBUG] 2025-10-15 11:47:25.109 [main] results - Extracted JDBC value [7] - [Sushi Express]
[DEBUG] 2025-10-15 11:47:25.109 [main] entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.hungrybadger.entity.Photo.review#1
[DEBUG] 2025-10-15 11:47:25.109 [main] results - Extracted JDBC value [1] - [images/sushi_express_rolls.jpg]
[DEBUG] 2025-10-15 11:47:25.109 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Photo#1
[DEBUG] 2025-10-15 11:47:25.109 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@45d38165
[DEBUG] 2025-10-15 11:47:25.109 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 11:47:25.253 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2025-10-15 11:47:25.253 [main] results - Initializer list:
	  org.hungrybadger.entity.Photo.review -> EntityJoinedFetchInitializer(org.hungrybadger.entity.Photo.review)@2072818307 (ToOneAttributeMapping(NavigableRole[org.hungrybadger.entity.Photo.review])@347419231)
	  org.hungrybadger.entity.Photo.review.photos -> DelayedCollectionInitializer(org.hungrybadger.entity.Photo.review.photos)@951404180 (PluralAttribute(org.hungrybadger.entity.Review.photos))
	  org.hungrybadger.entity.Photo -> EntityResultInitializer(org.hungrybadger.entity.Photo)@1981414375 (SingleTableEntityPersister(org.hungrybadger.entity.Photo))

[DEBUG] 2025-10-15 11:47:25.253 [main] SQL - select p1_0.id,p1_0.image_path,p1_0.review_id,r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from photo p1_0 join review r1_0 on r1_0.id=p1_0.review_id where p1_0.id=?
[DEBUG] 2025-10-15 11:47:25.256 [main] results - Extracted JDBC value [3] - [1]
[DEBUG] 2025-10-15 11:47:25.256 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.hungrybadger.entity.Photo.review): 1
[DEBUG] 2025-10-15 11:47:25.256 [main] results - Extracted JDBC value [2] - [1]
[DEBUG] 2025-10-15 11:47:25.256 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Photo): 1
[DEBUG] 2025-10-15 11:47:25.256 [main] results - Extracted JDBC value [3] - [1]
[DEBUG] 2025-10-15 11:47:25.256 [main] collection - (DelayedCollectionInitializer) Current row collection key : org.hungrybadger.entity.Photo.review.photos#1
[DEBUG] 2025-10-15 11:47:25.256 [main] entity - (EntityJoinedFetchInitializer) Created new entity instance [org.hungrybadger.entity.Photo.review#1] : 1779341308
[DEBUG] 2025-10-15 11:47:25.256 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Photo#1] : 1713836982
[DEBUG] 2025-10-15 11:47:25.256 [main] results - Extracted JDBC value [4] - [Japanese]
[DEBUG] 2025-10-15 11:47:25.256 [main] results - Extracted JDBC value [5] - [Good cheap rolls. Togo or sit down are both great]
[DEBUG] 2025-10-15 11:47:25.256 [main] results - Extracted JDBC value [6] - [5]
[DEBUG] 2025-10-15 11:47:25.256 [main] results - Extracted JDBC value [7] - [Sushi Express]
[DEBUG] 2025-10-15 11:47:25.256 [main] entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.hungrybadger.entity.Photo.review#1
[DEBUG] 2025-10-15 11:47:25.256 [main] results - Extracted JDBC value [1] - [images/sushi_express_rolls.jpg]
[DEBUG] 2025-10-15 11:47:25.256 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Photo#1
[DEBUG] 2025-10-15 11:47:25.257 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4bca8eaf
[DEBUG] 2025-10-15 11:47:25.257 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 11:47:25.257 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2025-10-15 11:47:25.257 [main] TransactionImpl - begin
[DEBUG] 2025-10-15 11:47:25.261 [main] create - Created new SQL alias : p1_0
[DEBUG] 2025-10-15 11:47:25.261 [main] create - Registration of TableGroup [StandardTableGroup(org.hungrybadger.entity.Photo)] with identifierForTableGroup [org.hungrybadger.entity.Photo] for NavigablePath [org.hungrybadger.entity.Photo] 
[DEBUG] 2025-10-15 11:47:25.261 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@673a9db4] with identifierForTableGroup [org.hungrybadger.entity.Photo.review] for NavigablePath [org.hungrybadger.entity.Photo.review] 
[DEBUG] 2025-10-15 11:47:25.261 [main] create - Created new SQL alias : r1_0
[DEBUG] 2025-10-15 11:47:25.262 [main] AST - DomainResult Graph:
 \-EntityResultImpl [org.hungrybadger.entity.Photo]
 |  +-BasicFetch [org.hungrybadger.entity.Photo.imagePath]
 |  \-EntityFetchJoinedImpl [org.hungrybadger.entity.Photo.review]

[DEBUG] 2025-10-15 11:47:25.263 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.hungrybadger.entity.Photo) {
          primaryTableReference : photo as p1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.hungrybadger.entity.Photo.review) {
              primaryTableReference : review as r1_0
            }
          }
        }
      }
    }

[DEBUG] 2025-10-15 11:47:25.263 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2025-10-15 11:47:25.264 [main] results - Initializer list:
	  org.hungrybadger.entity.Photo.review -> EntityJoinedFetchInitializer(org.hungrybadger.entity.Photo.review)@1075537833 (ToOneAttributeMapping(NavigableRole[org.hungrybadger.entity.Photo.review])@347419231)
	  org.hungrybadger.entity.Photo.review.photos -> SelectEagerCollectionInitializer(org.hungrybadger.entity.Photo.review.photos)@1312744535 (PluralAttribute(org.hungrybadger.entity.Review.photos))
	  org.hungrybadger.entity.Photo -> EntityResultInitializer(org.hungrybadger.entity.Photo)@68904657 (SingleTableEntityPersister(org.hungrybadger.entity.Photo))

[DEBUG] 2025-10-15 11:47:25.265 [main] SQL - select p1_0.id,p1_0.image_path,p1_0.review_id,r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from photo p1_0 join review r1_0 on r1_0.id=p1_0.review_id where p1_0.id=?
[DEBUG] 2025-10-15 11:47:25.265 [main] results - Extracted JDBC value [3] - [1]
[DEBUG] 2025-10-15 11:47:25.265 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.hungrybadger.entity.Photo.review): 1
[DEBUG] 2025-10-15 11:47:25.265 [main] results - Extracted JDBC value [2] - [1]
[DEBUG] 2025-10-15 11:47:25.266 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Photo): 1
[DEBUG] 2025-10-15 11:47:25.266 [main] collection - (SelectEagerCollectionInitializer) Current row collection key : org.hungrybadger.entity.Photo.review.photos#1
[DEBUG] 2025-10-15 11:47:25.266 [main] entity - (EntityJoinedFetchInitializer) Created new entity instance [org.hungrybadger.entity.Photo.review#1] : 30784348
[DEBUG] 2025-10-15 11:47:25.266 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Photo#1] : 2017890623
[DEBUG] 2025-10-15 11:47:25.266 [main] results - Extracted JDBC value [4] - [Japanese]
[DEBUG] 2025-10-15 11:47:25.266 [main] results - Extracted JDBC value [5] - [Good cheap rolls. Togo or sit down are both great]
[DEBUG] 2025-10-15 11:47:25.266 [main] results - Extracted JDBC value [6] - [5]
[DEBUG] 2025-10-15 11:47:25.266 [main] results - Extracted JDBC value [7] - [Sushi Express]
[DEBUG] 2025-10-15 11:47:25.266 [main] entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.hungrybadger.entity.Photo.review#1
[DEBUG] 2025-10-15 11:47:25.266 [main] results - Extracted JDBC value [1] - [images/sushi_express_rolls.jpg]
[DEBUG] 2025-10-15 11:47:25.266 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Photo#1
[DEBUG] 2025-10-15 11:47:25.266 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@60b553f
[DEBUG] 2025-10-15 11:47:25.268 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2025-10-15 11:47:25.270 [main] results - Initializer list:
	  org.hungrybadger.entity.Review.photos.{element} -> EntityJoinedFetchInitializer(org.hungrybadger.entity.Review.photos.{element})@827715984 (EntityCollectionPart(org.hungrybadger.entity.Review.photos#{element})@217814269)
	  org.hungrybadger.entity.Review.photos.{element}.review -> EntitySelectFetchInitializer(org.hungrybadger.entity.Review.photos.{element}.review)@82565330 (ToOneAttributeMapping(NavigableRole[org.hungrybadger.entity.Photo.review])@347419231)
	  org.hungrybadger.entity.Review.photos -> BagInitializer(org.hungrybadger.entity.Review.photos)@1151617540 (PluralAttribute(org.hungrybadger.entity.Review.photos))

[DEBUG] 2025-10-15 11:47:25.270 [main] SQL - select p1_0.review_id,p1_0.id,p1_0.image_path from photo p1_0 where p1_0.review_id=?
[DEBUG] 2025-10-15 11:47:25.271 [main] results - Extracted JDBC value [1] - [1]
[DEBUG] 2025-10-15 11:47:25.272 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review.photos.{element}): 1
[DEBUG] 2025-10-15 11:47:25.272 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2025-10-15 11:47:25.272 [main] collection - (BagInitializer) Current row collection key : org.hungrybadger.entity.Review.photos#1
[DEBUG] 2025-10-15 11:47:25.272 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2025-10-15 11:47:25.273 [main] collection - (BagInitializer) Responsible for loading collection [org.hungrybadger.entity.Review.photos#1] : org.hibernate.collection.spi.PersistentBag@1222272242
[DEBUG] 2025-10-15 11:47:25.273 [main] collection - (BagInitializer) Reading element from row for collection [org.hungrybadger.entity.Review.photos#1] -> org.hibernate.collection.spi.PersistentBag@1222272242
[DEBUG] 2025-10-15 11:47:25.273 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@27746c5e
[DEBUG] 2025-10-15 11:47:25.274 [main] ResultsHelper - Collection fully initialized: [org.hungrybadger.entity.Review.photos#1]
[DEBUG] 2025-10-15 11:47:25.275 [main] TransactionImpl - committing
[DEBUG] 2025-10-15 11:47:25.275 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2025-10-15 11:47:25.278 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2025-10-15 11:47:25.281 [main] Collections - Collection found: [org.hungrybadger.entity.Review.photos#1], was: [org.hungrybadger.entity.Review.photos#1] (initialized)
[DEBUG] 2025-10-15 11:47:25.282 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 2 objects
[DEBUG] 2025-10-15 11:47:25.282 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2025-10-15 11:47:25.282 [main] EntityPrinter - Listing entities:
[DEBUG] 2025-10-15 11:47:25.282 [main] EntityPrinter - org.hungrybadger.entity.Photo{imagePath=/images/sushi_updated.jpg, review=org.hungrybadger.entity.Review#1, id=1}
[DEBUG] 2025-10-15 11:47:25.282 [main] EntityPrinter - org.hungrybadger.entity.Review{personalNotes=Good cheap rolls. Togo or sit down are both great, personalRating=5, restaurantName=Sushi Express, id=1, cuisineType=Japanese, photos=[org.hungrybadger.entity.Photo#1]}
[DEBUG] 2025-10-15 11:47:25.286 [main] SQL - update photo set image_path=?,review_id=? where id=?
[DEBUG] 2025-10-15 11:47:25.294 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 11:47:25.294 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 11:47:25.295 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2025-10-15 11:47:25.295 [main] results - Initializer list:
	  org.hungrybadger.entity.Photo.review -> EntityJoinedFetchInitializer(org.hungrybadger.entity.Photo.review)@1357442420 (ToOneAttributeMapping(NavigableRole[org.hungrybadger.entity.Photo.review])@347419231)
	  org.hungrybadger.entity.Photo.review.photos -> DelayedCollectionInitializer(org.hungrybadger.entity.Photo.review.photos)@1961537655 (PluralAttribute(org.hungrybadger.entity.Review.photos))
	  org.hungrybadger.entity.Photo -> EntityResultInitializer(org.hungrybadger.entity.Photo)@811843176 (SingleTableEntityPersister(org.hungrybadger.entity.Photo))

[DEBUG] 2025-10-15 11:47:25.295 [main] SQL - select p1_0.id,p1_0.image_path,p1_0.review_id,r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from photo p1_0 join review r1_0 on r1_0.id=p1_0.review_id where p1_0.id=?
[DEBUG] 2025-10-15 11:47:25.300 [main] results - Extracted JDBC value [3] - [1]
[DEBUG] 2025-10-15 11:47:25.300 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.hungrybadger.entity.Photo.review): 1
[DEBUG] 2025-10-15 11:47:25.300 [main] results - Extracted JDBC value [2] - [1]
[DEBUG] 2025-10-15 11:47:25.300 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Photo): 1
[DEBUG] 2025-10-15 11:47:25.300 [main] results - Extracted JDBC value [3] - [1]
[DEBUG] 2025-10-15 11:47:25.300 [main] collection - (DelayedCollectionInitializer) Current row collection key : org.hungrybadger.entity.Photo.review.photos#1
[DEBUG] 2025-10-15 11:47:25.300 [main] entity - (EntityJoinedFetchInitializer) Created new entity instance [org.hungrybadger.entity.Photo.review#1] : 655326029
[DEBUG] 2025-10-15 11:47:25.300 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Photo#1] : 1454834922
[DEBUG] 2025-10-15 11:47:25.301 [main] results - Extracted JDBC value [4] - [Japanese]
[DEBUG] 2025-10-15 11:47:25.301 [main] results - Extracted JDBC value [5] - [Good cheap rolls. Togo or sit down are both great]
[DEBUG] 2025-10-15 11:47:25.301 [main] results - Extracted JDBC value [6] - [5]
[DEBUG] 2025-10-15 11:47:25.301 [main] results - Extracted JDBC value [7] - [Sushi Express]
[DEBUG] 2025-10-15 11:47:25.301 [main] entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.hungrybadger.entity.Photo.review#1
[DEBUG] 2025-10-15 11:47:25.301 [main] results - Extracted JDBC value [1] - [/images/sushi_updated.jpg]
[DEBUG] 2025-10-15 11:47:25.301 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Photo#1
[DEBUG] 2025-10-15 11:47:25.301 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@39f68aec
[DEBUG] 2025-10-15 11:47:25.301 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 11:47:25.421 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2025-10-15 11:47:25.422 [main] results - Initializer list:
	  org.hungrybadger.entity.Review.photos -> DelayedCollectionInitializer(org.hungrybadger.entity.Review.photos)@1883380232 (PluralAttribute(org.hungrybadger.entity.Review.photos))
	  org.hungrybadger.entity.Review -> EntityResultInitializer(org.hungrybadger.entity.Review)@1572487132 (SingleTableEntityPersister(org.hungrybadger.entity.Review))

[DEBUG] 2025-10-15 11:47:25.422 [main] SQL - select r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from review r1_0 where r1_0.id=?
[DEBUG] 2025-10-15 11:47:25.424 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review): 1
[DEBUG] 2025-10-15 11:47:25.424 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2025-10-15 11:47:25.424 [main] collection - (DelayedCollectionInitializer) Current row collection key : org.hungrybadger.entity.Review.photos#1
[DEBUG] 2025-10-15 11:47:25.424 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Review#1] : 1325322464
[DEBUG] 2025-10-15 11:47:25.424 [main] results - Extracted JDBC value [1] - [Japanese]
[DEBUG] 2025-10-15 11:47:25.424 [main] results - Extracted JDBC value [2] - [Good cheap rolls. Togo or sit down are both great]
[DEBUG] 2025-10-15 11:47:25.424 [main] results - Extracted JDBC value [3] - [5]
[DEBUG] 2025-10-15 11:47:25.424 [main] results - Extracted JDBC value [4] - [Sushi Express]
[DEBUG] 2025-10-15 11:47:25.424 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Review#1
[DEBUG] 2025-10-15 11:47:25.424 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5c7c75fb
[DEBUG] 2025-10-15 11:47:25.424 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 11:47:25.425 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2025-10-15 11:47:25.425 [main] TransactionImpl - begin
[DEBUG] 2025-10-15 11:47:25.428 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2025-10-15 11:47:25.430 [main] SQL - insert into photo (image_path,review_id) values (?,?)
[DEBUG] 2025-10-15 11:47:25.436 [main] IdentifierGeneratorHelper - Natively generated identity (org.hungrybadger.entity.Photo) : 5
[DEBUG] 2025-10-15 11:47:25.436 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2025-10-15 11:47:25.437 [main] ResourceRegistryStandardImpl - Exception clearing maxRows/queryTimeout [You can't operate on a closed Statement!!!]
[DEBUG] 2025-10-15 11:47:25.439 [main] TransactionImpl - committing
[DEBUG] 2025-10-15 11:47:25.439 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2025-10-15 11:47:25.439 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2025-10-15 11:47:25.439 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2025-10-15 11:47:25.439 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2025-10-15 11:47:25.439 [main] EntityPrinter - Listing entities:
[DEBUG] 2025-10-15 11:47:25.440 [main] EntityPrinter - org.hungrybadger.entity.Photo{imagePath=/images/new_photo.jpg, review=org.hungrybadger.entity.Review#1, id=5}
[DEBUG] 2025-10-15 11:47:25.444 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 11:47:25.444 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 11:47:25.445 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2025-10-15 11:47:25.446 [main] results - Initializer list:
	  org.hungrybadger.entity.Photo.review -> EntityJoinedFetchInitializer(org.hungrybadger.entity.Photo.review)@757788974 (ToOneAttributeMapping(NavigableRole[org.hungrybadger.entity.Photo.review])@347419231)
	  org.hungrybadger.entity.Photo.review.photos -> DelayedCollectionInitializer(org.hungrybadger.entity.Photo.review.photos)@1628801015 (PluralAttribute(org.hungrybadger.entity.Review.photos))
	  org.hungrybadger.entity.Photo -> EntityResultInitializer(org.hungrybadger.entity.Photo)@1292548899 (SingleTableEntityPersister(org.hungrybadger.entity.Photo))

[DEBUG] 2025-10-15 11:47:25.446 [main] SQL - select p1_0.id,p1_0.image_path,p1_0.review_id,r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from photo p1_0 join review r1_0 on r1_0.id=p1_0.review_id where p1_0.id=?
[DEBUG] 2025-10-15 11:47:25.447 [main] results - Extracted JDBC value [3] - [1]
[DEBUG] 2025-10-15 11:47:25.447 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.hungrybadger.entity.Photo.review): 1
[DEBUG] 2025-10-15 11:47:25.447 [main] results - Extracted JDBC value [2] - [1]
[DEBUG] 2025-10-15 11:47:25.447 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Photo): 5
[DEBUG] 2025-10-15 11:47:25.447 [main] results - Extracted JDBC value [3] - [1]
[DEBUG] 2025-10-15 11:47:25.447 [main] collection - (DelayedCollectionInitializer) Current row collection key : org.hungrybadger.entity.Photo.review.photos#1
[DEBUG] 2025-10-15 11:47:25.447 [main] entity - (EntityJoinedFetchInitializer) Created new entity instance [org.hungrybadger.entity.Photo.review#1] : 1442749487
[DEBUG] 2025-10-15 11:47:25.447 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Photo#5] : 897585997
[DEBUG] 2025-10-15 11:47:25.447 [main] results - Extracted JDBC value [4] - [Japanese]
[DEBUG] 2025-10-15 11:47:25.448 [main] results - Extracted JDBC value [5] - [Good cheap rolls. Togo or sit down are both great]
[DEBUG] 2025-10-15 11:47:25.448 [main] results - Extracted JDBC value [6] - [5]
[DEBUG] 2025-10-15 11:47:25.448 [main] results - Extracted JDBC value [7] - [Sushi Express]
[DEBUG] 2025-10-15 11:47:25.448 [main] entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.hungrybadger.entity.Photo.review#1
[DEBUG] 2025-10-15 11:47:25.448 [main] results - Extracted JDBC value [1] - [/images/new_photo.jpg]
[DEBUG] 2025-10-15 11:47:25.448 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Photo#5
[DEBUG] 2025-10-15 11:47:25.448 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7b7e4b20
[DEBUG] 2025-10-15 11:47:25.448 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 11:57:05.051 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2025-10-15 11:57:05.061 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2025-10-15 11:57:05.101 [main] Version - HHH000412: Hibernate ORM core version 6.4.3.Final
[DEBUG] 2025-10-15 11:57:05.103 [main] Environment - HHH000206: 'hibernate.properties' not found
[DEBUG] 2025-10-15 11:57:05.169 [main] LocalXmlResourceResolver - Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
[DEBUG] 2025-10-15 11:57:05.177 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2025-10-15 11:57:05.414 [main] factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2025-10-15 11:57:05.419 [main] factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2025-10-15 11:57:05.420 [main] factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2025-10-15 11:57:05.420 [main] factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2025-10-15 11:57:05.421 [main] factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2025-10-15 11:57:05.421 [main] factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2025-10-15 11:57:05.422 [main] factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2025-10-15 11:57:05.422 [main] factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2025-10-15 11:57:05.424 [main] factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2025-10-15 11:57:05.424 [main] factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2025-10-15 11:57:05.425 [main] factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2025-10-15 11:57:05.425 [main] factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2025-10-15 11:57:05.426 [main] factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2025-10-15 11:57:05.435 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[INFO ] 2025-10-15 11:57:05.436 [main] RegionFactoryInitiator - HHH000026: Second-level cache disabled
[DEBUG] 2025-10-15 11:57:05.563 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7c251f90
[DEBUG] 2025-10-15 11:57:05.563 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7c251f90
[DEBUG] 2025-10-15 11:57:05.563 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@7c251f90
[DEBUG] 2025-10-15 11:57:05.563 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@51841ac6
[DEBUG] 2025-10-15 11:57:05.563 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@51841ac6
[DEBUG] 2025-10-15 11:57:05.563 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@5ba26eb0
[DEBUG] 2025-10-15 11:57:05.563 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@5ba26eb0
[DEBUG] 2025-10-15 11:57:05.563 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@435e60ff
[DEBUG] 2025-10-15 11:57:05.563 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@435e60ff
[DEBUG] 2025-10-15 11:57:05.564 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@17d32e9b
[DEBUG] 2025-10-15 11:57:05.564 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@17d32e9b
[DEBUG] 2025-10-15 11:57:05.564 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@17d32e9b
[DEBUG] 2025-10-15 11:57:05.564 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@66f0548d
[DEBUG] 2025-10-15 11:57:05.564 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@66f0548d
[DEBUG] 2025-10-15 11:57:05.564 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@66f0548d
[DEBUG] 2025-10-15 11:57:05.564 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2e6f610d
[DEBUG] 2025-10-15 11:57:05.564 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2e6f610d
[DEBUG] 2025-10-15 11:57:05.564 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@1e86a5a7
[DEBUG] 2025-10-15 11:57:05.564 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@10afe71a
[DEBUG] 2025-10-15 11:57:05.564 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@10afe71a
[DEBUG] 2025-10-15 11:57:05.564 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@741f8dbe
[DEBUG] 2025-10-15 11:57:05.565 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@212dfd39
[DEBUG] 2025-10-15 11:57:05.565 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@a2ddf26
[DEBUG] 2025-10-15 11:57:05.565 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@a2ddf26
[DEBUG] 2025-10-15 11:57:05.565 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@a2ddf26
[DEBUG] 2025-10-15 11:57:05.565 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@65d57e4e
[DEBUG] 2025-10-15 11:57:05.565 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@65d57e4e
[DEBUG] 2025-10-15 11:57:05.565 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@65d57e4e
[DEBUG] 2025-10-15 11:57:05.565 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@6daf7d37
[DEBUG] 2025-10-15 11:57:05.565 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@6daf7d37
[DEBUG] 2025-10-15 11:57:05.565 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@6daf7d37
[DEBUG] 2025-10-15 11:57:05.566 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@23a5818e
[DEBUG] 2025-10-15 11:57:05.566 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@23a5818e
[DEBUG] 2025-10-15 11:57:05.566 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@23a5818e
[DEBUG] 2025-10-15 11:57:05.566 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@4715ae33
[DEBUG] 2025-10-15 11:57:05.566 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@4715ae33
[DEBUG] 2025-10-15 11:57:05.566 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@4715ae33
[DEBUG] 2025-10-15 11:57:05.566 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@9fc9f91
[DEBUG] 2025-10-15 11:57:05.566 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@9fc9f91
[DEBUG] 2025-10-15 11:57:05.566 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@1fac1d5c
[DEBUG] 2025-10-15 11:57:05.566 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@1fac1d5c
[DEBUG] 2025-10-15 11:57:05.566 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@108a46d6
[DEBUG] 2025-10-15 11:57:05.566 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@108a46d6
[DEBUG] 2025-10-15 11:57:05.567 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@108a46d6
[DEBUG] 2025-10-15 11:57:05.567 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@7a8406c2
[DEBUG] 2025-10-15 11:57:05.567 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@17690e14
[DEBUG] 2025-10-15 11:57:05.567 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@17690e14
[DEBUG] 2025-10-15 11:57:05.567 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@6850b758
[DEBUG] 2025-10-15 11:57:05.567 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@2a2ef072
[DEBUG] 2025-10-15 11:57:05.567 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@2a2ef072
[DEBUG] 2025-10-15 11:57:05.567 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@2a2ef072
[DEBUG] 2025-10-15 11:57:05.567 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@704641e3
[DEBUG] 2025-10-15 11:57:05.567 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@2f00f851
[DEBUG] 2025-10-15 11:57:05.567 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@4207609e
[DEBUG] 2025-10-15 11:57:05.567 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@1f77b5cc
[DEBUG] 2025-10-15 11:57:05.567 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@1f77b5cc
[DEBUG] 2025-10-15 11:57:05.568 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@5d7ca698
[DEBUG] 2025-10-15 11:57:05.568 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@5d7ca698
[DEBUG] 2025-10-15 11:57:05.568 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@75961f16
[DEBUG] 2025-10-15 11:57:05.568 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@c6c82aa
[DEBUG] 2025-10-15 11:57:05.568 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@2e179f3e
[DEBUG] 2025-10-15 11:57:05.568 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@16e7b402
[DEBUG] 2025-10-15 11:57:05.568 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@534c6767
[DEBUG] 2025-10-15 11:57:05.568 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@3bddc676
[DEBUG] 2025-10-15 11:57:05.568 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@29a1505c
[DEBUG] 2025-10-15 11:57:05.568 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@29a1505c
[DEBUG] 2025-10-15 11:57:05.568 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@24db6ce
[DEBUG] 2025-10-15 11:57:05.568 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@24db6ce
[DEBUG] 2025-10-15 11:57:05.569 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@320a8ebf
[DEBUG] 2025-10-15 11:57:05.569 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@320a8ebf
[DEBUG] 2025-10-15 11:57:05.569 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@67b100fe
[DEBUG] 2025-10-15 11:57:05.569 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@67b100fe
[DEBUG] 2025-10-15 11:57:05.569 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@44b18fe4
[DEBUG] 2025-10-15 11:57:05.569 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@44b18fe4
[DEBUG] 2025-10-15 11:57:05.569 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2ba5aa7a
[DEBUG] 2025-10-15 11:57:05.569 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4d3ca6c7
[DEBUG] 2025-10-15 11:57:05.569 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@22e5f96e
[DEBUG] 2025-10-15 11:57:05.569 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@22e5f96e
[DEBUG] 2025-10-15 11:57:05.569 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@6a638c79
[DEBUG] 2025-10-15 11:57:05.569 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6c931d35
[DEBUG] 2025-10-15 11:57:05.569 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@44b194fe
[DEBUG] 2025-10-15 11:57:05.570 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@49122b8f
[DEBUG] 2025-10-15 11:57:05.570 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@49122b8f
[DEBUG] 2025-10-15 11:57:05.570 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3fe46690
[DEBUG] 2025-10-15 11:57:05.570 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4beabeec
[DEBUG] 2025-10-15 11:57:05.570 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@3b4d50b
[DEBUG] 2025-10-15 11:57:05.570 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@3b4d50b
[DEBUG] 2025-10-15 11:57:05.570 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@5b22d8a1
[DEBUG] 2025-10-15 11:57:05.570 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@5b22d8a1
[DEBUG] 2025-10-15 11:57:05.570 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@476ee5b3
[DEBUG] 2025-10-15 11:57:05.570 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@476ee5b3
[DEBUG] 2025-10-15 11:57:05.570 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@476ee5b3
[DEBUG] 2025-10-15 11:57:05.570 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@59ed3e6c
[DEBUG] 2025-10-15 11:57:05.570 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@59ed3e6c
[DEBUG] 2025-10-15 11:57:05.570 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@59ed3e6c
[DEBUG] 2025-10-15 11:57:05.571 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@7cd4a4d7
[DEBUG] 2025-10-15 11:57:05.571 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@317e9c3c
[DEBUG] 2025-10-15 11:57:05.571 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@18da4dd
[DEBUG] 2025-10-15 11:57:05.571 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@18da4dd
[DEBUG] 2025-10-15 11:57:05.571 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@31a3f4de
[DEBUG] 2025-10-15 11:57:05.571 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@31a3f4de
[DEBUG] 2025-10-15 11:57:05.571 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@31a3f4de
[DEBUG] 2025-10-15 11:57:05.571 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@68880c21
[DEBUG] 2025-10-15 11:57:05.571 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@2dd2e270
[DEBUG] 2025-10-15 11:57:05.571 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@4195105b
[DEBUG] 2025-10-15 11:57:05.571 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@4195105b
[DEBUG] 2025-10-15 11:57:05.571 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@6f3e19b3
[DEBUG] 2025-10-15 11:57:05.571 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@6f3e19b3
[DEBUG] 2025-10-15 11:57:05.572 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@6f3e19b3
[DEBUG] 2025-10-15 11:57:05.572 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@47ffe971
[DEBUG] 2025-10-15 11:57:05.572 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@47ffe971
[DEBUG] 2025-10-15 11:57:05.572 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@7d04529c
[DEBUG] 2025-10-15 11:57:05.572 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@7d04529c
[DEBUG] 2025-10-15 11:57:05.572 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@14fa92af
[DEBUG] 2025-10-15 11:57:05.572 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@14fa92af
[DEBUG] 2025-10-15 11:57:05.572 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@b16e202
[DEBUG] 2025-10-15 11:57:05.572 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@b16e202
[DEBUG] 2025-10-15 11:57:05.572 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@339a3670
[DEBUG] 2025-10-15 11:57:05.572 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@339a3670
[DEBUG] 2025-10-15 11:57:05.572 [main] BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@6cd5122d
[DEBUG] 2025-10-15 11:57:05.572 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@2c7a8af2
[DEBUG] 2025-10-15 11:57:05.579 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@65c33b92
[DEBUG] 2025-10-15 11:57:05.579 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@65c33b92
[DEBUG] 2025-10-15 11:57:05.581 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@1f11f64e
[DEBUG] 2025-10-15 11:57:05.581 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@2b2f5fcf
[DEBUG] 2025-10-15 11:57:05.581 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@858d8b4
[DEBUG] 2025-10-15 11:57:05.581 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@711d1a52
[DEBUG] 2025-10-15 11:57:05.581 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@612e21b9
[DEBUG] 2025-10-15 11:57:05.582 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@302edb74
[DEBUG] 2025-10-15 11:57:05.582 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@7efd28bd
[DEBUG] 2025-10-15 11:57:05.582 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@672b72ba
[DEBUG] 2025-10-15 11:57:05.582 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@7718a40f
[INFO ] 2025-10-15 11:57:05.620 [main] c3p0 - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3307/hungryBadger_test
[INFO ] 2025-10-15 11:57:05.620 [main] c3p0 - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2025-10-15 11:57:05.620 [main] c3p0 - HHH10001003: Autocommit mode: false
[INFO ] 2025-10-15 11:57:05.741 [main] c3p0 - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2025-10-15 11:57:05.836 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 9.4.0
      major : 9
      minor : 4
[DEBUG] 2025-10-15 11:57:05.836 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2025-10-15 11:57:05.836 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[DEBUG] 2025-10-15 11:57:05.903 [main] dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 9.4
[DEBUG] 2025-10-15 11:57:05.913 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2025-10-15 11:57:05.913 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2025-10-15 11:57:05.932 [main] DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7165d530) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@12f49ca8)
[DEBUG] 2025-10-15 11:57:05.932 [main] DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1fd9893c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1b2df3aa)
[DEBUG] 2025-10-15 11:57:05.932 [main] DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@44be69aa) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7219ac49)
[DEBUG] 2025-10-15 11:57:05.932 [main] DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@21da4b5f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@551e4c6d)
[DEBUG] 2025-10-15 11:57:05.932 [main] DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@625a9c5d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5d1e0fbb)
[DEBUG] 2025-10-15 11:57:05.932 [main] DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2eed37f4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@9b76b60)
[DEBUG] 2025-10-15 11:57:05.933 [main] DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3fb9a67f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@127705e4)
[DEBUG] 2025-10-15 11:57:05.933 [main] DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5562c2c9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@673c4f6e)
[DEBUG] 2025-10-15 11:57:05.933 [main] DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@15c487a8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3f36e8d1)
[DEBUG] 2025-10-15 11:57:05.934 [main] JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2025-10-15 11:57:05.935 [main] JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2025-10-15 11:57:05.935 [main] JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2025-10-15 11:57:05.938 [main] JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2025-10-15 11:57:05.938 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2025-10-15 11:57:05.942 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@1ee27d73
[DEBUG] 2025-10-15 11:57:05.942 [main] BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@1f11f64e`
[DEBUG] 2025-10-15 11:57:05.948 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
[DEBUG] 2025-10-15 11:57:05.949 [main] BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2025-10-15 11:57:05.949 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2025-10-15 11:57:05.953 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2025-10-15 11:57:05.953 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2025-10-15 11:57:05.953 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2025-10-15 11:57:05.953 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2025-10-15 11:57:05.953 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2025-10-15 11:57:05.953 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2025-10-15 11:57:05.954 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2025-10-15 11:57:05.954 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2025-10-15 11:57:05.954 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2025-10-15 11:57:05.956 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5e8507f1] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4bcaa195]
[DEBUG] 2025-10-15 11:57:06.009 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2025-10-15 11:57:06.042 [main] EntityBinder - Binding entity from annotated class: org.hungrybadger.entity.Review
[DEBUG] 2025-10-15 11:57:06.054 [main] EntityBinder - Import with entity name Review
[DEBUG] 2025-10-15 11:57:06.062 [main] EntityBinder - Bind entity org.hungrybadger.entity.Review on table review
[DEBUG] 2025-10-15 11:57:06.074 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2025-10-15 11:57:06.099 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2025-10-15 11:57:06.100 [main] ClassLoaderAccessImpl - Not known whether passed class name [org.hungrybadger.entity.Review] is safe
[DEBUG] 2025-10-15 11:57:06.100 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.hungrybadger.entity.Review
[DEBUG] 2025-10-15 11:57:06.103 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2025-10-15 11:57:06.107 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.hungrybadger.entity.Review:id]
[DEBUG] 2025-10-15 11:57:06.112 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2025-10-15 11:57:06.116 [main] BasicValue - Skipping column re-registration: review.id
[DEBUG] 2025-10-15 11:57:06.116 [main] PropertyBinder - Building property id
[DEBUG] 2025-10-15 11:57:06.122 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2025-10-15 11:57:06.129 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='cuisine_type')
[DEBUG] 2025-10-15 11:57:06.129 [main] PropertyBinder - MetadataSourceProcessor property cuisineType with lazy=false
[DEBUG] 2025-10-15 11:57:06.129 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.hungrybadger.entity.Review:cuisineType]
[DEBUG] 2025-10-15 11:57:06.129 [main] BasicValueBinder - building BasicValue for cuisineType
[DEBUG] 2025-10-15 11:57:06.129 [main] BasicValue - Skipping column re-registration: review.cuisine_type
[DEBUG] 2025-10-15 11:57:06.129 [main] PropertyBinder - Building property cuisineType
[DEBUG] 2025-10-15 11:57:06.130 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='personal_notes')
[DEBUG] 2025-10-15 11:57:06.130 [main] PropertyBinder - MetadataSourceProcessor property personalNotes with lazy=false
[DEBUG] 2025-10-15 11:57:06.130 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.hungrybadger.entity.Review:personalNotes]
[DEBUG] 2025-10-15 11:57:06.130 [main] BasicValueBinder - building BasicValue for personalNotes
[DEBUG] 2025-10-15 11:57:06.130 [main] BasicValue - Skipping column re-registration: review.personal_notes
[DEBUG] 2025-10-15 11:57:06.130 [main] PropertyBinder - Building property personalNotes
[DEBUG] 2025-10-15 11:57:06.131 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='personal_rating')
[DEBUG] 2025-10-15 11:57:06.131 [main] PropertyBinder - MetadataSourceProcessor property personalRating with lazy=false
[DEBUG] 2025-10-15 11:57:06.131 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.hungrybadger.entity.Review:personalRating]
[DEBUG] 2025-10-15 11:57:06.131 [main] BasicValueBinder - building BasicValue for personalRating
[DEBUG] 2025-10-15 11:57:06.131 [main] BasicValue - Skipping column re-registration: review.personal_rating
[DEBUG] 2025-10-15 11:57:06.131 [main] PropertyBinder - Building property personalRating
[DEBUG] 2025-10-15 11:57:06.133 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2025-10-15 11:57:06.133 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2025-10-15 11:57:06.146 [main] AnnotatedColumn - Binding column: IndexColumn(column='photos_ORDER')
[DEBUG] 2025-10-15 11:57:06.149 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2025-10-15 11:57:06.150 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='photos_KEY')
[DEBUG] 2025-10-15 11:57:06.150 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='photos_KEY')
[DEBUG] 2025-10-15 11:57:06.152 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2025-10-15 11:57:06.152 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2025-10-15 11:57:06.155 [main] CollectionBinder - Collection role: org.hungrybadger.entity.Review.photos
[DEBUG] 2025-10-15 11:57:06.158 [main] PropertyBinder - Building property photos
[DEBUG] 2025-10-15 11:57:06.158 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='restaurant_name')
[DEBUG] 2025-10-15 11:57:06.158 [main] PropertyBinder - MetadataSourceProcessor property restaurantName with lazy=false
[DEBUG] 2025-10-15 11:57:06.158 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.hungrybadger.entity.Review:restaurantName]
[DEBUG] 2025-10-15 11:57:06.158 [main] BasicValueBinder - building BasicValue for restaurantName
[DEBUG] 2025-10-15 11:57:06.159 [main] BasicValue - Skipping column re-registration: review.restaurant_name
[DEBUG] 2025-10-15 11:57:06.159 [main] PropertyBinder - Building property restaurantName
[DEBUG] 2025-10-15 11:57:06.160 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: org.hungrybadger.entity
[DEBUG] 2025-10-15 11:57:06.166 [main] EntityBinder - Binding entity from annotated class: org.hungrybadger.entity.Photo
[DEBUG] 2025-10-15 11:57:06.166 [main] EntityBinder - Import with entity name Photo
[DEBUG] 2025-10-15 11:57:06.166 [main] EntityBinder - Bind entity org.hungrybadger.entity.Photo on table photo
[DEBUG] 2025-10-15 11:57:06.166 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2025-10-15 11:57:06.170 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2025-10-15 11:57:06.170 [main] ClassLoaderAccessImpl - Not known whether passed class name [org.hungrybadger.entity.Photo] is safe
[DEBUG] 2025-10-15 11:57:06.170 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.hungrybadger.entity.Photo
[DEBUG] 2025-10-15 11:57:06.170 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2025-10-15 11:57:06.170 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.hungrybadger.entity.Photo:id]
[DEBUG] 2025-10-15 11:57:06.170 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2025-10-15 11:57:06.171 [main] BasicValue - Skipping column re-registration: photo.id
[DEBUG] 2025-10-15 11:57:06.171 [main] PropertyBinder - Building property id
[DEBUG] 2025-10-15 11:57:06.171 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2025-10-15 11:57:06.171 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='image_path')
[DEBUG] 2025-10-15 11:57:06.171 [main] PropertyBinder - MetadataSourceProcessor property imagePath with lazy=false
[DEBUG] 2025-10-15 11:57:06.171 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.hungrybadger.entity.Photo:imagePath]
[DEBUG] 2025-10-15 11:57:06.171 [main] BasicValueBinder - building BasicValue for imagePath
[DEBUG] 2025-10-15 11:57:06.171 [main] BasicValue - Skipping column re-registration: photo.image_path
[DEBUG] 2025-10-15 11:57:06.171 [main] PropertyBinder - Building property imagePath
[DEBUG] 2025-10-15 11:57:06.172 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='review_id')
[DEBUG] 2025-10-15 11:57:06.172 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2025-10-15 11:57:06.175 [main] PropertyBinder - Building property review
[DEBUG] 2025-10-15 11:57:06.176 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: org.hungrybadger.entity
[DEBUG] 2025-10-15 11:57:06.178 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2025-10-15 11:57:06.178 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for cuisineType
[DEBUG] 2025-10-15 11:57:06.179 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for personalNotes
[DEBUG] 2025-10-15 11:57:06.179 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for personalRating
[DEBUG] 2025-10-15 11:57:06.179 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for restaurantName
[DEBUG] 2025-10-15 11:57:06.179 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2025-10-15 11:57:06.179 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for imagePath
[DEBUG] 2025-10-15 11:57:06.185 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [review]
[DEBUG] 2025-10-15 11:57:06.185 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [photo]
[DEBUG] 2025-10-15 11:57:06.185 [main] CollectionSecondPass - Second pass for collection: org.hungrybadger.entity.Review.photos
[DEBUG] 2025-10-15 11:57:06.187 [main] CollectionBinder - Binding a OneToMany: org.hungrybadger.entity.Review.photos through a foreign key
[DEBUG] 2025-10-15 11:57:06.189 [main] CollectionBinder - Mapping collection: org.hungrybadger.entity.Review.photos -> photo
[DEBUG] 2025-10-15 11:57:06.191 [main] TableBinder - Retrieving property org.hungrybadger.entity.Photo.review
[DEBUG] 2025-10-15 11:57:06.192 [main] CollectionSecondPass - Mapped collection key: review_id, one-to-many: org.hungrybadger.entity.Photo
[DEBUG] 2025-10-15 11:57:06.192 [main] InFlightMetadataCollectorImpl - Resolving reference to class: org.hungrybadger.entity.Review
[DEBUG] 2025-10-15 11:57:06.205 [main] InFlightMetadataCollectorImpl - Resolving reference to class: org.hungrybadger.entity.Review
[DEBUG] 2025-10-15 11:57:06.414 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2025-10-15 11:57:06.471 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2025-10-15 11:57:06.472 [main] SessionFactoryImpl - Instantiating SessionFactory with settings: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=11, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, java.class.path=C:\Program Files\JetBrains\IntelliJ IDEA 2025.2.1\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2025.2.1\plugins\junit\lib\junit5-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2025.2.1\plugins\junit\lib\junit-rt.jar;C:\Users\mamcc\IdeaProjects\PersonalFoodReviewer\target\test-classes;C:\Users\mamcc\IdeaProjects\PersonalFoodReviewer\target\classes;C:\Users\mamcc\.m2\repository\org\hibernate\orm\hibernate-core\6.4.3.Final\hibernate-core-6.4.3.Final.jar;C:\Users\mamcc\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\mamcc\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\mamcc\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\mamcc\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\mamcc\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\mamcc\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\mamcc\.m2\repository\net\bytebuddy\byte-buddy\1.14.7\byte-buddy-1.14.7.jar;C:\Users\mamcc\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\mamcc\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\mamcc\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\mamcc\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\mamcc\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\mamcc\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\mamcc\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\mamcc\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\mamcc\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\mamcc\.m2\repository\org\hibernate\orm\hibernate-c3p0\6.4.3.Final\hibernate-c3p0-6.4.3.Final.jar;C:\Users\mamcc\.m2\repository\com\mchange\c3p0\0.9.5.5\c3p0-0.9.5.5.jar;C:\Users\mamcc\.m2\repository\com\mchange\mchange-commons-java\0.2.19\mchange-commons-java-0.2.19.jar;C:\Users\mamcc\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\mamcc\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\mamcc\.m2\repository\javax\javaee-web-api\7.0\javaee-web-api-7.0.jar;C:\Users\mamcc\.m2\repository\mysql\mysql-connector-java\8.0.16\mysql-connector-java-8.0.16.jar;C:\Users\mamcc\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\mamcc\.m2\repository\org\apache\logging\log4j\log4j-api\2.17.1\log4j-api-2.17.1.jar;C:\Users\mamcc\.m2\repository\org\apache\logging\log4j\log4j-core\2.17.1\log4j-core-2.17.1.jar;C:\Users\mamcc\.m2\repository\jstl\jstl\1.2\jstl-1.2.jar;C:\Users\mamcc\.m2\repository\org\junit\platform\junit-platform-runner\1.0.0\junit-platform-runner-1.0.0.jar;C:\Users\mamcc\.m2\repository\org\apiguardian\apiguardian-api\1.0.0\apiguardian-api-1.0.0.jar;C:\Users\mamcc\.m2\repository\org\junit\platform\junit-platform-launcher\1.0.0\junit-platform-launcher-1.0.0.jar;C:\Users\mamcc\.m2\repository\org\junit\platform\junit-platform-suite-api\1.0.0\junit-platform-suite-api-1.0.0.jar;C:\Users\mamcc\.m2\repository\org\junit\platform\junit-platform-commons\1.0.0\junit-platform-commons-1.0.0.jar;C:\Users\mamcc\.m2\repository\org\junit\vintage\junit-vintage-engine\4.12.0\junit-vintage-engine-4.12.0.jar;C:\Users\mamcc\.m2\repository\org\junit\platform\junit-platform-engine\1.0.0\junit-platform-engine-1.0.0.jar;C:\Users\mamcc\.m2\repository\org\opentest4j\opentest4j\1.0.0\opentest4j-1.0.0.jar;C:\Users\mamcc\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.0.0\junit-jupiter-engine-5.0.0.jar;C:\Users\mamcc\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.0.0\junit-jupiter-api-5.0.0.jar, kotlinx.coroutines.debug.enable.mutable.state.flows.stack.trace=true, java.vm.vendor=Eclipse Adoptium, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=https://adoptium.net/, user.timezone=America/Chicago, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Eclipse Adoptium\jdk-11.0.28.6-hotspot\bin, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 org.hungrybadger.persistence.PhotoDaoTest,getByPropertyEqual, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\mamcc, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2025-07-15, java.home=C:\Program Files\Eclipse Adoptium\jdk-11.0.28.6-hotspot, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, intellij.debug.agent=true, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, user.script=, connection.password=Marthacodes, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=11.0.28+6, user.name=Test, path.separator=;, kotlinx.coroutines.debug.enable.creation.stack.trace=false, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3307/hungryBadger_test, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, java.vendor.version=Temurin-11.0.28+6, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=C:\Users\mamcc\AppData\Local\Temp\, java.version=11.0.28, jboss.modules.system.pkgs=com.intellij.rt, user.dir=C:\Users\mamcc\IdeaProjects\PersonalFoodReviewer, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@48cd319d, kotlinx.coroutines.debug.enable.flows.stack.trace=true, java.library.path=C:\Program Files\Eclipse Adoptium\jdk-11.0.28.6-hotspot\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Microsoft\jdk-21.0.2.13-hotspot\bin;C:\Program Files\Eclipse Adoptium\jdk-11.0.28.6-hotspot\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\dotnet\;C:\Program Files\Amazon\AWSCLIV2\;C:\Program Files\nodejs\;C:\Program Files\MySQL\MySQL Server 9.0\bin;C:\Program Files\NVIDIA Corporation\NVIDIA app\NvDLISR;C:\Program Files\Git\cmd;C:\Users\mamcc\AppData\Local\Microsoft\WindowsApps;;C:\Users\mamcc\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\mamcc\AppData\Roaming\npm;., java.vendor=Eclipse Adoptium, java.vm.info=mixed mode, java.vm.version=11.0.28+6, java.specification.maintenance.version=3, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3307/hungryBadger_test, debugger.agent.enable.coroutines=true, java.class.version=55.0}
[DEBUG] 2025-10-15 11:57:06.477 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2025-10-15 11:57:06.484 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2025-10-15 11:57:06.531 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2025-10-15 11:57:06.532 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2025-10-15 11:57:06.532 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2025-10-15 11:57:06.533 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2025-10-15 11:57:06.535 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@2484dbb7] under count; prior registration was null
[DEBUG] 2025-10-15 11:57:06.536 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@14d8e132] under every; prior registration was null
[DEBUG] 2025-10-15 11:57:06.536 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@7f4a1cac] under any; prior registration was null
[DEBUG] 2025-10-15 11:57:06.536 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2025-10-15 11:57:06.536 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2025-10-15 11:57:06.536 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2025-10-15 11:57:06.536 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2025-10-15 11:57:06.536 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2025-10-15 11:57:06.537 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2025-10-15 11:57:06.537 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2025-10-15 11:57:06.537 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2025-10-15 11:57:06.537 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2025-10-15 11:57:06.537 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2025-10-15 11:57:06.537 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2025-10-15 11:57:06.537 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2025-10-15 11:57:06.537 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2025-10-15 11:57:06.537 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2025-10-15 11:57:06.537 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2025-10-15 11:57:06.538 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2025-10-15 11:57:06.538 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2025-10-15 11:57:06.540 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4a31ed12] under sinh; prior registration was null
[DEBUG] 2025-10-15 11:57:06.540 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3ab595c8] under cosh; prior registration was null
[DEBUG] 2025-10-15 11:57:06.540 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2365ea38] under tanh; prior registration was null
[DEBUG] 2025-10-15 11:57:06.540 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@cbf1997] under pi; prior registration was null
[DEBUG] 2025-10-15 11:57:06.540 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@49232c6f] under log; prior registration was null
[DEBUG] 2025-10-15 11:57:06.540 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2025-10-15 11:57:06.541 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2025-10-15 11:57:06.541 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2025-10-15 11:57:06.541 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2025-10-15 11:57:06.541 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2025-10-15 11:57:06.541 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2025-10-15 11:57:06.541 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2025-10-15 11:57:06.541 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2025-10-15 11:57:06.541 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2025-10-15 11:57:06.541 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2025-10-15 11:57:06.541 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2025-10-15 11:57:06.542 [main] SqmFunctionRegistry - Registering alternate key : length -> character_length
[DEBUG] 2025-10-15 11:57:06.542 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@33324c05] under position; prior registration was null
[DEBUG] 2025-10-15 11:57:06.544 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@40bd0f8] under overlay; prior registration was null
[DEBUG] 2025-10-15 11:57:06.545 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@5fb54740] under trim; prior registration was null
[DEBUG] 2025-10-15 11:57:06.546 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@50e5032c] under cast; prior registration was null
[DEBUG] 2025-10-15 11:57:06.546 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@545d2560] under collate; prior registration was null
[DEBUG] 2025-10-15 11:57:06.547 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@2d4a3e13] under extract; prior registration was null
[DEBUG] 2025-10-15 11:57:06.547 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2025-10-15 11:57:06.547 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2025-10-15 11:57:06.547 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@6aae0e6f] under ifnull; prior registration was null
[DEBUG] 2025-10-15 11:57:06.547 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2025-10-15 11:57:06.547 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2025-10-15 11:57:06.548 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@37e7c4cc] under pad; prior registration was null
[DEBUG] 2025-10-15 11:57:06.549 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@17ec335a] under str; prior registration was null
[DEBUG] 2025-10-15 11:57:06.550 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@45c80312] under format; prior registration was null
[DEBUG] 2025-10-15 11:57:06.551 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@477523ba] under timestampadd; prior registration was null
[DEBUG] 2025-10-15 11:57:06.552 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@561f9d92] under timestampdiff; prior registration was null
[DEBUG] 2025-10-15 11:57:06.552 [main] SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
[DEBUG] 2025-10-15 11:57:06.552 [main] SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
[DEBUG] 2025-10-15 11:57:06.552 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@48499739] under current_date; prior registration was null
[DEBUG] 2025-10-15 11:57:06.552 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@723742b2] under current_time; prior registration was null
[DEBUG] 2025-10-15 11:57:06.552 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@559991f5] under current_timestamp; prior registration was null
[DEBUG] 2025-10-15 11:57:06.552 [main] SqmFunctionRegistry - Registering alternate key : current date -> current_date
[DEBUG] 2025-10-15 11:57:06.552 [main] SqmFunctionRegistry - Registering alternate key : current time -> current_time
[DEBUG] 2025-10-15 11:57:06.552 [main] SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2025-10-15 11:57:06.553 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@34c76167] under local_date; prior registration was null
[DEBUG] 2025-10-15 11:57:06.553 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@30b3d899] under local_time; prior registration was null
[DEBUG] 2025-10-15 11:57:06.553 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@78d92eef] under local_datetime; prior registration was null
[DEBUG] 2025-10-15 11:57:06.553 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@61d60e38] under offset_datetime; prior registration was null
[DEBUG] 2025-10-15 11:57:06.553 [main] SqmFunctionRegistry - Registering alternate key : local date -> local_date
[DEBUG] 2025-10-15 11:57:06.553 [main] SqmFunctionRegistry - Registering alternate key : local time -> local_time
[DEBUG] 2025-10-15 11:57:06.553 [main] SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
[DEBUG] 2025-10-15 11:57:06.553 [main] SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2025-10-15 11:57:06.553 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6e95973c] under instant; prior registration was null
[DEBUG] 2025-10-15 11:57:06.553 [main] SqmFunctionRegistry - Registering alternate key : current_instant -> instant
[DEBUG] 2025-10-15 11:57:06.553 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@624b3544] under sql; prior registration was null
[DEBUG] 2025-10-15 11:57:06.553 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2025-10-15 11:57:06.554 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2025-10-15 11:57:06.554 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2025-10-15 11:57:06.554 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2025-10-15 11:57:06.554 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@49232c6f
[DEBUG] 2025-10-15 11:57:06.554 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
[DEBUG] 2025-10-15 11:57:06.554 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2025-10-15 11:57:06.554 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2025-10-15 11:57:06.554 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2025-10-15 11:57:06.554 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2025-10-15 11:57:06.554 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
[DEBUG] 2025-10-15 11:57:06.554 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2025-10-15 11:57:06.554 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2025-10-15 11:57:06.555 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@1c3b6963] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
[DEBUG] 2025-10-15 11:57:06.555 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@7364f68] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
[DEBUG] 2025-10-15 11:57:06.555 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
[DEBUG] 2025-10-15 11:57:06.555 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2025-10-15 11:57:06.555 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2025-10-15 11:57:06.555 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2025-10-15 11:57:06.555 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2025-10-15 11:57:06.556 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2025-10-15 11:57:06.556 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2025-10-15 11:57:06.556 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2025-10-15 11:57:06.556 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
[DEBUG] 2025-10-15 11:57:06.556 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
[DEBUG] 2025-10-15 11:57:06.556 [main] SqmFunctionRegistry - Registering alternate key : day -> dayofmonth
[DEBUG] 2025-10-15 11:57:06.556 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
[DEBUG] 2025-10-15 11:57:06.556 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2025-10-15 11:57:06.556 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2025-10-15 11:57:06.556 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2025-10-15 11:57:06.556 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2025-10-15 11:57:06.556 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
[DEBUG] 2025-10-15 11:57:06.556 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
[DEBUG] 2025-10-15 11:57:06.556 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
[DEBUG] 2025-10-15 11:57:06.557 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
[DEBUG] 2025-10-15 11:57:06.557 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
[DEBUG] 2025-10-15 11:57:06.557 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
[DEBUG] 2025-10-15 11:57:06.557 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
[DEBUG] 2025-10-15 11:57:06.557 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2025-10-15 11:57:06.557 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
[DEBUG] 2025-10-15 11:57:06.557 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
[DEBUG] 2025-10-15 11:57:06.557 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
[DEBUG] 2025-10-15 11:57:06.557 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
[DEBUG] 2025-10-15 11:57:06.557 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2025-10-15 11:57:06.557 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2025-10-15 11:57:06.557 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2025-10-15 11:57:06.557 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2025-10-15 11:57:06.557 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2025-10-15 11:57:06.558 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@55a0f011] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@33324c05
[DEBUG] 2025-10-15 11:57:06.558 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2025-10-15 11:57:06.558 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2025-10-15 11:57:06.558 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2025-10-15 11:57:06.562 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@2ce524d2] under trunc; prior registration was null
[DEBUG] 2025-10-15 11:57:06.562 [main] SqmFunctionRegistry - Registering alternate key : truncate -> trunc
[DEBUG] 2025-10-15 11:57:06.562 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2025-10-15 11:57:06.562 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3869a6e5] under bitand; prior registration was null
[DEBUG] 2025-10-15 11:57:06.562 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@e3899fd] under bitor; prior registration was null
[DEBUG] 2025-10-15 11:57:06.562 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7d484fcd] under bitxor; prior registration was null
[DEBUG] 2025-10-15 11:57:06.562 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@788e3702] under bitnot; prior registration was null
[DEBUG] 2025-10-15 11:57:06.563 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2025-10-15 11:57:06.563 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2025-10-15 11:57:06.563 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
[DEBUG] 2025-10-15 11:57:06.563 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2025-10-15 11:57:06.563 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2025-10-15 11:57:06.563 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
[DEBUG] 2025-10-15 11:57:06.563 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2025-10-15 11:57:06.563 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2025-10-15 11:57:06.563 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
[DEBUG] 2025-10-15 11:57:06.563 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
[DEBUG] 2025-10-15 11:57:06.563 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
[DEBUG] 2025-10-15 11:57:06.563 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
[DEBUG] 2025-10-15 11:57:06.563 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
[DEBUG] 2025-10-15 11:57:06.564 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@d25e878] under format; prior registration was org.hibernate.dialect.function.FormatFunction@45c80312
[DEBUG] 2025-10-15 11:57:06.564 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
[DEBUG] 2025-10-15 11:57:06.564 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
[DEBUG] 2025-10-15 11:57:06.564 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2025-10-15 11:57:06.564 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2025-10-15 11:57:06.564 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@30b3d899
[DEBUG] 2025-10-15 11:57:06.564 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@78d92eef
[DEBUG] 2025-10-15 11:57:06.564 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
[DEBUG] 2025-10-15 11:57:06.564 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@47187f50] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@cbf1997
[DEBUG] 2025-10-15 11:57:06.564 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@78116659] under chr; prior registration was null
[DEBUG] 2025-10-15 11:57:06.564 [main] SqmFunctionRegistry - Registering alternate key : char -> chr
[DEBUG] 2025-10-15 11:57:06.564 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@712e787e] under sysdate; prior registration was null
[DEBUG] 2025-10-15 11:57:06.564 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2025-10-15 11:57:06.565 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2025-10-15 11:57:06.565 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2025-10-15 11:57:06.565 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2025-10-15 11:57:06.565 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2025-10-15 11:57:06.565 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2025-10-15 11:57:06.567 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@79195c22] under rank; prior registration was null
[DEBUG] 2025-10-15 11:57:06.567 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@c9b5a99] under dense_rank; prior registration was null
[DEBUG] 2025-10-15 11:57:06.567 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@70be89ec] under percent_rank; prior registration was null
[DEBUG] 2025-10-15 11:57:06.568 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@2aee0704] under cume_dist; prior registration was null
[DEBUG] 2025-10-15 11:57:06.568 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@11c581a0] under listagg; prior registration was null
[DEBUG] 2025-10-15 11:57:06.572 [main] HQL_FUNCTIONS - abs(NUMERIC arg)
[DEBUG] 2025-10-15 11:57:06.573 [main] HQL_FUNCTIONS - Double acos(NUMERIC arg)
[DEBUG] 2025-10-15 11:57:06.573 [main] HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days)
[DEBUG] 2025-10-15 11:57:06.573 [main] HQL_FUNCTIONS - addtime(TIME datetime, TIME time)
[DEBUG] 2025-10-15 11:57:06.573 [main] HQL_FUNCTIONS - Boolean any(BOOLEAN arg)
[DEBUG] 2025-10-15 11:57:06.573 [main] HQL_FUNCTIONS - Integer ascii(STRING arg)
[DEBUG] 2025-10-15 11:57:06.573 [main] HQL_FUNCTIONS - Double asin(NUMERIC arg)
[DEBUG] 2025-10-15 11:57:06.573 [main] HQL_FUNCTIONS - Double atan(NUMERIC arg)
[DEBUG] 2025-10-15 11:57:06.573 [main] HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2025-10-15 11:57:06.573 [main] HQL_FUNCTIONS - avg(arg)
[DEBUG] 2025-10-15 11:57:06.573 [main] HQL_FUNCTIONS - bit_and(arg)
[DEBUG] 2025-10-15 11:57:06.573 [main] HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2025-10-15 11:57:06.573 [main] HQL_FUNCTIONS - bit_or(arg)
[DEBUG] 2025-10-15 11:57:06.573 [main] HQL_FUNCTIONS - bitand(arg0, arg1)
[DEBUG] 2025-10-15 11:57:06.573 [main] HQL_FUNCTIONS - bitnot(arg)
[DEBUG] 2025-10-15 11:57:06.573 [main] HQL_FUNCTIONS - bitor(arg0, arg1)
[DEBUG] 2025-10-15 11:57:06.573 [main] HQL_FUNCTIONS - bitxor(arg0, arg1)
[DEBUG] 2025-10-15 11:57:06.573 [main] HQL_FUNCTIONS - cast(arg as Type)
[DEBUG] 2025-10-15 11:57:06.574 [main] HQL_FUNCTIONS - ceiling(NUMERIC arg)
[DEBUG] 2025-10-15 11:57:06.574 [main] HQL_FUNCTIONS - Character char(INTEGER arg)
[DEBUG] 2025-10-15 11:57:06.574 [main] HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2025-10-15 11:57:06.574 [main] HQL_FUNCTIONS - Character chr(INTEGER arg)
[DEBUG] 2025-10-15 11:57:06.574 [main] HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
[DEBUG] 2025-10-15 11:57:06.574 [main] HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
[DEBUG] 2025-10-15 11:57:06.574 [main] HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2025-10-15 11:57:06.574 [main] HQL_FUNCTIONS - Double cos(NUMERIC arg)
[DEBUG] 2025-10-15 11:57:06.574 [main] HQL_FUNCTIONS - Double cosh(NUMERIC arg)
[DEBUG] 2025-10-15 11:57:06.574 [main] HQL_FUNCTIONS - Double cot(NUMERIC arg)
[DEBUG] 2025-10-15 11:57:06.574 [main] HQL_FUNCTIONS - Long count([distinct ]{arg|*})
[DEBUG] 2025-10-15 11:57:06.574 [main] HQL_FUNCTIONS - Integer crc32(arg)
[DEBUG] 2025-10-15 11:57:06.574 [main] HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
[DEBUG] 2025-10-15 11:57:06.574 [main] HQL_FUNCTIONS - Date curdate()
[DEBUG] 2025-10-15 11:57:06.574 [main] HQL_FUNCTIONS - Date current date
[DEBUG] 2025-10-15 11:57:06.574 [main] HQL_FUNCTIONS - Time current time
[DEBUG] 2025-10-15 11:57:06.574 [main] HQL_FUNCTIONS - Timestamp current timestamp
[DEBUG] 2025-10-15 11:57:06.574 [main] HQL_FUNCTIONS - Date current_date
[DEBUG] 2025-10-15 11:57:06.574 [main] HQL_FUNCTIONS - Instant current_instant
[DEBUG] 2025-10-15 11:57:06.574 [main] HQL_FUNCTIONS - Time current_time
[DEBUG] 2025-10-15 11:57:06.574 [main] HQL_FUNCTIONS - Timestamp current_timestamp
[DEBUG] 2025-10-15 11:57:06.574 [main] HQL_FUNCTIONS - Time curtime()
[DEBUG] 2025-10-15 11:57:06.574 [main] HQL_FUNCTIONS - Date date(arg)
[DEBUG] 2025-10-15 11:57:06.575 [main] HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2025-10-15 11:57:06.575 [main] HQL_FUNCTIONS - Integer datediff(DATE end, DATE start)
[DEBUG] 2025-10-15 11:57:06.575 [main] HQL_FUNCTIONS - Integer day(DATE arg)
[DEBUG] 2025-10-15 11:57:06.575 [main] HQL_FUNCTIONS - String dayname(DATE arg)
[DEBUG] 2025-10-15 11:57:06.575 [main] HQL_FUNCTIONS - Integer dayofmonth(DATE arg)
[DEBUG] 2025-10-15 11:57:06.575 [main] HQL_FUNCTIONS - Integer dayofweek(DATE arg)
[DEBUG] 2025-10-15 11:57:06.575 [main] HQL_FUNCTIONS - Integer dayofyear(DATE arg)
[DEBUG] 2025-10-15 11:57:06.575 [main] HQL_FUNCTIONS - Double degrees(NUMERIC arg)
[DEBUG] 2025-10-15 11:57:06.575 [main] HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
[DEBUG] 2025-10-15 11:57:06.575 [main] HQL_FUNCTIONS - Boolean every(BOOLEAN arg)
[DEBUG] 2025-10-15 11:57:06.575 [main] HQL_FUNCTIONS - Double exp(NUMERIC arg)
[DEBUG] 2025-10-15 11:57:06.575 [main] HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2025-10-15 11:57:06.575 [main] HQL_FUNCTIONS - first_valueANY value
[DEBUG] 2025-10-15 11:57:06.575 [main] HQL_FUNCTIONS - floor(NUMERIC arg)
[DEBUG] 2025-10-15 11:57:06.575 [main] HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2025-10-15 11:57:06.575 [main] HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2025-10-15 11:57:06.575 [main] HQL_FUNCTIONS - Integer hour(TIME arg)
[DEBUG] 2025-10-15 11:57:06.575 [main] HQL_FUNCTIONS - ifnull(arg0, arg1)
[DEBUG] 2025-10-15 11:57:06.576 [main] HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2025-10-15 11:57:06.576 [main] HQL_FUNCTIONS - Instant instant
[DEBUG] 2025-10-15 11:57:06.576 [main] HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2025-10-15 11:57:06.576 [main] HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2025-10-15 11:57:06.576 [main] HQL_FUNCTIONS - Date last_day(DATE arg)
[DEBUG] 2025-10-15 11:57:06.576 [main] HQL_FUNCTIONS - last_valueANY value
[DEBUG] 2025-10-15 11:57:06.576 [main] HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2025-10-15 11:57:06.576 [main] HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2025-10-15 11:57:06.576 [main] HQL_FUNCTIONS - String left(STRING string, INTEGER length)
[DEBUG] 2025-10-15 11:57:06.576 [main] HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
[DEBUG] 2025-10-15 11:57:06.576 [main] HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
[DEBUG] 2025-10-15 11:57:06.576 [main] HQL_FUNCTIONS - Double ln(NUMERIC arg)
[DEBUG] 2025-10-15 11:57:06.576 [main] HQL_FUNCTIONS - LocalDate local date
[DEBUG] 2025-10-15 11:57:06.576 [main] HQL_FUNCTIONS - LocalDateTime local datetime
[DEBUG] 2025-10-15 11:57:06.576 [main] HQL_FUNCTIONS - LocalTime local time
[DEBUG] 2025-10-15 11:57:06.576 [main] HQL_FUNCTIONS - LocalDate local_date
[DEBUG] 2025-10-15 11:57:06.576 [main] HQL_FUNCTIONS - LocalDateTime local_datetime
[DEBUG] 2025-10-15 11:57:06.576 [main] HQL_FUNCTIONS - LocalTime local_time
[DEBUG] 2025-10-15 11:57:06.576 [main] HQL_FUNCTIONS - Timestamp localtime
[DEBUG] 2025-10-15 11:57:06.576 [main] HQL_FUNCTIONS - Timestamp localtimestamp
[DEBUG] 2025-10-15 11:57:06.576 [main] HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2025-10-15 11:57:06.576 [main] HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
[DEBUG] 2025-10-15 11:57:06.576 [main] HQL_FUNCTIONS - Double log10(NUMERIC arg)
[DEBUG] 2025-10-15 11:57:06.576 [main] HQL_FUNCTIONS - Double log2(NUMERIC arg)
[DEBUG] 2025-10-15 11:57:06.576 [main] HQL_FUNCTIONS - String lower(STRING string)
[DEBUG] 2025-10-15 11:57:06.576 [main] HQL_FUNCTIONS - String lpad(string, length[, padding])
[DEBUG] 2025-10-15 11:57:06.576 [main] HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
[DEBUG] 2025-10-15 11:57:06.577 [main] HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear)
[DEBUG] 2025-10-15 11:57:06.577 [main] HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
[DEBUG] 2025-10-15 11:57:06.577 [main] HQL_FUNCTIONS - max(COMPARABLE arg)
[DEBUG] 2025-10-15 11:57:06.577 [main] HQL_FUNCTIONS - String md5(arg)
[DEBUG] 2025-10-15 11:57:06.577 [main] HQL_FUNCTIONS - Integer microsecond(TIME arg)
[DEBUG] 2025-10-15 11:57:06.577 [main] HQL_FUNCTIONS - min(COMPARABLE arg)
[DEBUG] 2025-10-15 11:57:06.577 [main] HQL_FUNCTIONS - Integer minute(TIME arg)
[DEBUG] 2025-10-15 11:57:06.577 [main] HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2025-10-15 11:57:06.577 [main] HQL_FUNCTIONS - Integer month(DATE arg)
[DEBUG] 2025-10-15 11:57:06.577 [main] HQL_FUNCTIONS - String monthname(DATE arg)
[DEBUG] 2025-10-15 11:57:06.577 [main] HQL_FUNCTIONS - Timestamp now()
[DEBUG] 2025-10-15 11:57:06.577 [main] HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
[DEBUG] 2025-10-15 11:57:06.577 [main] HQL_FUNCTIONS - nullif(arg0, arg1)
[DEBUG] 2025-10-15 11:57:06.577 [main] HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2025-10-15 11:57:06.577 [main] HQL_FUNCTIONS - OffsetDateTime offset datetime
[DEBUG] 2025-10-15 11:57:06.577 [main] HQL_FUNCTIONS - OffsetDateTime offset_datetime
[DEBUG] 2025-10-15 11:57:06.577 [main] HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2025-10-15 11:57:06.577 [main] HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2025-10-15 11:57:06.577 [main] HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
[DEBUG] 2025-10-15 11:57:06.577 [main] HQL_FUNCTIONS - Double pi
[DEBUG] 2025-10-15 11:57:06.577 [main] HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
[DEBUG] 2025-10-15 11:57:06.577 [main] HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2025-10-15 11:57:06.577 [main] HQL_FUNCTIONS - Integer quarter(DATE arg)
[DEBUG] 2025-10-15 11:57:06.577 [main] HQL_FUNCTIONS - Double radians(NUMERIC arg)
[DEBUG] 2025-10-15 11:57:06.577 [main] HQL_FUNCTIONS - Double rand([INTEGER seed])
[DEBUG] 2025-10-15 11:57:06.577 [main] HQL_FUNCTIONS - Long rank([arg0[, ...]])
[DEBUG] 2025-10-15 11:57:06.577 [main] HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
[DEBUG] 2025-10-15 11:57:06.577 [main] HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2025-10-15 11:57:06.577 [main] HQL_FUNCTIONS - String reverse(STRING arg)
[DEBUG] 2025-10-15 11:57:06.578 [main] HQL_FUNCTIONS - String right(STRING string, INTEGER length)
[DEBUG] 2025-10-15 11:57:06.578 [main] HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
[DEBUG] 2025-10-15 11:57:06.578 [main] HQL_FUNCTIONS - Long row_number()
[DEBUG] 2025-10-15 11:57:06.578 [main] HQL_FUNCTIONS - String rpad(string, length[, padding])
[DEBUG] 2025-10-15 11:57:06.578 [main] HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
[DEBUG] 2025-10-15 11:57:06.578 [main] HQL_FUNCTIONS - Integer second(TIME arg)
[DEBUG] 2025-10-15 11:57:06.578 [main] HQL_FUNCTIONS - String sha(arg)
[DEBUG] 2025-10-15 11:57:06.578 [main] HQL_FUNCTIONS - String sha1(arg)
[DEBUG] 2025-10-15 11:57:06.578 [main] HQL_FUNCTIONS - String sha2(arg0, arg1)
[DEBUG] 2025-10-15 11:57:06.578 [main] HQL_FUNCTIONS - Integer sign(NUMERIC arg)
[DEBUG] 2025-10-15 11:57:06.578 [main] HQL_FUNCTIONS - Double sin(NUMERIC arg)
[DEBUG] 2025-10-15 11:57:06.578 [main] HQL_FUNCTIONS - Double sinh(NUMERIC arg)
[DEBUG] 2025-10-15 11:57:06.578 [main] HQL_FUNCTIONS - String soundex(arg)
[DEBUG] 2025-10-15 11:57:06.578 [main] HQL_FUNCTIONS - String space(INTEGER arg)
[DEBUG] 2025-10-15 11:57:06.578 [main] HQL_FUNCTIONS - Object sql
[DEBUG] 2025-10-15 11:57:06.578 [main] HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
[DEBUG] 2025-10-15 11:57:06.578 [main] HQL_FUNCTIONS - Double stddev(NUMERIC arg)
[DEBUG] 2025-10-15 11:57:06.578 [main] HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
[DEBUG] 2025-10-15 11:57:06.578 [main] HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
[DEBUG] 2025-10-15 11:57:06.578 [main] HQL_FUNCTIONS - String str(arg)
[DEBUG] 2025-10-15 11:57:06.578 [main] HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days)
[DEBUG] 2025-10-15 11:57:06.578 [main] HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2025-10-15 11:57:06.578 [main] HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2025-10-15 11:57:06.578 [main] HQL_FUNCTIONS - subtime(TIME datetime, TIME time)
[DEBUG] 2025-10-15 11:57:06.578 [main] HQL_FUNCTIONS - sum(arg)
[DEBUG] 2025-10-15 11:57:06.578 [main] HQL_FUNCTIONS - Timestamp sysdate()
[DEBUG] 2025-10-15 11:57:06.578 [main] HQL_FUNCTIONS - Double tan(NUMERIC arg)
[DEBUG] 2025-10-15 11:57:06.578 [main] HQL_FUNCTIONS - Double tanh(NUMERIC arg)
[DEBUG] 2025-10-15 11:57:06.578 [main] HQL_FUNCTIONS - String time(arg)
[DEBUG] 2025-10-15 11:57:06.578 [main] HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1])
[DEBUG] 2025-10-15 11:57:06.578 [main] HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2025-10-15 11:57:06.579 [main] HQL_FUNCTIONS - basicType@14(java.lang.Long,-5)|basicType@17(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2025-10-15 11:57:06.579 [main] HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2025-10-15 11:57:06.579 [main] HQL_FUNCTIONS - trunc( ... )
[DEBUG] 2025-10-15 11:57:06.579 [main] HQL_FUNCTIONS - truncate( ... )
[DEBUG] 2025-10-15 11:57:06.579 [main] HQL_FUNCTIONS - String upper(STRING string)
[DEBUG] 2025-10-15 11:57:06.579 [main] HQL_FUNCTIONS - Date utc_date
[DEBUG] 2025-10-15 11:57:06.579 [main] HQL_FUNCTIONS - Time utc_time
[DEBUG] 2025-10-15 11:57:06.579 [main] HQL_FUNCTIONS - Timestamp utc_timestamp
[DEBUG] 2025-10-15 11:57:06.579 [main] HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
[DEBUG] 2025-10-15 11:57:06.579 [main] HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
[DEBUG] 2025-10-15 11:57:06.579 [main] HQL_FUNCTIONS - Double variance(NUMERIC arg)
[DEBUG] 2025-10-15 11:57:06.579 [main] HQL_FUNCTIONS - Integer week(DATE arg)
[DEBUG] 2025-10-15 11:57:06.579 [main] HQL_FUNCTIONS - Integer year(DATE arg)
[DEBUG] 2025-10-15 11:57:06.584 [main] cache - Starting QueryInterpretationCache(2048)
[DEBUG] 2025-10-15 11:57:06.700 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2025-10-15 11:57:06.701 [main] EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
[DEBUG] 2025-10-15 11:57:06.809 [main] ClassLoaderAccessImpl - Not known whether passed class name [org.hungrybadger.entity.Review] is safe
[DEBUG] 2025-10-15 11:57:06.809 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.hungrybadger.entity.Review
[DEBUG] 2025-10-15 11:57:07.039 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.hungrybadger.entity.Review]: private accessor [cuisineType]
[DEBUG] 2025-10-15 11:57:07.076 [main] interceptor - To-one property `org.hungrybadger.entity.Photo#review` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2025-10-15 11:57:07.076 [main] interceptor - To-one property `org.hungrybadger.entity.Photo#review` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2025-10-15 11:57:07.077 [main] ClassLoaderAccessImpl - Not known whether passed class name [org.hungrybadger.entity.Photo] is safe
[DEBUG] 2025-10-15 11:57:07.077 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.hungrybadger.entity.Photo
[DEBUG] 2025-10-15 11:57:07.088 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.hungrybadger.entity.Photo]: private accessor [imagePath]
[DEBUG] 2025-10-15 11:57:07.089 [main] interceptor - To-one property `org.hungrybadger.entity.Photo#review` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2025-10-15 11:57:07.107 [main] mutation - Skipping collection (re)creation - org.hungrybadger.entity.Review.photos
[DEBUG] 2025-10-15 11:57:07.108 [main] mutation - Skipping collection row deletions - org.hungrybadger.entity.Review.photos
[DEBUG] 2025-10-15 11:57:07.108 [main] mutation - Skipping collection removals - org.hungrybadger.entity.Review.photos
[DEBUG] 2025-10-15 11:57:07.141 [main] creation - Starting post-init callbacks
[DEBUG] 2025-10-15 11:57:07.142 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[org.hungrybadger.entity.Review.photos#{element}]) - element descriptor
[DEBUG] 2025-10-15 11:57:07.142 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(org.hungrybadger.entity.Review.photos)#finishInitialization
[DEBUG] 2025-10-15 11:57:07.142 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(org.hungrybadger.entity.Review.photos) - key descriptor
[DEBUG] 2025-10-15 11:57:07.146 [main] creation - Starting PostInitCallbackEntry : Entity(org.hungrybadger.entity.Review) `staticFetchableList` generator
[DEBUG] 2025-10-15 11:57:07.147 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.hungrybadger.entity.Photo.review]
[DEBUG] 2025-10-15 11:57:07.147 [main] creation - Starting PostInitCallbackEntry : Entity(org.hungrybadger.entity.Photo) `staticFetchableList` generator
[DEBUG] 2025-10-15 11:57:07.147 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[org.hungrybadger.entity.Review.photos#{element}]) - element descriptor
[DEBUG] 2025-10-15 11:57:07.240 [main] create - Created new SQL alias : r1_0
[DEBUG] 2025-10-15 11:57:07.243 [main] create - Registration of TableGroup [StandardTableGroup(org.hungrybadger.entity.Review)] with identifierForTableGroup [org.hungrybadger.entity.Review] for NavigablePath [org.hungrybadger.entity.Review] 
[DEBUG] 2025-10-15 11:57:07.263 [main] AST - DomainResult Graph:
 \-EntityResultImpl [org.hungrybadger.entity.Review]
 |  +-BasicFetch [org.hungrybadger.entity.Review.cuisineType]
 |  +-BasicFetch [org.hungrybadger.entity.Review.personalNotes]
 |  +-BasicFetch [org.hungrybadger.entity.Review.personalRating]
 |  +-DelayedCollectionFetch [org.hungrybadger.entity.Review.photos]
 |  \-BasicFetch [org.hungrybadger.entity.Review.restaurantName]

[DEBUG] 2025-10-15 11:57:07.273 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.hungrybadger.entity.Review) {
          primaryTableReference : review as r1_0
        }
      }
    }

[DEBUG] 2025-10-15 11:57:07.285 [main] AbstractEntityPersister - Static SQL for entity: org.hungrybadger.entity.Review
[DEBUG] 2025-10-15 11:57:07.285 [main] AbstractEntityPersister -  Version select: select id from review where id=?
[DEBUG] 2025-10-15 11:57:07.285 [main] AbstractEntityPersister -  Insert (0): insert into review (cuisine_type,personal_notes,personal_rating,restaurant_name) values (?,?,?,?)
[DEBUG] 2025-10-15 11:57:07.285 [main] AbstractEntityPersister -  Update (0): update review set cuisine_type=?,personal_notes=?,personal_rating=?,restaurant_name=? where id=?
[DEBUG] 2025-10-15 11:57:07.285 [main] AbstractEntityPersister -  Delete (0): delete from review where id=?
[DEBUG] 2025-10-15 11:57:07.285 [main] create - Created new SQL alias : p1_0
[DEBUG] 2025-10-15 11:57:07.285 [main] create - Registration of TableGroup [StandardTableGroup(org.hungrybadger.entity.Photo)] with identifierForTableGroup [org.hungrybadger.entity.Photo] for NavigablePath [org.hungrybadger.entity.Photo] 
[DEBUG] 2025-10-15 11:57:07.290 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3c7d8a4] with identifierForTableGroup [org.hungrybadger.entity.Photo.review] for NavigablePath [org.hungrybadger.entity.Photo.review] 
[DEBUG] 2025-10-15 11:57:07.291 [main] create - Created new SQL alias : r1_0
[DEBUG] 2025-10-15 11:57:07.293 [main] AST - DomainResult Graph:
 \-EntityResultImpl [org.hungrybadger.entity.Photo]
 |  +-BasicFetch [org.hungrybadger.entity.Photo.imagePath]
 |  \-EntityFetchJoinedImpl [org.hungrybadger.entity.Photo.review]

[DEBUG] 2025-10-15 11:57:07.294 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.hungrybadger.entity.Photo) {
          primaryTableReference : photo as p1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.hungrybadger.entity.Photo.review) {
              primaryTableReference : review as r1_0
            }
          }
        }
      }
    }

[DEBUG] 2025-10-15 11:57:07.294 [main] AbstractEntityPersister - Static SQL for entity: org.hungrybadger.entity.Photo
[DEBUG] 2025-10-15 11:57:07.294 [main] AbstractEntityPersister -  Version select: select id from photo where id=?
[DEBUG] 2025-10-15 11:57:07.294 [main] AbstractEntityPersister -  Insert (0): insert into photo (image_path,review_id) values (?,?)
[DEBUG] 2025-10-15 11:57:07.294 [main] AbstractEntityPersister -  Update (0): update photo set image_path=?,review_id=? where id=?
[DEBUG] 2025-10-15 11:57:07.294 [main] AbstractEntityPersister -  Delete (0): delete from photo where id=?
[DEBUG] 2025-10-15 11:57:07.296 [main] create - Created new SQL alias : p1_0
[DEBUG] 2025-10-15 11:57:07.296 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@1328f482] with identifierForTableGroup [org.hungrybadger.entity.Review.photos] for NavigablePath [org.hungrybadger.entity.Review.photos] 
[DEBUG] 2025-10-15 11:57:07.296 [main] create - Registration of TableGroup [StandardTableGroup(org.hungrybadger.entity.Review.photos.{element})] with identifierForTableGroup [org.hungrybadger.entity.Review.photos.{element}] for NavigablePath [org.hungrybadger.entity.Review.photos.{element}] 
[DEBUG] 2025-10-15 11:57:07.304 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@a55e82a] with identifierForTableGroup [org.hungrybadger.entity.Review.photos.{element}.review] for NavigablePath [org.hungrybadger.entity.Review.photos.{element}.review] 
[DEBUG] 2025-10-15 11:57:07.306 [main] AST - DomainResult Graph:
 \-CollectionDomainResult [org.hungrybadger.entity.Review.photos]

[DEBUG] 2025-10-15 11:57:07.307 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (p1 : org.hungrybadger.entity.Review.photos) {
          primaryTableReference : photo as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (r1 : org.hungrybadger.entity.Review.photos.{element}.review) {
            }
          }
        }
      }
    }

[DEBUG] 2025-10-15 11:57:07.307 [main] mutation - Static SQL for collection: org.hungrybadger.entity.Review.photos
[DEBUG] 2025-10-15 11:57:07.345 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2025-10-15 11:57:07.345 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2025-10-15 11:57:07.352 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2025-10-15 11:57:07.352 [main] JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[DEBUG] 2025-10-15 11:57:07.353 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5e8507f1] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@70697478]
[DEBUG] 2025-10-15 11:57:07.355 [main] NamedObjectRepository - Checking 0 named HQL queries
[DEBUG] 2025-10-15 11:57:07.355 [main] NamedObjectRepository - Checking 0 named SQL queries
[DEBUG] 2025-10-15 11:57:07.355 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2025-10-15 11:57:07.355 [main] SchemaManagementToolCoordinator - No actions found; doing nothing
[DEBUG] 2025-10-15 11:57:07.358 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@50785f86
[DEBUG] 2025-10-15 11:57:07.358 [main] SessionFactoryRegistry - Registering SessionFactory: efb85af7-7b05-4cb2-b2ab-037264f39382 (<unnamed>)
[DEBUG] 2025-10-15 11:57:07.358 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2025-10-15 11:57:07.358 [main] SessionFactoryImpl - Instantiated SessionFactory
[DEBUG] 2025-10-15 11:57:07.402 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2025-10-15 11:57:07.532 [main] create - Created new SQL alias : p1_0
[DEBUG] 2025-10-15 11:57:07.532 [main] create - Registration of TableGroup [StandardTableGroup(org.hungrybadger.entity.Photo(13145302783500))] with identifierForTableGroup [org.hungrybadger.entity.Photo] for NavigablePath [org.hungrybadger.entity.Photo] 
[DEBUG] 2025-10-15 11:57:07.540 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@16949dfa] with identifierForTableGroup [org.hungrybadger.entity.Photo.review] for NavigablePath [org.hungrybadger.entity.Photo.review] 
[DEBUG] 2025-10-15 11:57:07.545 [main] BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2d230cff
[DEBUG] 2025-10-15 11:57:07.545 [main] BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.hungrybadger.entity.Photo(13145302783500).imagePath) 
[DEBUG] 2025-10-15 11:57:07.552 [main] AST - DomainResult Graph:
 \-EntityResultImpl [org.hungrybadger.entity.Photo(13145302783500)]
 |  +-BasicFetch [org.hungrybadger.entity.Photo(13145302783500).imagePath]
 |  \-CircularFetchImpl [org.hungrybadger.entity.Photo(13145302783500).review]

[DEBUG] 2025-10-15 11:57:07.552 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.hungrybadger.entity.Photo(13145302783500)) {
          primaryTableReference : photo as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (r1 : org.hungrybadger.entity.Photo(13145302783500).review) {
            }
          }
        }
      }
    }

[DEBUG] 2025-10-15 11:57:07.566 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
[DEBUG] 2025-10-15 11:57:07.587 [main] results - Initializer list:
	  org.hungrybadger.entity.Photo(13145302783500) -> EntityResultInitializer(org.hungrybadger.entity.Photo(13145302783500))@1545984685 (SingleTableEntityPersister(org.hungrybadger.entity.Photo))
	  org.hungrybadger.entity.Photo(13145302783500).review -> EntitySelectFetchInitializer(org.hungrybadger.entity.Photo(13145302783500).review)@1876700598 (ToOneAttributeMapping(NavigableRole[org.hungrybadger.entity.Photo.review])@409546368)

[DEBUG] 2025-10-15 11:57:07.595 [main] SQL - select p1_0.id,p1_0.image_path,p1_0.review_id from photo p1_0 where p1_0.image_path=?
[DEBUG] 2025-10-15 11:57:07.617 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 11:57:07.618 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 11:57:27.409 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2025-10-15 11:57:27.419 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2025-10-15 11:57:27.461 [main] Version - HHH000412: Hibernate ORM core version 6.4.3.Final
[DEBUG] 2025-10-15 11:57:27.463 [main] Environment - HHH000206: 'hibernate.properties' not found
[DEBUG] 2025-10-15 11:57:27.528 [main] LocalXmlResourceResolver - Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
[DEBUG] 2025-10-15 11:57:27.536 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2025-10-15 11:57:27.769 [main] factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2025-10-15 11:57:27.775 [main] factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2025-10-15 11:57:27.775 [main] factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2025-10-15 11:57:27.776 [main] factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2025-10-15 11:57:27.776 [main] factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2025-10-15 11:57:27.776 [main] factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2025-10-15 11:57:27.777 [main] factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2025-10-15 11:57:27.778 [main] factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2025-10-15 11:57:27.779 [main] factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2025-10-15 11:57:27.780 [main] factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2025-10-15 11:57:27.780 [main] factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2025-10-15 11:57:27.780 [main] factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2025-10-15 11:57:27.781 [main] factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2025-10-15 11:57:27.790 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[INFO ] 2025-10-15 11:57:27.791 [main] RegionFactoryInitiator - HHH000026: Second-level cache disabled
[DEBUG] 2025-10-15 11:57:27.917 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7c251f90
[DEBUG] 2025-10-15 11:57:27.917 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7c251f90
[DEBUG] 2025-10-15 11:57:27.918 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@7c251f90
[DEBUG] 2025-10-15 11:57:27.918 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@51841ac6
[DEBUG] 2025-10-15 11:57:27.918 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@51841ac6
[DEBUG] 2025-10-15 11:57:27.918 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@5ba26eb0
[DEBUG] 2025-10-15 11:57:27.918 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@5ba26eb0
[DEBUG] 2025-10-15 11:57:27.918 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@435e60ff
[DEBUG] 2025-10-15 11:57:27.918 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@435e60ff
[DEBUG] 2025-10-15 11:57:27.918 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@17d32e9b
[DEBUG] 2025-10-15 11:57:27.918 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@17d32e9b
[DEBUG] 2025-10-15 11:57:27.918 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@17d32e9b
[DEBUG] 2025-10-15 11:57:27.918 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@66f0548d
[DEBUG] 2025-10-15 11:57:27.918 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@66f0548d
[DEBUG] 2025-10-15 11:57:27.918 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@66f0548d
[DEBUG] 2025-10-15 11:57:27.919 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2e6f610d
[DEBUG] 2025-10-15 11:57:27.919 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2e6f610d
[DEBUG] 2025-10-15 11:57:27.919 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@1e86a5a7
[DEBUG] 2025-10-15 11:57:27.919 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@10afe71a
[DEBUG] 2025-10-15 11:57:27.919 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@10afe71a
[DEBUG] 2025-10-15 11:57:27.919 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@741f8dbe
[DEBUG] 2025-10-15 11:57:27.919 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@212dfd39
[DEBUG] 2025-10-15 11:57:27.919 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@a2ddf26
[DEBUG] 2025-10-15 11:57:27.919 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@a2ddf26
[DEBUG] 2025-10-15 11:57:27.919 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@a2ddf26
[DEBUG] 2025-10-15 11:57:27.919 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@65d57e4e
[DEBUG] 2025-10-15 11:57:27.919 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@65d57e4e
[DEBUG] 2025-10-15 11:57:27.920 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@65d57e4e
[DEBUG] 2025-10-15 11:57:27.920 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@6daf7d37
[DEBUG] 2025-10-15 11:57:27.920 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@6daf7d37
[DEBUG] 2025-10-15 11:57:27.920 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@6daf7d37
[DEBUG] 2025-10-15 11:57:27.920 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@23a5818e
[DEBUG] 2025-10-15 11:57:27.920 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@23a5818e
[DEBUG] 2025-10-15 11:57:27.920 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@23a5818e
[DEBUG] 2025-10-15 11:57:27.920 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@4715ae33
[DEBUG] 2025-10-15 11:57:27.920 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@4715ae33
[DEBUG] 2025-10-15 11:57:27.920 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@4715ae33
[DEBUG] 2025-10-15 11:57:27.920 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@9fc9f91
[DEBUG] 2025-10-15 11:57:27.920 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@9fc9f91
[DEBUG] 2025-10-15 11:57:27.920 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@1fac1d5c
[DEBUG] 2025-10-15 11:57:27.921 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@1fac1d5c
[DEBUG] 2025-10-15 11:57:27.921 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@108a46d6
[DEBUG] 2025-10-15 11:57:27.921 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@108a46d6
[DEBUG] 2025-10-15 11:57:27.921 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@108a46d6
[DEBUG] 2025-10-15 11:57:27.921 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@7a8406c2
[DEBUG] 2025-10-15 11:57:27.921 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@17690e14
[DEBUG] 2025-10-15 11:57:27.921 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@17690e14
[DEBUG] 2025-10-15 11:57:27.921 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@6850b758
[DEBUG] 2025-10-15 11:57:27.921 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@2a2ef072
[DEBUG] 2025-10-15 11:57:27.921 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@2a2ef072
[DEBUG] 2025-10-15 11:57:27.921 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@2a2ef072
[DEBUG] 2025-10-15 11:57:27.921 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@704641e3
[DEBUG] 2025-10-15 11:57:27.921 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@2f00f851
[DEBUG] 2025-10-15 11:57:27.922 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@4207609e
[DEBUG] 2025-10-15 11:57:27.922 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@1f77b5cc
[DEBUG] 2025-10-15 11:57:27.922 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@1f77b5cc
[DEBUG] 2025-10-15 11:57:27.922 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@5d7ca698
[DEBUG] 2025-10-15 11:57:27.922 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@5d7ca698
[DEBUG] 2025-10-15 11:57:27.922 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@75961f16
[DEBUG] 2025-10-15 11:57:27.922 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@c6c82aa
[DEBUG] 2025-10-15 11:57:27.922 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@2e179f3e
[DEBUG] 2025-10-15 11:57:27.922 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@16e7b402
[DEBUG] 2025-10-15 11:57:27.922 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@534c6767
[DEBUG] 2025-10-15 11:57:27.922 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@3bddc676
[DEBUG] 2025-10-15 11:57:27.922 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@29a1505c
[DEBUG] 2025-10-15 11:57:27.922 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@29a1505c
[DEBUG] 2025-10-15 11:57:27.922 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@24db6ce
[DEBUG] 2025-10-15 11:57:27.923 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@24db6ce
[DEBUG] 2025-10-15 11:57:27.923 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@320a8ebf
[DEBUG] 2025-10-15 11:57:27.923 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@320a8ebf
[DEBUG] 2025-10-15 11:57:27.923 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@67b100fe
[DEBUG] 2025-10-15 11:57:27.923 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@67b100fe
[DEBUG] 2025-10-15 11:57:27.923 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@44b18fe4
[DEBUG] 2025-10-15 11:57:27.923 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@44b18fe4
[DEBUG] 2025-10-15 11:57:27.923 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2ba5aa7a
[DEBUG] 2025-10-15 11:57:27.923 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4d3ca6c7
[DEBUG] 2025-10-15 11:57:27.923 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@22e5f96e
[DEBUG] 2025-10-15 11:57:27.923 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@22e5f96e
[DEBUG] 2025-10-15 11:57:27.923 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@6a638c79
[DEBUG] 2025-10-15 11:57:27.923 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6c931d35
[DEBUG] 2025-10-15 11:57:27.923 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@44b194fe
[DEBUG] 2025-10-15 11:57:27.924 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@49122b8f
[DEBUG] 2025-10-15 11:57:27.924 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@49122b8f
[DEBUG] 2025-10-15 11:57:27.924 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3fe46690
[DEBUG] 2025-10-15 11:57:27.924 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4beabeec
[DEBUG] 2025-10-15 11:57:27.924 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@3b4d50b
[DEBUG] 2025-10-15 11:57:27.924 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@3b4d50b
[DEBUG] 2025-10-15 11:57:27.924 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@5b22d8a1
[DEBUG] 2025-10-15 11:57:27.924 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@5b22d8a1
[DEBUG] 2025-10-15 11:57:27.924 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@476ee5b3
[DEBUG] 2025-10-15 11:57:27.924 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@476ee5b3
[DEBUG] 2025-10-15 11:57:27.924 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@476ee5b3
[DEBUG] 2025-10-15 11:57:27.924 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@59ed3e6c
[DEBUG] 2025-10-15 11:57:27.924 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@59ed3e6c
[DEBUG] 2025-10-15 11:57:27.924 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@59ed3e6c
[DEBUG] 2025-10-15 11:57:27.925 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@7cd4a4d7
[DEBUG] 2025-10-15 11:57:27.925 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@317e9c3c
[DEBUG] 2025-10-15 11:57:27.925 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@18da4dd
[DEBUG] 2025-10-15 11:57:27.925 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@18da4dd
[DEBUG] 2025-10-15 11:57:27.925 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@31a3f4de
[DEBUG] 2025-10-15 11:57:27.925 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@31a3f4de
[DEBUG] 2025-10-15 11:57:27.925 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@31a3f4de
[DEBUG] 2025-10-15 11:57:27.925 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@68880c21
[DEBUG] 2025-10-15 11:57:27.925 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@2dd2e270
[DEBUG] 2025-10-15 11:57:27.925 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@4195105b
[DEBUG] 2025-10-15 11:57:27.925 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@4195105b
[DEBUG] 2025-10-15 11:57:27.925 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@6f3e19b3
[DEBUG] 2025-10-15 11:57:27.925 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@6f3e19b3
[DEBUG] 2025-10-15 11:57:27.926 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@6f3e19b3
[DEBUG] 2025-10-15 11:57:27.926 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@47ffe971
[DEBUG] 2025-10-15 11:57:27.926 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@47ffe971
[DEBUG] 2025-10-15 11:57:27.926 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@7d04529c
[DEBUG] 2025-10-15 11:57:27.926 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@7d04529c
[DEBUG] 2025-10-15 11:57:27.926 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@14fa92af
[DEBUG] 2025-10-15 11:57:27.926 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@14fa92af
[DEBUG] 2025-10-15 11:57:27.926 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@b16e202
[DEBUG] 2025-10-15 11:57:27.926 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@b16e202
[DEBUG] 2025-10-15 11:57:27.926 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@339a3670
[DEBUG] 2025-10-15 11:57:27.926 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@339a3670
[DEBUG] 2025-10-15 11:57:27.926 [main] BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@6cd5122d
[DEBUG] 2025-10-15 11:57:27.926 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@2c7a8af2
[DEBUG] 2025-10-15 11:57:27.932 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@65c33b92
[DEBUG] 2025-10-15 11:57:27.932 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@65c33b92
[DEBUG] 2025-10-15 11:57:27.934 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@1f11f64e
[DEBUG] 2025-10-15 11:57:27.934 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@2b2f5fcf
[DEBUG] 2025-10-15 11:57:27.934 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@858d8b4
[DEBUG] 2025-10-15 11:57:27.934 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@711d1a52
[DEBUG] 2025-10-15 11:57:27.935 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@612e21b9
[DEBUG] 2025-10-15 11:57:27.935 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@302edb74
[DEBUG] 2025-10-15 11:57:27.935 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@7efd28bd
[DEBUG] 2025-10-15 11:57:27.935 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@672b72ba
[DEBUG] 2025-10-15 11:57:27.935 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@7718a40f
[INFO ] 2025-10-15 11:57:27.973 [main] c3p0 - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3307/hungryBadger_test
[INFO ] 2025-10-15 11:57:27.973 [main] c3p0 - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2025-10-15 11:57:27.973 [main] c3p0 - HHH10001003: Autocommit mode: false
[INFO ] 2025-10-15 11:57:28.091 [main] c3p0 - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2025-10-15 11:57:28.195 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 9.4.0
      major : 9
      minor : 4
[DEBUG] 2025-10-15 11:57:28.196 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2025-10-15 11:57:28.196 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[DEBUG] 2025-10-15 11:57:28.263 [main] dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 9.4
[DEBUG] 2025-10-15 11:57:28.272 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2025-10-15 11:57:28.272 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2025-10-15 11:57:28.291 [main] DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7165d530) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@12f49ca8)
[DEBUG] 2025-10-15 11:57:28.291 [main] DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1fd9893c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1b2df3aa)
[DEBUG] 2025-10-15 11:57:28.291 [main] DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@44be69aa) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7219ac49)
[DEBUG] 2025-10-15 11:57:28.291 [main] DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@21da4b5f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@551e4c6d)
[DEBUG] 2025-10-15 11:57:28.291 [main] DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@625a9c5d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5d1e0fbb)
[DEBUG] 2025-10-15 11:57:28.292 [main] DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2eed37f4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@9b76b60)
[DEBUG] 2025-10-15 11:57:28.292 [main] DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3fb9a67f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@127705e4)
[DEBUG] 2025-10-15 11:57:28.292 [main] DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5562c2c9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@673c4f6e)
[DEBUG] 2025-10-15 11:57:28.292 [main] DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@15c487a8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3f36e8d1)
[DEBUG] 2025-10-15 11:57:28.294 [main] JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2025-10-15 11:57:28.294 [main] JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2025-10-15 11:57:28.294 [main] JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2025-10-15 11:57:28.297 [main] JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2025-10-15 11:57:28.297 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2025-10-15 11:57:28.301 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@1ee27d73
[DEBUG] 2025-10-15 11:57:28.301 [main] BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@1f11f64e`
[DEBUG] 2025-10-15 11:57:28.308 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
[DEBUG] 2025-10-15 11:57:28.308 [main] BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2025-10-15 11:57:28.308 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2025-10-15 11:57:28.312 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2025-10-15 11:57:28.312 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2025-10-15 11:57:28.312 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2025-10-15 11:57:28.312 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2025-10-15 11:57:28.312 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2025-10-15 11:57:28.312 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2025-10-15 11:57:28.313 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2025-10-15 11:57:28.313 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2025-10-15 11:57:28.313 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2025-10-15 11:57:28.315 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5e8507f1] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4bcaa195]
[DEBUG] 2025-10-15 11:57:28.375 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2025-10-15 11:57:28.409 [main] EntityBinder - Binding entity from annotated class: org.hungrybadger.entity.Review
[DEBUG] 2025-10-15 11:57:28.420 [main] EntityBinder - Import with entity name Review
[DEBUG] 2025-10-15 11:57:28.428 [main] EntityBinder - Bind entity org.hungrybadger.entity.Review on table review
[DEBUG] 2025-10-15 11:57:28.440 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2025-10-15 11:57:28.466 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2025-10-15 11:57:28.467 [main] ClassLoaderAccessImpl - Not known whether passed class name [org.hungrybadger.entity.Review] is safe
[DEBUG] 2025-10-15 11:57:28.467 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.hungrybadger.entity.Review
[DEBUG] 2025-10-15 11:57:28.470 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2025-10-15 11:57:28.474 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.hungrybadger.entity.Review:id]
[DEBUG] 2025-10-15 11:57:28.480 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2025-10-15 11:57:28.484 [main] BasicValue - Skipping column re-registration: review.id
[DEBUG] 2025-10-15 11:57:28.485 [main] PropertyBinder - Building property id
[DEBUG] 2025-10-15 11:57:28.490 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2025-10-15 11:57:28.495 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='cuisine_type')
[DEBUG] 2025-10-15 11:57:28.496 [main] PropertyBinder - MetadataSourceProcessor property cuisineType with lazy=false
[DEBUG] 2025-10-15 11:57:28.496 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.hungrybadger.entity.Review:cuisineType]
[DEBUG] 2025-10-15 11:57:28.496 [main] BasicValueBinder - building BasicValue for cuisineType
[DEBUG] 2025-10-15 11:57:28.496 [main] BasicValue - Skipping column re-registration: review.cuisine_type
[DEBUG] 2025-10-15 11:57:28.496 [main] PropertyBinder - Building property cuisineType
[DEBUG] 2025-10-15 11:57:28.496 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='personal_notes')
[DEBUG] 2025-10-15 11:57:28.497 [main] PropertyBinder - MetadataSourceProcessor property personalNotes with lazy=false
[DEBUG] 2025-10-15 11:57:28.497 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.hungrybadger.entity.Review:personalNotes]
[DEBUG] 2025-10-15 11:57:28.497 [main] BasicValueBinder - building BasicValue for personalNotes
[DEBUG] 2025-10-15 11:57:28.497 [main] BasicValue - Skipping column re-registration: review.personal_notes
[DEBUG] 2025-10-15 11:57:28.497 [main] PropertyBinder - Building property personalNotes
[DEBUG] 2025-10-15 11:57:28.497 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='personal_rating')
[DEBUG] 2025-10-15 11:57:28.497 [main] PropertyBinder - MetadataSourceProcessor property personalRating with lazy=false
[DEBUG] 2025-10-15 11:57:28.497 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.hungrybadger.entity.Review:personalRating]
[DEBUG] 2025-10-15 11:57:28.497 [main] BasicValueBinder - building BasicValue for personalRating
[DEBUG] 2025-10-15 11:57:28.497 [main] BasicValue - Skipping column re-registration: review.personal_rating
[DEBUG] 2025-10-15 11:57:28.497 [main] PropertyBinder - Building property personalRating
[DEBUG] 2025-10-15 11:57:28.499 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2025-10-15 11:57:28.500 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2025-10-15 11:57:28.514 [main] AnnotatedColumn - Binding column: IndexColumn(column='photos_ORDER')
[DEBUG] 2025-10-15 11:57:28.517 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2025-10-15 11:57:28.518 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='photos_KEY')
[DEBUG] 2025-10-15 11:57:28.519 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='photos_KEY')
[DEBUG] 2025-10-15 11:57:28.521 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2025-10-15 11:57:28.521 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2025-10-15 11:57:28.524 [main] CollectionBinder - Collection role: org.hungrybadger.entity.Review.photos
[DEBUG] 2025-10-15 11:57:28.527 [main] PropertyBinder - Building property photos
[DEBUG] 2025-10-15 11:57:28.527 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='restaurant_name')
[DEBUG] 2025-10-15 11:57:28.527 [main] PropertyBinder - MetadataSourceProcessor property restaurantName with lazy=false
[DEBUG] 2025-10-15 11:57:28.527 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.hungrybadger.entity.Review:restaurantName]
[DEBUG] 2025-10-15 11:57:28.527 [main] BasicValueBinder - building BasicValue for restaurantName
[DEBUG] 2025-10-15 11:57:28.527 [main] BasicValue - Skipping column re-registration: review.restaurant_name
[DEBUG] 2025-10-15 11:57:28.527 [main] PropertyBinder - Building property restaurantName
[DEBUG] 2025-10-15 11:57:28.528 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: org.hungrybadger.entity
[DEBUG] 2025-10-15 11:57:28.534 [main] EntityBinder - Binding entity from annotated class: org.hungrybadger.entity.Photo
[DEBUG] 2025-10-15 11:57:28.535 [main] EntityBinder - Import with entity name Photo
[DEBUG] 2025-10-15 11:57:28.535 [main] EntityBinder - Bind entity org.hungrybadger.entity.Photo on table photo
[DEBUG] 2025-10-15 11:57:28.535 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2025-10-15 11:57:28.538 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2025-10-15 11:57:28.539 [main] ClassLoaderAccessImpl - Not known whether passed class name [org.hungrybadger.entity.Photo] is safe
[DEBUG] 2025-10-15 11:57:28.539 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.hungrybadger.entity.Photo
[DEBUG] 2025-10-15 11:57:28.539 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2025-10-15 11:57:28.539 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.hungrybadger.entity.Photo:id]
[DEBUG] 2025-10-15 11:57:28.539 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2025-10-15 11:57:28.539 [main] BasicValue - Skipping column re-registration: photo.id
[DEBUG] 2025-10-15 11:57:28.539 [main] PropertyBinder - Building property id
[DEBUG] 2025-10-15 11:57:28.539 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2025-10-15 11:57:28.539 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='image_path')
[DEBUG] 2025-10-15 11:57:28.540 [main] PropertyBinder - MetadataSourceProcessor property imagePath with lazy=false
[DEBUG] 2025-10-15 11:57:28.540 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.hungrybadger.entity.Photo:imagePath]
[DEBUG] 2025-10-15 11:57:28.540 [main] BasicValueBinder - building BasicValue for imagePath
[DEBUG] 2025-10-15 11:57:28.540 [main] BasicValue - Skipping column re-registration: photo.image_path
[DEBUG] 2025-10-15 11:57:28.540 [main] PropertyBinder - Building property imagePath
[DEBUG] 2025-10-15 11:57:28.540 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='review_id')
[DEBUG] 2025-10-15 11:57:28.540 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2025-10-15 11:57:28.544 [main] PropertyBinder - Building property review
[DEBUG] 2025-10-15 11:57:28.545 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: org.hungrybadger.entity
[DEBUG] 2025-10-15 11:57:28.546 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2025-10-15 11:57:28.547 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for cuisineType
[DEBUG] 2025-10-15 11:57:28.548 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for personalNotes
[DEBUG] 2025-10-15 11:57:28.549 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for personalRating
[DEBUG] 2025-10-15 11:57:28.549 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for restaurantName
[DEBUG] 2025-10-15 11:57:28.549 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2025-10-15 11:57:28.549 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for imagePath
[DEBUG] 2025-10-15 11:57:28.554 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [review]
[DEBUG] 2025-10-15 11:57:28.554 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [photo]
[DEBUG] 2025-10-15 11:57:28.555 [main] CollectionSecondPass - Second pass for collection: org.hungrybadger.entity.Review.photos
[DEBUG] 2025-10-15 11:57:28.556 [main] CollectionBinder - Binding a OneToMany: org.hungrybadger.entity.Review.photos through a foreign key
[DEBUG] 2025-10-15 11:57:28.559 [main] CollectionBinder - Mapping collection: org.hungrybadger.entity.Review.photos -> photo
[DEBUG] 2025-10-15 11:57:28.560 [main] TableBinder - Retrieving property org.hungrybadger.entity.Photo.review
[DEBUG] 2025-10-15 11:57:28.560 [main] CollectionSecondPass - Mapped collection key: review_id, one-to-many: org.hungrybadger.entity.Photo
[DEBUG] 2025-10-15 11:57:28.561 [main] InFlightMetadataCollectorImpl - Resolving reference to class: org.hungrybadger.entity.Review
[DEBUG] 2025-10-15 11:57:28.576 [main] InFlightMetadataCollectorImpl - Resolving reference to class: org.hungrybadger.entity.Review
[DEBUG] 2025-10-15 11:57:28.787 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2025-10-15 11:57:28.844 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2025-10-15 11:57:28.844 [main] SessionFactoryImpl - Instantiating SessionFactory with settings: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=11, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, java.class.path=C:\Program Files\JetBrains\IntelliJ IDEA 2025.2.1\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2025.2.1\plugins\junit\lib\junit5-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2025.2.1\plugins\junit\lib\junit-rt.jar;C:\Users\mamcc\IdeaProjects\PersonalFoodReviewer\target\test-classes;C:\Users\mamcc\IdeaProjects\PersonalFoodReviewer\target\classes;C:\Users\mamcc\.m2\repository\org\hibernate\orm\hibernate-core\6.4.3.Final\hibernate-core-6.4.3.Final.jar;C:\Users\mamcc\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\mamcc\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\mamcc\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\mamcc\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\mamcc\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\mamcc\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\mamcc\.m2\repository\net\bytebuddy\byte-buddy\1.14.7\byte-buddy-1.14.7.jar;C:\Users\mamcc\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\mamcc\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\mamcc\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\mamcc\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\mamcc\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\mamcc\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\mamcc\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\mamcc\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\mamcc\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\mamcc\.m2\repository\org\hibernate\orm\hibernate-c3p0\6.4.3.Final\hibernate-c3p0-6.4.3.Final.jar;C:\Users\mamcc\.m2\repository\com\mchange\c3p0\0.9.5.5\c3p0-0.9.5.5.jar;C:\Users\mamcc\.m2\repository\com\mchange\mchange-commons-java\0.2.19\mchange-commons-java-0.2.19.jar;C:\Users\mamcc\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\mamcc\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\mamcc\.m2\repository\javax\javaee-web-api\7.0\javaee-web-api-7.0.jar;C:\Users\mamcc\.m2\repository\mysql\mysql-connector-java\8.0.16\mysql-connector-java-8.0.16.jar;C:\Users\mamcc\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\mamcc\.m2\repository\org\apache\logging\log4j\log4j-api\2.17.1\log4j-api-2.17.1.jar;C:\Users\mamcc\.m2\repository\org\apache\logging\log4j\log4j-core\2.17.1\log4j-core-2.17.1.jar;C:\Users\mamcc\.m2\repository\jstl\jstl\1.2\jstl-1.2.jar;C:\Users\mamcc\.m2\repository\org\junit\platform\junit-platform-runner\1.0.0\junit-platform-runner-1.0.0.jar;C:\Users\mamcc\.m2\repository\org\apiguardian\apiguardian-api\1.0.0\apiguardian-api-1.0.0.jar;C:\Users\mamcc\.m2\repository\org\junit\platform\junit-platform-launcher\1.0.0\junit-platform-launcher-1.0.0.jar;C:\Users\mamcc\.m2\repository\org\junit\platform\junit-platform-suite-api\1.0.0\junit-platform-suite-api-1.0.0.jar;C:\Users\mamcc\.m2\repository\org\junit\platform\junit-platform-commons\1.0.0\junit-platform-commons-1.0.0.jar;C:\Users\mamcc\.m2\repository\org\junit\vintage\junit-vintage-engine\4.12.0\junit-vintage-engine-4.12.0.jar;C:\Users\mamcc\.m2\repository\org\junit\platform\junit-platform-engine\1.0.0\junit-platform-engine-1.0.0.jar;C:\Users\mamcc\.m2\repository\org\opentest4j\opentest4j\1.0.0\opentest4j-1.0.0.jar;C:\Users\mamcc\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.0.0\junit-jupiter-engine-5.0.0.jar;C:\Users\mamcc\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.0.0\junit-jupiter-api-5.0.0.jar, kotlinx.coroutines.debug.enable.mutable.state.flows.stack.trace=true, java.vm.vendor=Eclipse Adoptium, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=https://adoptium.net/, user.timezone=America/Chicago, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Eclipse Adoptium\jdk-11.0.28.6-hotspot\bin, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 org.hungrybadger.persistence.PhotoDaoTest,getByPropertyEqual, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\mamcc, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2025-07-15, java.home=C:\Program Files\Eclipse Adoptium\jdk-11.0.28.6-hotspot, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, intellij.debug.agent=true, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, user.script=, connection.password=Marthacodes, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=11.0.28+6, user.name=Test, path.separator=;, kotlinx.coroutines.debug.enable.creation.stack.trace=false, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3307/hungryBadger_test, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, java.vendor.version=Temurin-11.0.28+6, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=C:\Users\mamcc\AppData\Local\Temp\, java.version=11.0.28, jboss.modules.system.pkgs=com.intellij.rt, user.dir=C:\Users\mamcc\IdeaProjects\PersonalFoodReviewer, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@48cd319d, kotlinx.coroutines.debug.enable.flows.stack.trace=true, java.library.path=C:\Program Files\Eclipse Adoptium\jdk-11.0.28.6-hotspot\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Microsoft\jdk-21.0.2.13-hotspot\bin;C:\Program Files\Eclipse Adoptium\jdk-11.0.28.6-hotspot\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\dotnet\;C:\Program Files\Amazon\AWSCLIV2\;C:\Program Files\nodejs\;C:\Program Files\MySQL\MySQL Server 9.0\bin;C:\Program Files\NVIDIA Corporation\NVIDIA app\NvDLISR;C:\Program Files\Git\cmd;C:\Users\mamcc\AppData\Local\Microsoft\WindowsApps;;C:\Users\mamcc\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\mamcc\AppData\Roaming\npm;., java.vendor=Eclipse Adoptium, java.vm.info=mixed mode, java.vm.version=11.0.28+6, java.specification.maintenance.version=3, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3307/hungryBadger_test, debugger.agent.enable.coroutines=true, java.class.version=55.0}
[DEBUG] 2025-10-15 11:57:28.850 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2025-10-15 11:57:28.858 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2025-10-15 11:57:28.911 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2025-10-15 11:57:28.911 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2025-10-15 11:57:28.912 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2025-10-15 11:57:28.913 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2025-10-15 11:57:28.914 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@2484dbb7] under count; prior registration was null
[DEBUG] 2025-10-15 11:57:28.915 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@14d8e132] under every; prior registration was null
[DEBUG] 2025-10-15 11:57:28.915 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@7f4a1cac] under any; prior registration was null
[DEBUG] 2025-10-15 11:57:28.916 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2025-10-15 11:57:28.916 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2025-10-15 11:57:28.916 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2025-10-15 11:57:28.916 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2025-10-15 11:57:28.916 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2025-10-15 11:57:28.916 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2025-10-15 11:57:28.916 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2025-10-15 11:57:28.916 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2025-10-15 11:57:28.916 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2025-10-15 11:57:28.917 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2025-10-15 11:57:28.917 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2025-10-15 11:57:28.917 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2025-10-15 11:57:28.917 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2025-10-15 11:57:28.917 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2025-10-15 11:57:28.917 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2025-10-15 11:57:28.917 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2025-10-15 11:57:28.917 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2025-10-15 11:57:28.919 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4a31ed12] under sinh; prior registration was null
[DEBUG] 2025-10-15 11:57:28.919 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3ab595c8] under cosh; prior registration was null
[DEBUG] 2025-10-15 11:57:28.919 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2365ea38] under tanh; prior registration was null
[DEBUG] 2025-10-15 11:57:28.920 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@cbf1997] under pi; prior registration was null
[DEBUG] 2025-10-15 11:57:28.920 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@49232c6f] under log; prior registration was null
[DEBUG] 2025-10-15 11:57:28.920 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2025-10-15 11:57:28.920 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2025-10-15 11:57:28.920 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2025-10-15 11:57:28.920 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2025-10-15 11:57:28.920 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2025-10-15 11:57:28.921 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2025-10-15 11:57:28.921 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2025-10-15 11:57:28.921 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2025-10-15 11:57:28.921 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2025-10-15 11:57:28.921 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2025-10-15 11:57:28.921 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2025-10-15 11:57:28.921 [main] SqmFunctionRegistry - Registering alternate key : length -> character_length
[DEBUG] 2025-10-15 11:57:28.922 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@33324c05] under position; prior registration was null
[DEBUG] 2025-10-15 11:57:28.924 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@40bd0f8] under overlay; prior registration was null
[DEBUG] 2025-10-15 11:57:28.925 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@5fb54740] under trim; prior registration was null
[DEBUG] 2025-10-15 11:57:28.926 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@50e5032c] under cast; prior registration was null
[DEBUG] 2025-10-15 11:57:28.926 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@545d2560] under collate; prior registration was null
[DEBUG] 2025-10-15 11:57:28.927 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@2d4a3e13] under extract; prior registration was null
[DEBUG] 2025-10-15 11:57:28.927 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2025-10-15 11:57:28.927 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2025-10-15 11:57:28.928 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@6aae0e6f] under ifnull; prior registration was null
[DEBUG] 2025-10-15 11:57:28.928 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2025-10-15 11:57:28.928 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2025-10-15 11:57:28.928 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@37e7c4cc] under pad; prior registration was null
[DEBUG] 2025-10-15 11:57:28.929 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@17ec335a] under str; prior registration was null
[DEBUG] 2025-10-15 11:57:28.930 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@45c80312] under format; prior registration was null
[DEBUG] 2025-10-15 11:57:28.931 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@477523ba] under timestampadd; prior registration was null
[DEBUG] 2025-10-15 11:57:28.931 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@561f9d92] under timestampdiff; prior registration was null
[DEBUG] 2025-10-15 11:57:28.931 [main] SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
[DEBUG] 2025-10-15 11:57:28.932 [main] SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
[DEBUG] 2025-10-15 11:57:28.932 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@48499739] under current_date; prior registration was null
[DEBUG] 2025-10-15 11:57:28.932 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@723742b2] under current_time; prior registration was null
[DEBUG] 2025-10-15 11:57:28.932 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@559991f5] under current_timestamp; prior registration was null
[DEBUG] 2025-10-15 11:57:28.932 [main] SqmFunctionRegistry - Registering alternate key : current date -> current_date
[DEBUG] 2025-10-15 11:57:28.932 [main] SqmFunctionRegistry - Registering alternate key : current time -> current_time
[DEBUG] 2025-10-15 11:57:28.932 [main] SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2025-10-15 11:57:28.932 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@34c76167] under local_date; prior registration was null
[DEBUG] 2025-10-15 11:57:28.932 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@30b3d899] under local_time; prior registration was null
[DEBUG] 2025-10-15 11:57:28.932 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@78d92eef] under local_datetime; prior registration was null
[DEBUG] 2025-10-15 11:57:28.932 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@61d60e38] under offset_datetime; prior registration was null
[DEBUG] 2025-10-15 11:57:28.932 [main] SqmFunctionRegistry - Registering alternate key : local date -> local_date
[DEBUG] 2025-10-15 11:57:28.932 [main] SqmFunctionRegistry - Registering alternate key : local time -> local_time
[DEBUG] 2025-10-15 11:57:28.933 [main] SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
[DEBUG] 2025-10-15 11:57:28.933 [main] SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2025-10-15 11:57:28.933 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6e95973c] under instant; prior registration was null
[DEBUG] 2025-10-15 11:57:28.933 [main] SqmFunctionRegistry - Registering alternate key : current_instant -> instant
[DEBUG] 2025-10-15 11:57:28.933 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@624b3544] under sql; prior registration was null
[DEBUG] 2025-10-15 11:57:28.933 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2025-10-15 11:57:28.933 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2025-10-15 11:57:28.933 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2025-10-15 11:57:28.933 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2025-10-15 11:57:28.933 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@49232c6f
[DEBUG] 2025-10-15 11:57:28.934 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
[DEBUG] 2025-10-15 11:57:28.934 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2025-10-15 11:57:28.934 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2025-10-15 11:57:28.934 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2025-10-15 11:57:28.934 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2025-10-15 11:57:28.934 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
[DEBUG] 2025-10-15 11:57:28.934 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2025-10-15 11:57:28.934 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2025-10-15 11:57:28.934 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@1c3b6963] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
[DEBUG] 2025-10-15 11:57:28.935 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@7364f68] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
[DEBUG] 2025-10-15 11:57:28.935 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
[DEBUG] 2025-10-15 11:57:28.935 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2025-10-15 11:57:28.935 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2025-10-15 11:57:28.935 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2025-10-15 11:57:28.935 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2025-10-15 11:57:28.935 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2025-10-15 11:57:28.935 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2025-10-15 11:57:28.935 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2025-10-15 11:57:28.935 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
[DEBUG] 2025-10-15 11:57:28.935 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
[DEBUG] 2025-10-15 11:57:28.935 [main] SqmFunctionRegistry - Registering alternate key : day -> dayofmonth
[DEBUG] 2025-10-15 11:57:28.935 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
[DEBUG] 2025-10-15 11:57:28.935 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2025-10-15 11:57:28.936 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2025-10-15 11:57:28.936 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2025-10-15 11:57:28.936 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2025-10-15 11:57:28.936 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
[DEBUG] 2025-10-15 11:57:28.936 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
[DEBUG] 2025-10-15 11:57:28.936 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
[DEBUG] 2025-10-15 11:57:28.936 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
[DEBUG] 2025-10-15 11:57:28.936 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
[DEBUG] 2025-10-15 11:57:28.936 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
[DEBUG] 2025-10-15 11:57:28.936 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
[DEBUG] 2025-10-15 11:57:28.936 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2025-10-15 11:57:28.937 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
[DEBUG] 2025-10-15 11:57:28.937 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
[DEBUG] 2025-10-15 11:57:28.937 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
[DEBUG] 2025-10-15 11:57:28.937 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
[DEBUG] 2025-10-15 11:57:28.937 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2025-10-15 11:57:28.937 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2025-10-15 11:57:28.937 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2025-10-15 11:57:28.937 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2025-10-15 11:57:28.937 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2025-10-15 11:57:28.937 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@55a0f011] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@33324c05
[DEBUG] 2025-10-15 11:57:28.937 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2025-10-15 11:57:28.937 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2025-10-15 11:57:28.937 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2025-10-15 11:57:28.942 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@2ce524d2] under trunc; prior registration was null
[DEBUG] 2025-10-15 11:57:28.942 [main] SqmFunctionRegistry - Registering alternate key : truncate -> trunc
[DEBUG] 2025-10-15 11:57:28.942 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2025-10-15 11:57:28.942 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3869a6e5] under bitand; prior registration was null
[DEBUG] 2025-10-15 11:57:28.943 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@e3899fd] under bitor; prior registration was null
[DEBUG] 2025-10-15 11:57:28.943 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7d484fcd] under bitxor; prior registration was null
[DEBUG] 2025-10-15 11:57:28.943 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@788e3702] under bitnot; prior registration was null
[DEBUG] 2025-10-15 11:57:28.943 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2025-10-15 11:57:28.943 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2025-10-15 11:57:28.943 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
[DEBUG] 2025-10-15 11:57:28.943 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2025-10-15 11:57:28.943 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2025-10-15 11:57:28.943 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
[DEBUG] 2025-10-15 11:57:28.943 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2025-10-15 11:57:28.943 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2025-10-15 11:57:28.943 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
[DEBUG] 2025-10-15 11:57:28.943 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
[DEBUG] 2025-10-15 11:57:28.943 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
[DEBUG] 2025-10-15 11:57:28.943 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
[DEBUG] 2025-10-15 11:57:28.943 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
[DEBUG] 2025-10-15 11:57:28.944 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@d25e878] under format; prior registration was org.hibernate.dialect.function.FormatFunction@45c80312
[DEBUG] 2025-10-15 11:57:28.944 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
[DEBUG] 2025-10-15 11:57:28.944 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
[DEBUG] 2025-10-15 11:57:28.944 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2025-10-15 11:57:28.944 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2025-10-15 11:57:28.944 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@30b3d899
[DEBUG] 2025-10-15 11:57:28.944 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@78d92eef
[DEBUG] 2025-10-15 11:57:28.944 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
[DEBUG] 2025-10-15 11:57:28.944 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@47187f50] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@cbf1997
[DEBUG] 2025-10-15 11:57:28.944 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@78116659] under chr; prior registration was null
[DEBUG] 2025-10-15 11:57:28.944 [main] SqmFunctionRegistry - Registering alternate key : char -> chr
[DEBUG] 2025-10-15 11:57:28.944 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@712e787e] under sysdate; prior registration was null
[DEBUG] 2025-10-15 11:57:28.944 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2025-10-15 11:57:28.945 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2025-10-15 11:57:28.945 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2025-10-15 11:57:28.945 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2025-10-15 11:57:28.945 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2025-10-15 11:57:28.945 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2025-10-15 11:57:28.947 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@79195c22] under rank; prior registration was null
[DEBUG] 2025-10-15 11:57:28.947 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@c9b5a99] under dense_rank; prior registration was null
[DEBUG] 2025-10-15 11:57:28.947 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@70be89ec] under percent_rank; prior registration was null
[DEBUG] 2025-10-15 11:57:28.947 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@2aee0704] under cume_dist; prior registration was null
[DEBUG] 2025-10-15 11:57:28.947 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@11c581a0] under listagg; prior registration was null
[DEBUG] 2025-10-15 11:57:28.952 [main] HQL_FUNCTIONS - abs(NUMERIC arg)
[DEBUG] 2025-10-15 11:57:28.952 [main] HQL_FUNCTIONS - Double acos(NUMERIC arg)
[DEBUG] 2025-10-15 11:57:28.952 [main] HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days)
[DEBUG] 2025-10-15 11:57:28.952 [main] HQL_FUNCTIONS - addtime(TIME datetime, TIME time)
[DEBUG] 2025-10-15 11:57:28.952 [main] HQL_FUNCTIONS - Boolean any(BOOLEAN arg)
[DEBUG] 2025-10-15 11:57:28.952 [main] HQL_FUNCTIONS - Integer ascii(STRING arg)
[DEBUG] 2025-10-15 11:57:28.952 [main] HQL_FUNCTIONS - Double asin(NUMERIC arg)
[DEBUG] 2025-10-15 11:57:28.952 [main] HQL_FUNCTIONS - Double atan(NUMERIC arg)
[DEBUG] 2025-10-15 11:57:28.952 [main] HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2025-10-15 11:57:28.952 [main] HQL_FUNCTIONS - avg(arg)
[DEBUG] 2025-10-15 11:57:28.952 [main] HQL_FUNCTIONS - bit_and(arg)
[DEBUG] 2025-10-15 11:57:28.953 [main] HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2025-10-15 11:57:28.953 [main] HQL_FUNCTIONS - bit_or(arg)
[DEBUG] 2025-10-15 11:57:28.953 [main] HQL_FUNCTIONS - bitand(arg0, arg1)
[DEBUG] 2025-10-15 11:57:28.953 [main] HQL_FUNCTIONS - bitnot(arg)
[DEBUG] 2025-10-15 11:57:28.953 [main] HQL_FUNCTIONS - bitor(arg0, arg1)
[DEBUG] 2025-10-15 11:57:28.953 [main] HQL_FUNCTIONS - bitxor(arg0, arg1)
[DEBUG] 2025-10-15 11:57:28.953 [main] HQL_FUNCTIONS - cast(arg as Type)
[DEBUG] 2025-10-15 11:57:28.953 [main] HQL_FUNCTIONS - ceiling(NUMERIC arg)
[DEBUG] 2025-10-15 11:57:28.953 [main] HQL_FUNCTIONS - Character char(INTEGER arg)
[DEBUG] 2025-10-15 11:57:28.953 [main] HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2025-10-15 11:57:28.953 [main] HQL_FUNCTIONS - Character chr(INTEGER arg)
[DEBUG] 2025-10-15 11:57:28.953 [main] HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
[DEBUG] 2025-10-15 11:57:28.953 [main] HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
[DEBUG] 2025-10-15 11:57:28.953 [main] HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2025-10-15 11:57:28.953 [main] HQL_FUNCTIONS - Double cos(NUMERIC arg)
[DEBUG] 2025-10-15 11:57:28.953 [main] HQL_FUNCTIONS - Double cosh(NUMERIC arg)
[DEBUG] 2025-10-15 11:57:28.953 [main] HQL_FUNCTIONS - Double cot(NUMERIC arg)
[DEBUG] 2025-10-15 11:57:28.953 [main] HQL_FUNCTIONS - Long count([distinct ]{arg|*})
[DEBUG] 2025-10-15 11:57:28.953 [main] HQL_FUNCTIONS - Integer crc32(arg)
[DEBUG] 2025-10-15 11:57:28.953 [main] HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
[DEBUG] 2025-10-15 11:57:28.953 [main] HQL_FUNCTIONS - Date curdate()
[DEBUG] 2025-10-15 11:57:28.953 [main] HQL_FUNCTIONS - Date current date
[DEBUG] 2025-10-15 11:57:28.953 [main] HQL_FUNCTIONS - Time current time
[DEBUG] 2025-10-15 11:57:28.953 [main] HQL_FUNCTIONS - Timestamp current timestamp
[DEBUG] 2025-10-15 11:57:28.953 [main] HQL_FUNCTIONS - Date current_date
[DEBUG] 2025-10-15 11:57:28.953 [main] HQL_FUNCTIONS - Instant current_instant
[DEBUG] 2025-10-15 11:57:28.953 [main] HQL_FUNCTIONS - Time current_time
[DEBUG] 2025-10-15 11:57:28.953 [main] HQL_FUNCTIONS - Timestamp current_timestamp
[DEBUG] 2025-10-15 11:57:28.954 [main] HQL_FUNCTIONS - Time curtime()
[DEBUG] 2025-10-15 11:57:28.954 [main] HQL_FUNCTIONS - Date date(arg)
[DEBUG] 2025-10-15 11:57:28.954 [main] HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2025-10-15 11:57:28.954 [main] HQL_FUNCTIONS - Integer datediff(DATE end, DATE start)
[DEBUG] 2025-10-15 11:57:28.954 [main] HQL_FUNCTIONS - Integer day(DATE arg)
[DEBUG] 2025-10-15 11:57:28.954 [main] HQL_FUNCTIONS - String dayname(DATE arg)
[DEBUG] 2025-10-15 11:57:28.954 [main] HQL_FUNCTIONS - Integer dayofmonth(DATE arg)
[DEBUG] 2025-10-15 11:57:28.954 [main] HQL_FUNCTIONS - Integer dayofweek(DATE arg)
[DEBUG] 2025-10-15 11:57:28.954 [main] HQL_FUNCTIONS - Integer dayofyear(DATE arg)
[DEBUG] 2025-10-15 11:57:28.954 [main] HQL_FUNCTIONS - Double degrees(NUMERIC arg)
[DEBUG] 2025-10-15 11:57:28.954 [main] HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
[DEBUG] 2025-10-15 11:57:28.954 [main] HQL_FUNCTIONS - Boolean every(BOOLEAN arg)
[DEBUG] 2025-10-15 11:57:28.954 [main] HQL_FUNCTIONS - Double exp(NUMERIC arg)
[DEBUG] 2025-10-15 11:57:28.954 [main] HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2025-10-15 11:57:28.954 [main] HQL_FUNCTIONS - first_valueANY value
[DEBUG] 2025-10-15 11:57:28.954 [main] HQL_FUNCTIONS - floor(NUMERIC arg)
[DEBUG] 2025-10-15 11:57:28.954 [main] HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2025-10-15 11:57:28.954 [main] HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2025-10-15 11:57:28.954 [main] HQL_FUNCTIONS - Integer hour(TIME arg)
[DEBUG] 2025-10-15 11:57:28.955 [main] HQL_FUNCTIONS - ifnull(arg0, arg1)
[DEBUG] 2025-10-15 11:57:28.955 [main] HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2025-10-15 11:57:28.955 [main] HQL_FUNCTIONS - Instant instant
[DEBUG] 2025-10-15 11:57:28.955 [main] HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2025-10-15 11:57:28.955 [main] HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2025-10-15 11:57:28.955 [main] HQL_FUNCTIONS - Date last_day(DATE arg)
[DEBUG] 2025-10-15 11:57:28.955 [main] HQL_FUNCTIONS - last_valueANY value
[DEBUG] 2025-10-15 11:57:28.955 [main] HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2025-10-15 11:57:28.955 [main] HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2025-10-15 11:57:28.955 [main] HQL_FUNCTIONS - String left(STRING string, INTEGER length)
[DEBUG] 2025-10-15 11:57:28.955 [main] HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
[DEBUG] 2025-10-15 11:57:28.955 [main] HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
[DEBUG] 2025-10-15 11:57:28.955 [main] HQL_FUNCTIONS - Double ln(NUMERIC arg)
[DEBUG] 2025-10-15 11:57:28.955 [main] HQL_FUNCTIONS - LocalDate local date
[DEBUG] 2025-10-15 11:57:28.955 [main] HQL_FUNCTIONS - LocalDateTime local datetime
[DEBUG] 2025-10-15 11:57:28.955 [main] HQL_FUNCTIONS - LocalTime local time
[DEBUG] 2025-10-15 11:57:28.955 [main] HQL_FUNCTIONS - LocalDate local_date
[DEBUG] 2025-10-15 11:57:28.955 [main] HQL_FUNCTIONS - LocalDateTime local_datetime
[DEBUG] 2025-10-15 11:57:28.955 [main] HQL_FUNCTIONS - LocalTime local_time
[DEBUG] 2025-10-15 11:57:28.955 [main] HQL_FUNCTIONS - Timestamp localtime
[DEBUG] 2025-10-15 11:57:28.955 [main] HQL_FUNCTIONS - Timestamp localtimestamp
[DEBUG] 2025-10-15 11:57:28.955 [main] HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2025-10-15 11:57:28.955 [main] HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
[DEBUG] 2025-10-15 11:57:28.955 [main] HQL_FUNCTIONS - Double log10(NUMERIC arg)
[DEBUG] 2025-10-15 11:57:28.955 [main] HQL_FUNCTIONS - Double log2(NUMERIC arg)
[DEBUG] 2025-10-15 11:57:28.955 [main] HQL_FUNCTIONS - String lower(STRING string)
[DEBUG] 2025-10-15 11:57:28.955 [main] HQL_FUNCTIONS - String lpad(string, length[, padding])
[DEBUG] 2025-10-15 11:57:28.955 [main] HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
[DEBUG] 2025-10-15 11:57:28.956 [main] HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear)
[DEBUG] 2025-10-15 11:57:28.956 [main] HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
[DEBUG] 2025-10-15 11:57:28.956 [main] HQL_FUNCTIONS - max(COMPARABLE arg)
[DEBUG] 2025-10-15 11:57:28.956 [main] HQL_FUNCTIONS - String md5(arg)
[DEBUG] 2025-10-15 11:57:28.956 [main] HQL_FUNCTIONS - Integer microsecond(TIME arg)
[DEBUG] 2025-10-15 11:57:28.956 [main] HQL_FUNCTIONS - min(COMPARABLE arg)
[DEBUG] 2025-10-15 11:57:28.956 [main] HQL_FUNCTIONS - Integer minute(TIME arg)
[DEBUG] 2025-10-15 11:57:28.956 [main] HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2025-10-15 11:57:28.956 [main] HQL_FUNCTIONS - Integer month(DATE arg)
[DEBUG] 2025-10-15 11:57:28.956 [main] HQL_FUNCTIONS - String monthname(DATE arg)
[DEBUG] 2025-10-15 11:57:28.956 [main] HQL_FUNCTIONS - Timestamp now()
[DEBUG] 2025-10-15 11:57:28.956 [main] HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
[DEBUG] 2025-10-15 11:57:28.956 [main] HQL_FUNCTIONS - nullif(arg0, arg1)
[DEBUG] 2025-10-15 11:57:28.956 [main] HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2025-10-15 11:57:28.956 [main] HQL_FUNCTIONS - OffsetDateTime offset datetime
[DEBUG] 2025-10-15 11:57:28.956 [main] HQL_FUNCTIONS - OffsetDateTime offset_datetime
[DEBUG] 2025-10-15 11:57:28.956 [main] HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2025-10-15 11:57:28.956 [main] HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2025-10-15 11:57:28.956 [main] HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
[DEBUG] 2025-10-15 11:57:28.956 [main] HQL_FUNCTIONS - Double pi
[DEBUG] 2025-10-15 11:57:28.956 [main] HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
[DEBUG] 2025-10-15 11:57:28.956 [main] HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2025-10-15 11:57:28.956 [main] HQL_FUNCTIONS - Integer quarter(DATE arg)
[DEBUG] 2025-10-15 11:57:28.956 [main] HQL_FUNCTIONS - Double radians(NUMERIC arg)
[DEBUG] 2025-10-15 11:57:28.956 [main] HQL_FUNCTIONS - Double rand([INTEGER seed])
[DEBUG] 2025-10-15 11:57:28.956 [main] HQL_FUNCTIONS - Long rank([arg0[, ...]])
[DEBUG] 2025-10-15 11:57:28.956 [main] HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
[DEBUG] 2025-10-15 11:57:28.956 [main] HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2025-10-15 11:57:28.956 [main] HQL_FUNCTIONS - String reverse(STRING arg)
[DEBUG] 2025-10-15 11:57:28.957 [main] HQL_FUNCTIONS - String right(STRING string, INTEGER length)
[DEBUG] 2025-10-15 11:57:28.957 [main] HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
[DEBUG] 2025-10-15 11:57:28.957 [main] HQL_FUNCTIONS - Long row_number()
[DEBUG] 2025-10-15 11:57:28.957 [main] HQL_FUNCTIONS - String rpad(string, length[, padding])
[DEBUG] 2025-10-15 11:57:28.957 [main] HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
[DEBUG] 2025-10-15 11:57:28.957 [main] HQL_FUNCTIONS - Integer second(TIME arg)
[DEBUG] 2025-10-15 11:57:28.957 [main] HQL_FUNCTIONS - String sha(arg)
[DEBUG] 2025-10-15 11:57:28.957 [main] HQL_FUNCTIONS - String sha1(arg)
[DEBUG] 2025-10-15 11:57:28.957 [main] HQL_FUNCTIONS - String sha2(arg0, arg1)
[DEBUG] 2025-10-15 11:57:28.957 [main] HQL_FUNCTIONS - Integer sign(NUMERIC arg)
[DEBUG] 2025-10-15 11:57:28.957 [main] HQL_FUNCTIONS - Double sin(NUMERIC arg)
[DEBUG] 2025-10-15 11:57:28.957 [main] HQL_FUNCTIONS - Double sinh(NUMERIC arg)
[DEBUG] 2025-10-15 11:57:28.957 [main] HQL_FUNCTIONS - String soundex(arg)
[DEBUG] 2025-10-15 11:57:28.957 [main] HQL_FUNCTIONS - String space(INTEGER arg)
[DEBUG] 2025-10-15 11:57:28.957 [main] HQL_FUNCTIONS - Object sql
[DEBUG] 2025-10-15 11:57:28.957 [main] HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
[DEBUG] 2025-10-15 11:57:28.957 [main] HQL_FUNCTIONS - Double stddev(NUMERIC arg)
[DEBUG] 2025-10-15 11:57:28.957 [main] HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
[DEBUG] 2025-10-15 11:57:28.957 [main] HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
[DEBUG] 2025-10-15 11:57:28.957 [main] HQL_FUNCTIONS - String str(arg)
[DEBUG] 2025-10-15 11:57:28.957 [main] HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days)
[DEBUG] 2025-10-15 11:57:28.957 [main] HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2025-10-15 11:57:28.957 [main] HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2025-10-15 11:57:28.957 [main] HQL_FUNCTIONS - subtime(TIME datetime, TIME time)
[DEBUG] 2025-10-15 11:57:28.957 [main] HQL_FUNCTIONS - sum(arg)
[DEBUG] 2025-10-15 11:57:28.958 [main] HQL_FUNCTIONS - Timestamp sysdate()
[DEBUG] 2025-10-15 11:57:28.958 [main] HQL_FUNCTIONS - Double tan(NUMERIC arg)
[DEBUG] 2025-10-15 11:57:28.958 [main] HQL_FUNCTIONS - Double tanh(NUMERIC arg)
[DEBUG] 2025-10-15 11:57:28.958 [main] HQL_FUNCTIONS - String time(arg)
[DEBUG] 2025-10-15 11:57:28.958 [main] HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1])
[DEBUG] 2025-10-15 11:57:28.958 [main] HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2025-10-15 11:57:28.958 [main] HQL_FUNCTIONS - basicType@14(java.lang.Long,-5)|basicType@17(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2025-10-15 11:57:28.958 [main] HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2025-10-15 11:57:28.958 [main] HQL_FUNCTIONS - trunc( ... )
[DEBUG] 2025-10-15 11:57:28.958 [main] HQL_FUNCTIONS - truncate( ... )
[DEBUG] 2025-10-15 11:57:28.958 [main] HQL_FUNCTIONS - String upper(STRING string)
[DEBUG] 2025-10-15 11:57:28.958 [main] HQL_FUNCTIONS - Date utc_date
[DEBUG] 2025-10-15 11:57:28.958 [main] HQL_FUNCTIONS - Time utc_time
[DEBUG] 2025-10-15 11:57:28.958 [main] HQL_FUNCTIONS - Timestamp utc_timestamp
[DEBUG] 2025-10-15 11:57:28.958 [main] HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
[DEBUG] 2025-10-15 11:57:28.958 [main] HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
[DEBUG] 2025-10-15 11:57:28.958 [main] HQL_FUNCTIONS - Double variance(NUMERIC arg)
[DEBUG] 2025-10-15 11:57:28.958 [main] HQL_FUNCTIONS - Integer week(DATE arg)
[DEBUG] 2025-10-15 11:57:28.958 [main] HQL_FUNCTIONS - Integer year(DATE arg)
[DEBUG] 2025-10-15 11:57:28.963 [main] cache - Starting QueryInterpretationCache(2048)
[DEBUG] 2025-10-15 11:57:29.077 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2025-10-15 11:57:29.079 [main] EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
[DEBUG] 2025-10-15 11:57:29.188 [main] ClassLoaderAccessImpl - Not known whether passed class name [org.hungrybadger.entity.Review] is safe
[DEBUG] 2025-10-15 11:57:29.188 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.hungrybadger.entity.Review
[DEBUG] 2025-10-15 11:57:29.416 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.hungrybadger.entity.Review]: private accessor [cuisineType]
[DEBUG] 2025-10-15 11:57:29.452 [main] interceptor - To-one property `org.hungrybadger.entity.Photo#review` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2025-10-15 11:57:29.452 [main] interceptor - To-one property `org.hungrybadger.entity.Photo#review` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2025-10-15 11:57:29.453 [main] ClassLoaderAccessImpl - Not known whether passed class name [org.hungrybadger.entity.Photo] is safe
[DEBUG] 2025-10-15 11:57:29.453 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.hungrybadger.entity.Photo
[DEBUG] 2025-10-15 11:57:29.465 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.hungrybadger.entity.Photo]: private accessor [imagePath]
[DEBUG] 2025-10-15 11:57:29.465 [main] interceptor - To-one property `org.hungrybadger.entity.Photo#review` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2025-10-15 11:57:29.484 [main] mutation - Skipping collection (re)creation - org.hungrybadger.entity.Review.photos
[DEBUG] 2025-10-15 11:57:29.485 [main] mutation - Skipping collection row deletions - org.hungrybadger.entity.Review.photos
[DEBUG] 2025-10-15 11:57:29.486 [main] mutation - Skipping collection removals - org.hungrybadger.entity.Review.photos
[DEBUG] 2025-10-15 11:57:29.521 [main] creation - Starting post-init callbacks
[DEBUG] 2025-10-15 11:57:29.521 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[org.hungrybadger.entity.Review.photos#{element}]) - element descriptor
[DEBUG] 2025-10-15 11:57:29.521 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(org.hungrybadger.entity.Review.photos)#finishInitialization
[DEBUG] 2025-10-15 11:57:29.521 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(org.hungrybadger.entity.Review.photos) - key descriptor
[DEBUG] 2025-10-15 11:57:29.526 [main] creation - Starting PostInitCallbackEntry : Entity(org.hungrybadger.entity.Review) `staticFetchableList` generator
[DEBUG] 2025-10-15 11:57:29.527 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.hungrybadger.entity.Photo.review]
[DEBUG] 2025-10-15 11:57:29.527 [main] creation - Starting PostInitCallbackEntry : Entity(org.hungrybadger.entity.Photo) `staticFetchableList` generator
[DEBUG] 2025-10-15 11:57:29.527 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[org.hungrybadger.entity.Review.photos#{element}]) - element descriptor
[DEBUG] 2025-10-15 11:57:29.615 [main] create - Created new SQL alias : r1_0
[DEBUG] 2025-10-15 11:57:29.618 [main] create - Registration of TableGroup [StandardTableGroup(org.hungrybadger.entity.Review)] with identifierForTableGroup [org.hungrybadger.entity.Review] for NavigablePath [org.hungrybadger.entity.Review] 
[DEBUG] 2025-10-15 11:57:29.637 [main] AST - DomainResult Graph:
 \-EntityResultImpl [org.hungrybadger.entity.Review]
 |  +-BasicFetch [org.hungrybadger.entity.Review.cuisineType]
 |  +-BasicFetch [org.hungrybadger.entity.Review.personalNotes]
 |  +-BasicFetch [org.hungrybadger.entity.Review.personalRating]
 |  +-DelayedCollectionFetch [org.hungrybadger.entity.Review.photos]
 |  \-BasicFetch [org.hungrybadger.entity.Review.restaurantName]

[DEBUG] 2025-10-15 11:57:29.647 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.hungrybadger.entity.Review) {
          primaryTableReference : review as r1_0
        }
      }
    }

[DEBUG] 2025-10-15 11:57:29.658 [main] AbstractEntityPersister - Static SQL for entity: org.hungrybadger.entity.Review
[DEBUG] 2025-10-15 11:57:29.658 [main] AbstractEntityPersister -  Version select: select id from review where id=?
[DEBUG] 2025-10-15 11:57:29.658 [main] AbstractEntityPersister -  Insert (0): insert into review (cuisine_type,personal_notes,personal_rating,restaurant_name) values (?,?,?,?)
[DEBUG] 2025-10-15 11:57:29.658 [main] AbstractEntityPersister -  Update (0): update review set cuisine_type=?,personal_notes=?,personal_rating=?,restaurant_name=? where id=?
[DEBUG] 2025-10-15 11:57:29.658 [main] AbstractEntityPersister -  Delete (0): delete from review where id=?
[DEBUG] 2025-10-15 11:57:29.658 [main] create - Created new SQL alias : p1_0
[DEBUG] 2025-10-15 11:57:29.658 [main] create - Registration of TableGroup [StandardTableGroup(org.hungrybadger.entity.Photo)] with identifierForTableGroup [org.hungrybadger.entity.Photo] for NavigablePath [org.hungrybadger.entity.Photo] 
[DEBUG] 2025-10-15 11:57:29.662 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3c7d8a4] with identifierForTableGroup [org.hungrybadger.entity.Photo.review] for NavigablePath [org.hungrybadger.entity.Photo.review] 
[DEBUG] 2025-10-15 11:57:29.663 [main] create - Created new SQL alias : r1_0
[DEBUG] 2025-10-15 11:57:29.664 [main] AST - DomainResult Graph:
 \-EntityResultImpl [org.hungrybadger.entity.Photo]
 |  +-BasicFetch [org.hungrybadger.entity.Photo.imagePath]
 |  \-EntityFetchJoinedImpl [org.hungrybadger.entity.Photo.review]

[DEBUG] 2025-10-15 11:57:29.665 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.hungrybadger.entity.Photo) {
          primaryTableReference : photo as p1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.hungrybadger.entity.Photo.review) {
              primaryTableReference : review as r1_0
            }
          }
        }
      }
    }

[DEBUG] 2025-10-15 11:57:29.666 [main] AbstractEntityPersister - Static SQL for entity: org.hungrybadger.entity.Photo
[DEBUG] 2025-10-15 11:57:29.666 [main] AbstractEntityPersister -  Version select: select id from photo where id=?
[DEBUG] 2025-10-15 11:57:29.666 [main] AbstractEntityPersister -  Insert (0): insert into photo (image_path,review_id) values (?,?)
[DEBUG] 2025-10-15 11:57:29.666 [main] AbstractEntityPersister -  Update (0): update photo set image_path=?,review_id=? where id=?
[DEBUG] 2025-10-15 11:57:29.666 [main] AbstractEntityPersister -  Delete (0): delete from photo where id=?
[DEBUG] 2025-10-15 11:57:29.667 [main] create - Created new SQL alias : p1_0
[DEBUG] 2025-10-15 11:57:29.667 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@1328f482] with identifierForTableGroup [org.hungrybadger.entity.Review.photos] for NavigablePath [org.hungrybadger.entity.Review.photos] 
[DEBUG] 2025-10-15 11:57:29.667 [main] create - Registration of TableGroup [StandardTableGroup(org.hungrybadger.entity.Review.photos.{element})] with identifierForTableGroup [org.hungrybadger.entity.Review.photos.{element}] for NavigablePath [org.hungrybadger.entity.Review.photos.{element}] 
[DEBUG] 2025-10-15 11:57:29.675 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@a55e82a] with identifierForTableGroup [org.hungrybadger.entity.Review.photos.{element}.review] for NavigablePath [org.hungrybadger.entity.Review.photos.{element}.review] 
[DEBUG] 2025-10-15 11:57:29.678 [main] AST - DomainResult Graph:
 \-CollectionDomainResult [org.hungrybadger.entity.Review.photos]

[DEBUG] 2025-10-15 11:57:29.678 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (p1 : org.hungrybadger.entity.Review.photos) {
          primaryTableReference : photo as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (r1 : org.hungrybadger.entity.Review.photos.{element}.review) {
            }
          }
        }
      }
    }

[DEBUG] 2025-10-15 11:57:29.678 [main] mutation - Static SQL for collection: org.hungrybadger.entity.Review.photos
[DEBUG] 2025-10-15 11:57:29.725 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2025-10-15 11:57:29.725 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2025-10-15 11:57:29.733 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2025-10-15 11:57:29.733 [main] JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[DEBUG] 2025-10-15 11:57:29.735 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5e8507f1] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@70697478]
[DEBUG] 2025-10-15 11:57:29.736 [main] NamedObjectRepository - Checking 0 named HQL queries
[DEBUG] 2025-10-15 11:57:29.736 [main] NamedObjectRepository - Checking 0 named SQL queries
[DEBUG] 2025-10-15 11:57:29.737 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2025-10-15 11:57:29.737 [main] SchemaManagementToolCoordinator - No actions found; doing nothing
[DEBUG] 2025-10-15 11:57:29.740 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@50785f86
[DEBUG] 2025-10-15 11:57:29.740 [main] SessionFactoryRegistry - Registering SessionFactory: f4fdee88-9494-4494-9eb3-14d9aadec4b8 (<unnamed>)
[DEBUG] 2025-10-15 11:57:29.740 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2025-10-15 11:57:29.740 [main] SessionFactoryImpl - Instantiated SessionFactory
[DEBUG] 2025-10-15 11:57:29.788 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2025-10-15 11:57:29.914 [main] create - Created new SQL alias : p1_0
[DEBUG] 2025-10-15 11:57:29.915 [main] create - Registration of TableGroup [StandardTableGroup(org.hungrybadger.entity.Photo(13167687747200))] with identifierForTableGroup [org.hungrybadger.entity.Photo] for NavigablePath [org.hungrybadger.entity.Photo] 
[DEBUG] 2025-10-15 11:57:29.927 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@16949dfa] with identifierForTableGroup [org.hungrybadger.entity.Photo.review] for NavigablePath [org.hungrybadger.entity.Photo.review] 
[DEBUG] 2025-10-15 11:57:29.931 [main] BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2d230cff
[DEBUG] 2025-10-15 11:57:29.932 [main] BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.hungrybadger.entity.Photo(13167687747200).imagePath) 
[DEBUG] 2025-10-15 11:57:29.938 [main] AST - DomainResult Graph:
 \-EntityResultImpl [org.hungrybadger.entity.Photo(13167687747200)]
 |  +-BasicFetch [org.hungrybadger.entity.Photo(13167687747200).imagePath]
 |  \-CircularFetchImpl [org.hungrybadger.entity.Photo(13167687747200).review]

[DEBUG] 2025-10-15 11:57:29.939 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.hungrybadger.entity.Photo(13167687747200)) {
          primaryTableReference : photo as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (r1 : org.hungrybadger.entity.Photo(13167687747200).review) {
            }
          }
        }
      }
    }

[DEBUG] 2025-10-15 11:57:29.952 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
[DEBUG] 2025-10-15 11:57:29.973 [main] results - Initializer list:
	  org.hungrybadger.entity.Photo(13167687747200).review -> EntitySelectFetchInitializer(org.hungrybadger.entity.Photo(13167687747200).review)@1545984685 (ToOneAttributeMapping(NavigableRole[org.hungrybadger.entity.Photo.review])@383127665)
	  org.hungrybadger.entity.Photo(13167687747200) -> EntityResultInitializer(org.hungrybadger.entity.Photo(13167687747200))@1101590744 (SingleTableEntityPersister(org.hungrybadger.entity.Photo))

[DEBUG] 2025-10-15 11:57:29.980 [main] SQL - select p1_0.id,p1_0.image_path,p1_0.review_id from photo p1_0 where p1_0.image_path=?
[DEBUG] 2025-10-15 11:57:30.002 [main] results - Extracted JDBC value [0] - [2]
[DEBUG] 2025-10-15 11:57:30.003 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Photo(13167687747200)): 2
[DEBUG] 2025-10-15 11:57:30.004 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Photo(13167687747200)#2] : 1391240208
[DEBUG] 2025-10-15 11:57:30.005 [main] results - Extracted JDBC value [2] - [2]
[DEBUG] 2025-10-15 11:57:30.005 [main] entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.hungrybadger.entity.Photo(13167687747200).review#2) : 2
[DEBUG] 2025-10-15 11:57:30.010 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2025-10-15 11:57:30.013 [main] results - Initializer list:
	  org.hungrybadger.entity.Review.photos -> DelayedCollectionInitializer(org.hungrybadger.entity.Review.photos)@447899837 (PluralAttribute(org.hungrybadger.entity.Review.photos))
	  org.hungrybadger.entity.Review -> EntityResultInitializer(org.hungrybadger.entity.Review)@800040885 (SingleTableEntityPersister(org.hungrybadger.entity.Review))

[DEBUG] 2025-10-15 11:57:30.013 [main] SQL - select r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from review r1_0 where r1_0.id=?
[DEBUG] 2025-10-15 11:57:30.017 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review): 2
[DEBUG] 2025-10-15 11:57:30.017 [main] results - Extracted JDBC value [0] - [2]
[DEBUG] 2025-10-15 11:57:30.018 [main] collection - (DelayedCollectionInitializer) Current row collection key : org.hungrybadger.entity.Review.photos#2
[DEBUG] 2025-10-15 11:57:30.019 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Review#2] : 1284161223
[DEBUG] 2025-10-15 11:57:30.026 [main] results - Extracted JDBC value [1] - [American]
[DEBUG] 2025-10-15 11:57:30.027 [main] results - Extracted JDBC value [2] - [Wraps, good after a long day]
[DEBUG] 2025-10-15 11:57:30.027 [main] results - Extracted JDBC value [3] - [4]
[DEBUG] 2025-10-15 11:57:30.027 [main] results - Extracted JDBC value [4] - [Conrads]
[DEBUG] 2025-10-15 11:57:30.032 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Review#2
[DEBUG] 2025-10-15 11:57:30.033 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7ef4aceb
[DEBUG] 2025-10-15 11:57:30.034 [main] entity - (EntitySelectFetchInitializer) Entity [org.hungrybadger.entity.Photo(13167687747200).review#2] : 2 has being loaded by session.internalLoad.
[DEBUG] 2025-10-15 11:57:30.035 [main] results - Extracted JDBC value [1] - [images/conrads_wrap.jpg]
[DEBUG] 2025-10-15 11:57:30.035 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Photo(13167687747200)#2
[DEBUG] 2025-10-15 11:57:30.035 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@31433df9
[DEBUG] 2025-10-15 11:57:30.035 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 11:57:30.037 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 11:59:17.767 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2025-10-15 11:59:17.778 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2025-10-15 11:59:17.821 [main] Version - HHH000412: Hibernate ORM core version 6.4.3.Final
[DEBUG] 2025-10-15 11:59:17.824 [main] Environment - HHH000206: 'hibernate.properties' not found
[DEBUG] 2025-10-15 11:59:17.890 [main] LocalXmlResourceResolver - Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
[DEBUG] 2025-10-15 11:59:17.898 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2025-10-15 11:59:18.145 [main] factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2025-10-15 11:59:18.151 [main] factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2025-10-15 11:59:18.152 [main] factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2025-10-15 11:59:18.153 [main] factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2025-10-15 11:59:18.153 [main] factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2025-10-15 11:59:18.153 [main] factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2025-10-15 11:59:18.154 [main] factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2025-10-15 11:59:18.155 [main] factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2025-10-15 11:59:18.156 [main] factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2025-10-15 11:59:18.157 [main] factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2025-10-15 11:59:18.157 [main] factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2025-10-15 11:59:18.157 [main] factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2025-10-15 11:59:18.158 [main] factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2025-10-15 11:59:18.168 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[INFO ] 2025-10-15 11:59:18.169 [main] RegionFactoryInitiator - HHH000026: Second-level cache disabled
[DEBUG] 2025-10-15 11:59:18.294 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@19f7222e
[DEBUG] 2025-10-15 11:59:18.294 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@19f7222e
[DEBUG] 2025-10-15 11:59:18.294 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@19f7222e
[DEBUG] 2025-10-15 11:59:18.294 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3f725306
[DEBUG] 2025-10-15 11:59:18.295 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3f725306
[DEBUG] 2025-10-15 11:59:18.295 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3c69362a
[DEBUG] 2025-10-15 11:59:18.295 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3c69362a
[DEBUG] 2025-10-15 11:59:18.295 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@2412a42b
[DEBUG] 2025-10-15 11:59:18.295 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@2412a42b
[DEBUG] 2025-10-15 11:59:18.295 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@45404d5
[DEBUG] 2025-10-15 11:59:18.295 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@45404d5
[DEBUG] 2025-10-15 11:59:18.295 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@45404d5
[DEBUG] 2025-10-15 11:59:18.295 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@29138d3a
[DEBUG] 2025-10-15 11:59:18.295 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@29138d3a
[DEBUG] 2025-10-15 11:59:18.295 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@29138d3a
[DEBUG] 2025-10-15 11:59:18.295 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@5cbe2654
[DEBUG] 2025-10-15 11:59:18.295 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@5cbe2654
[DEBUG] 2025-10-15 11:59:18.295 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@6dbcf214
[DEBUG] 2025-10-15 11:59:18.296 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@496a31da
[DEBUG] 2025-10-15 11:59:18.296 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@496a31da
[DEBUG] 2025-10-15 11:59:18.296 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@7c251f90
[DEBUG] 2025-10-15 11:59:18.296 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@51841ac6
[DEBUG] 2025-10-15 11:59:18.296 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@5ba26eb0
[DEBUG] 2025-10-15 11:59:18.296 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@5ba26eb0
[DEBUG] 2025-10-15 11:59:18.296 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@5ba26eb0
[DEBUG] 2025-10-15 11:59:18.296 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@435e60ff
[DEBUG] 2025-10-15 11:59:18.296 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@435e60ff
[DEBUG] 2025-10-15 11:59:18.296 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@435e60ff
[DEBUG] 2025-10-15 11:59:18.296 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@17d32e9b
[DEBUG] 2025-10-15 11:59:18.296 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@17d32e9b
[DEBUG] 2025-10-15 11:59:18.296 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@17d32e9b
[DEBUG] 2025-10-15 11:59:18.297 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@66f0548d
[DEBUG] 2025-10-15 11:59:18.297 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@66f0548d
[DEBUG] 2025-10-15 11:59:18.297 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@66f0548d
[DEBUG] 2025-10-15 11:59:18.297 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@2e6f610d
[DEBUG] 2025-10-15 11:59:18.297 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@2e6f610d
[DEBUG] 2025-10-15 11:59:18.297 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@2e6f610d
[DEBUG] 2025-10-15 11:59:18.297 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@1e86a5a7
[DEBUG] 2025-10-15 11:59:18.297 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@1e86a5a7
[DEBUG] 2025-10-15 11:59:18.297 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@10afe71a
[DEBUG] 2025-10-15 11:59:18.297 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@10afe71a
[DEBUG] 2025-10-15 11:59:18.297 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@741f8dbe
[DEBUG] 2025-10-15 11:59:18.298 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@741f8dbe
[DEBUG] 2025-10-15 11:59:18.298 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@741f8dbe
[DEBUG] 2025-10-15 11:59:18.298 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@212dfd39
[DEBUG] 2025-10-15 11:59:18.298 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@a2ddf26
[DEBUG] 2025-10-15 11:59:18.298 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@a2ddf26
[DEBUG] 2025-10-15 11:59:18.298 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@65d57e4e
[DEBUG] 2025-10-15 11:59:18.298 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@6daf7d37
[DEBUG] 2025-10-15 11:59:18.298 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@6daf7d37
[DEBUG] 2025-10-15 11:59:18.298 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@6daf7d37
[DEBUG] 2025-10-15 11:59:18.298 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@23a5818e
[DEBUG] 2025-10-15 11:59:18.298 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@4715ae33
[DEBUG] 2025-10-15 11:59:18.298 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@9fc9f91
[DEBUG] 2025-10-15 11:59:18.298 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@1fac1d5c
[DEBUG] 2025-10-15 11:59:18.298 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@1fac1d5c
[DEBUG] 2025-10-15 11:59:18.299 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@108a46d6
[DEBUG] 2025-10-15 11:59:18.299 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@108a46d6
[DEBUG] 2025-10-15 11:59:18.299 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@7a8406c2
[DEBUG] 2025-10-15 11:59:18.299 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@17690e14
[DEBUG] 2025-10-15 11:59:18.299 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6850b758
[DEBUG] 2025-10-15 11:59:18.299 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@2a2ef072
[DEBUG] 2025-10-15 11:59:18.299 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@704641e3
[DEBUG] 2025-10-15 11:59:18.299 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@2f00f851
[DEBUG] 2025-10-15 11:59:18.299 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@4207609e
[DEBUG] 2025-10-15 11:59:18.299 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@4207609e
[DEBUG] 2025-10-15 11:59:18.299 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@1f77b5cc
[DEBUG] 2025-10-15 11:59:18.299 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@1f77b5cc
[DEBUG] 2025-10-15 11:59:18.299 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@5d7ca698
[DEBUG] 2025-10-15 11:59:18.300 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@5d7ca698
[DEBUG] 2025-10-15 11:59:18.300 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@75961f16
[DEBUG] 2025-10-15 11:59:18.300 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@75961f16
[DEBUG] 2025-10-15 11:59:18.300 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@c6c82aa
[DEBUG] 2025-10-15 11:59:18.300 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@c6c82aa
[DEBUG] 2025-10-15 11:59:18.300 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2e179f3e
[DEBUG] 2025-10-15 11:59:18.300 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@16e7b402
[DEBUG] 2025-10-15 11:59:18.300 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@534c6767
[DEBUG] 2025-10-15 11:59:18.300 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@534c6767
[DEBUG] 2025-10-15 11:59:18.300 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@3bddc676
[DEBUG] 2025-10-15 11:59:18.300 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@29a1505c
[DEBUG] 2025-10-15 11:59:18.300 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@24db6ce
[DEBUG] 2025-10-15 11:59:18.300 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@320a8ebf
[DEBUG] 2025-10-15 11:59:18.300 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@320a8ebf
[DEBUG] 2025-10-15 11:59:18.301 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@67b100fe
[DEBUG] 2025-10-15 11:59:18.301 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@44b18fe4
[DEBUG] 2025-10-15 11:59:18.301 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@2ba5aa7a
[DEBUG] 2025-10-15 11:59:18.301 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@2ba5aa7a
[DEBUG] 2025-10-15 11:59:18.301 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@4d3ca6c7
[DEBUG] 2025-10-15 11:59:18.301 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@4d3ca6c7
[DEBUG] 2025-10-15 11:59:18.301 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@22e5f96e
[DEBUG] 2025-10-15 11:59:18.301 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@22e5f96e
[DEBUG] 2025-10-15 11:59:18.301 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@22e5f96e
[DEBUG] 2025-10-15 11:59:18.301 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@6a638c79
[DEBUG] 2025-10-15 11:59:18.301 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@6a638c79
[DEBUG] 2025-10-15 11:59:18.301 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@6a638c79
[DEBUG] 2025-10-15 11:59:18.301 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@6c931d35
[DEBUG] 2025-10-15 11:59:18.302 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@44b194fe
[DEBUG] 2025-10-15 11:59:18.302 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@49122b8f
[DEBUG] 2025-10-15 11:59:18.302 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@49122b8f
[DEBUG] 2025-10-15 11:59:18.302 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@3fe46690
[DEBUG] 2025-10-15 11:59:18.302 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@3fe46690
[DEBUG] 2025-10-15 11:59:18.302 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@3fe46690
[DEBUG] 2025-10-15 11:59:18.302 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4beabeec
[DEBUG] 2025-10-15 11:59:18.302 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@3b4d50b
[DEBUG] 2025-10-15 11:59:18.302 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@5b22d8a1
[DEBUG] 2025-10-15 11:59:18.302 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@5b22d8a1
[DEBUG] 2025-10-15 11:59:18.302 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@476ee5b3
[DEBUG] 2025-10-15 11:59:18.302 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@476ee5b3
[DEBUG] 2025-10-15 11:59:18.302 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@476ee5b3
[DEBUG] 2025-10-15 11:59:18.302 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@59ed3e6c
[DEBUG] 2025-10-15 11:59:18.303 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@59ed3e6c
[DEBUG] 2025-10-15 11:59:18.303 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@7cd4a4d7
[DEBUG] 2025-10-15 11:59:18.303 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@7cd4a4d7
[DEBUG] 2025-10-15 11:59:18.303 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@317e9c3c
[DEBUG] 2025-10-15 11:59:18.303 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@317e9c3c
[DEBUG] 2025-10-15 11:59:18.303 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@18da4dd
[DEBUG] 2025-10-15 11:59:18.303 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@18da4dd
[DEBUG] 2025-10-15 11:59:18.303 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@31a3f4de
[DEBUG] 2025-10-15 11:59:18.303 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@31a3f4de
[DEBUG] 2025-10-15 11:59:18.303 [main] BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@68880c21
[DEBUG] 2025-10-15 11:59:18.303 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@2dd2e270
[DEBUG] 2025-10-15 11:59:18.309 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@35267fd4
[DEBUG] 2025-10-15 11:59:18.309 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@35267fd4
[DEBUG] 2025-10-15 11:59:18.310 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@4e08acf9
[DEBUG] 2025-10-15 11:59:18.311 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@42ea287
[DEBUG] 2025-10-15 11:59:18.311 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@78cd163b
[DEBUG] 2025-10-15 11:59:18.311 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@1f0b3cfe
[DEBUG] 2025-10-15 11:59:18.311 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@14ef2482
[DEBUG] 2025-10-15 11:59:18.311 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@65a48602
[DEBUG] 2025-10-15 11:59:18.311 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@75483843
[DEBUG] 2025-10-15 11:59:18.311 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@336206d8
[DEBUG] 2025-10-15 11:59:18.311 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@5ec4ff02
[INFO ] 2025-10-15 11:59:18.349 [main] c3p0 - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3307/hungryBadger_test
[INFO ] 2025-10-15 11:59:18.349 [main] c3p0 - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2025-10-15 11:59:18.349 [main] c3p0 - HHH10001003: Autocommit mode: false
[INFO ] 2025-10-15 11:59:18.467 [main] c3p0 - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2025-10-15 11:59:18.565 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 9.4.0
      major : 9
      minor : 4
[DEBUG] 2025-10-15 11:59:18.565 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2025-10-15 11:59:18.566 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[DEBUG] 2025-10-15 11:59:18.634 [main] dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 9.4
[DEBUG] 2025-10-15 11:59:18.644 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2025-10-15 11:59:18.644 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2025-10-15 11:59:18.664 [main] DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@17410c07) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6ee99964)
[DEBUG] 2025-10-15 11:59:18.665 [main] DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@257ef9ed) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@59c70ceb)
[DEBUG] 2025-10-15 11:59:18.665 [main] DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@46f902e0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@64f981e2)
[DEBUG] 2025-10-15 11:59:18.665 [main] DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@361abd01) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@575b5f7d)
[DEBUG] 2025-10-15 11:59:18.665 [main] DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@59bbb974) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7165d530)
[DEBUG] 2025-10-15 11:59:18.665 [main] DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@12f49ca8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1fd9893c)
[DEBUG] 2025-10-15 11:59:18.665 [main] DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1b2df3aa) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@44be69aa)
[DEBUG] 2025-10-15 11:59:18.665 [main] DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7219ac49) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@21da4b5f)
[DEBUG] 2025-10-15 11:59:18.665 [main] DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@551e4c6d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@625a9c5d)
[DEBUG] 2025-10-15 11:59:18.667 [main] JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2025-10-15 11:59:18.667 [main] JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2025-10-15 11:59:18.668 [main] JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2025-10-15 11:59:18.671 [main] JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2025-10-15 11:59:18.671 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2025-10-15 11:59:18.675 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@57c00115
[DEBUG] 2025-10-15 11:59:18.675 [main] BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@4e08acf9`
[DEBUG] 2025-10-15 11:59:18.682 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
[DEBUG] 2025-10-15 11:59:18.682 [main] BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2025-10-15 11:59:18.682 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2025-10-15 11:59:18.686 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2025-10-15 11:59:18.687 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2025-10-15 11:59:18.687 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2025-10-15 11:59:18.687 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2025-10-15 11:59:18.687 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2025-10-15 11:59:18.687 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2025-10-15 11:59:18.688 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2025-10-15 11:59:18.688 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2025-10-15 11:59:18.688 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2025-10-15 11:59:18.689 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7377781e] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@31db34da]
[DEBUG] 2025-10-15 11:59:18.743 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2025-10-15 11:59:18.776 [main] EntityBinder - Binding entity from annotated class: org.hungrybadger.entity.Review
[DEBUG] 2025-10-15 11:59:18.787 [main] EntityBinder - Import with entity name Review
[DEBUG] 2025-10-15 11:59:18.794 [main] EntityBinder - Bind entity org.hungrybadger.entity.Review on table review
[DEBUG] 2025-10-15 11:59:18.805 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2025-10-15 11:59:18.829 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2025-10-15 11:59:18.830 [main] ClassLoaderAccessImpl - Not known whether passed class name [org.hungrybadger.entity.Review] is safe
[DEBUG] 2025-10-15 11:59:18.830 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.hungrybadger.entity.Review
[DEBUG] 2025-10-15 11:59:18.833 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2025-10-15 11:59:18.838 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.hungrybadger.entity.Review:id]
[DEBUG] 2025-10-15 11:59:18.843 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2025-10-15 11:59:18.846 [main] BasicValue - Skipping column re-registration: review.id
[DEBUG] 2025-10-15 11:59:18.847 [main] PropertyBinder - Building property id
[DEBUG] 2025-10-15 11:59:18.853 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2025-10-15 11:59:18.858 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='cuisine_type')
[DEBUG] 2025-10-15 11:59:18.858 [main] PropertyBinder - MetadataSourceProcessor property cuisineType with lazy=false
[DEBUG] 2025-10-15 11:59:18.858 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.hungrybadger.entity.Review:cuisineType]
[DEBUG] 2025-10-15 11:59:18.858 [main] BasicValueBinder - building BasicValue for cuisineType
[DEBUG] 2025-10-15 11:59:18.858 [main] BasicValue - Skipping column re-registration: review.cuisine_type
[DEBUG] 2025-10-15 11:59:18.858 [main] PropertyBinder - Building property cuisineType
[DEBUG] 2025-10-15 11:59:18.859 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='personal_notes')
[DEBUG] 2025-10-15 11:59:18.859 [main] PropertyBinder - MetadataSourceProcessor property personalNotes with lazy=false
[DEBUG] 2025-10-15 11:59:18.859 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.hungrybadger.entity.Review:personalNotes]
[DEBUG] 2025-10-15 11:59:18.859 [main] BasicValueBinder - building BasicValue for personalNotes
[DEBUG] 2025-10-15 11:59:18.859 [main] BasicValue - Skipping column re-registration: review.personal_notes
[DEBUG] 2025-10-15 11:59:18.859 [main] PropertyBinder - Building property personalNotes
[DEBUG] 2025-10-15 11:59:18.860 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='personal_rating')
[DEBUG] 2025-10-15 11:59:18.860 [main] PropertyBinder - MetadataSourceProcessor property personalRating with lazy=false
[DEBUG] 2025-10-15 11:59:18.860 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.hungrybadger.entity.Review:personalRating]
[DEBUG] 2025-10-15 11:59:18.860 [main] BasicValueBinder - building BasicValue for personalRating
[DEBUG] 2025-10-15 11:59:18.860 [main] BasicValue - Skipping column re-registration: review.personal_rating
[DEBUG] 2025-10-15 11:59:18.860 [main] PropertyBinder - Building property personalRating
[DEBUG] 2025-10-15 11:59:18.862 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2025-10-15 11:59:18.862 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2025-10-15 11:59:18.876 [main] AnnotatedColumn - Binding column: IndexColumn(column='photos_ORDER')
[DEBUG] 2025-10-15 11:59:18.878 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2025-10-15 11:59:18.879 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='photos_KEY')
[DEBUG] 2025-10-15 11:59:18.880 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='photos_KEY')
[DEBUG] 2025-10-15 11:59:18.881 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2025-10-15 11:59:18.882 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2025-10-15 11:59:18.884 [main] CollectionBinder - Collection role: org.hungrybadger.entity.Review.photos
[DEBUG] 2025-10-15 11:59:18.887 [main] PropertyBinder - Building property photos
[DEBUG] 2025-10-15 11:59:18.887 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='restaurant_name')
[DEBUG] 2025-10-15 11:59:18.887 [main] PropertyBinder - MetadataSourceProcessor property restaurantName with lazy=false
[DEBUG] 2025-10-15 11:59:18.887 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.hungrybadger.entity.Review:restaurantName]
[DEBUG] 2025-10-15 11:59:18.887 [main] BasicValueBinder - building BasicValue for restaurantName
[DEBUG] 2025-10-15 11:59:18.887 [main] BasicValue - Skipping column re-registration: review.restaurant_name
[DEBUG] 2025-10-15 11:59:18.887 [main] PropertyBinder - Building property restaurantName
[DEBUG] 2025-10-15 11:59:18.888 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: org.hungrybadger.entity
[DEBUG] 2025-10-15 11:59:18.894 [main] EntityBinder - Binding entity from annotated class: org.hungrybadger.entity.Photo
[DEBUG] 2025-10-15 11:59:18.895 [main] EntityBinder - Import with entity name Photo
[DEBUG] 2025-10-15 11:59:18.895 [main] EntityBinder - Bind entity org.hungrybadger.entity.Photo on table photo
[DEBUG] 2025-10-15 11:59:18.895 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2025-10-15 11:59:18.898 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2025-10-15 11:59:18.899 [main] ClassLoaderAccessImpl - Not known whether passed class name [org.hungrybadger.entity.Photo] is safe
[DEBUG] 2025-10-15 11:59:18.899 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.hungrybadger.entity.Photo
[DEBUG] 2025-10-15 11:59:18.899 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2025-10-15 11:59:18.899 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.hungrybadger.entity.Photo:id]
[DEBUG] 2025-10-15 11:59:18.899 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2025-10-15 11:59:18.899 [main] BasicValue - Skipping column re-registration: photo.id
[DEBUG] 2025-10-15 11:59:18.899 [main] PropertyBinder - Building property id
[DEBUG] 2025-10-15 11:59:18.899 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2025-10-15 11:59:18.900 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='image_path')
[DEBUG] 2025-10-15 11:59:18.900 [main] PropertyBinder - MetadataSourceProcessor property imagePath with lazy=false
[DEBUG] 2025-10-15 11:59:18.900 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.hungrybadger.entity.Photo:imagePath]
[DEBUG] 2025-10-15 11:59:18.900 [main] BasicValueBinder - building BasicValue for imagePath
[DEBUG] 2025-10-15 11:59:18.900 [main] BasicValue - Skipping column re-registration: photo.image_path
[DEBUG] 2025-10-15 11:59:18.900 [main] PropertyBinder - Building property imagePath
[DEBUG] 2025-10-15 11:59:18.900 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='review_id')
[DEBUG] 2025-10-15 11:59:18.901 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2025-10-15 11:59:18.904 [main] PropertyBinder - Building property review
[DEBUG] 2025-10-15 11:59:18.905 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: org.hungrybadger.entity
[DEBUG] 2025-10-15 11:59:18.906 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2025-10-15 11:59:18.907 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for cuisineType
[DEBUG] 2025-10-15 11:59:18.908 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for personalNotes
[DEBUG] 2025-10-15 11:59:18.908 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for personalRating
[DEBUG] 2025-10-15 11:59:18.908 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for restaurantName
[DEBUG] 2025-10-15 11:59:18.909 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2025-10-15 11:59:18.909 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for imagePath
[DEBUG] 2025-10-15 11:59:18.915 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [review]
[DEBUG] 2025-10-15 11:59:18.915 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [photo]
[DEBUG] 2025-10-15 11:59:18.915 [main] CollectionSecondPass - Second pass for collection: org.hungrybadger.entity.Review.photos
[DEBUG] 2025-10-15 11:59:18.917 [main] CollectionBinder - Binding a OneToMany: org.hungrybadger.entity.Review.photos through a foreign key
[DEBUG] 2025-10-15 11:59:18.919 [main] CollectionBinder - Mapping collection: org.hungrybadger.entity.Review.photos -> photo
[DEBUG] 2025-10-15 11:59:18.920 [main] TableBinder - Retrieving property org.hungrybadger.entity.Photo.review
[DEBUG] 2025-10-15 11:59:18.921 [main] CollectionSecondPass - Mapped collection key: review_id, one-to-many: org.hungrybadger.entity.Photo
[DEBUG] 2025-10-15 11:59:18.921 [main] InFlightMetadataCollectorImpl - Resolving reference to class: org.hungrybadger.entity.Review
[DEBUG] 2025-10-15 11:59:18.935 [main] InFlightMetadataCollectorImpl - Resolving reference to class: org.hungrybadger.entity.Review
[DEBUG] 2025-10-15 11:59:19.148 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2025-10-15 11:59:19.204 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2025-10-15 11:59:19.205 [main] SessionFactoryImpl - Instantiating SessionFactory with settings: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=11, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, java.class.path=C:\Program Files\JetBrains\IntelliJ IDEA 2025.2.1\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2025.2.1\plugins\junit\lib\junit5-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2025.2.1\plugins\junit\lib\junit-rt.jar;C:\Users\mamcc\IdeaProjects\PersonalFoodReviewer\target\test-classes;C:\Users\mamcc\IdeaProjects\PersonalFoodReviewer\target\classes;C:\Users\mamcc\.m2\repository\org\hibernate\orm\hibernate-core\6.4.3.Final\hibernate-core-6.4.3.Final.jar;C:\Users\mamcc\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\mamcc\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\mamcc\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\mamcc\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\mamcc\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\mamcc\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\mamcc\.m2\repository\net\bytebuddy\byte-buddy\1.14.7\byte-buddy-1.14.7.jar;C:\Users\mamcc\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\mamcc\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\mamcc\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\mamcc\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\mamcc\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\mamcc\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\mamcc\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\mamcc\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\mamcc\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\mamcc\.m2\repository\org\hibernate\orm\hibernate-c3p0\6.4.3.Final\hibernate-c3p0-6.4.3.Final.jar;C:\Users\mamcc\.m2\repository\com\mchange\c3p0\0.9.5.5\c3p0-0.9.5.5.jar;C:\Users\mamcc\.m2\repository\com\mchange\mchange-commons-java\0.2.19\mchange-commons-java-0.2.19.jar;C:\Users\mamcc\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\mamcc\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\mamcc\.m2\repository\javax\javaee-web-api\7.0\javaee-web-api-7.0.jar;C:\Users\mamcc\.m2\repository\mysql\mysql-connector-java\8.0.16\mysql-connector-java-8.0.16.jar;C:\Users\mamcc\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\mamcc\.m2\repository\org\apache\logging\log4j\log4j-api\2.17.1\log4j-api-2.17.1.jar;C:\Users\mamcc\.m2\repository\org\apache\logging\log4j\log4j-core\2.17.1\log4j-core-2.17.1.jar;C:\Users\mamcc\.m2\repository\jstl\jstl\1.2\jstl-1.2.jar;C:\Users\mamcc\.m2\repository\org\junit\platform\junit-platform-runner\1.0.0\junit-platform-runner-1.0.0.jar;C:\Users\mamcc\.m2\repository\org\apiguardian\apiguardian-api\1.0.0\apiguardian-api-1.0.0.jar;C:\Users\mamcc\.m2\repository\org\junit\platform\junit-platform-launcher\1.0.0\junit-platform-launcher-1.0.0.jar;C:\Users\mamcc\.m2\repository\org\junit\platform\junit-platform-suite-api\1.0.0\junit-platform-suite-api-1.0.0.jar;C:\Users\mamcc\.m2\repository\org\junit\platform\junit-platform-commons\1.0.0\junit-platform-commons-1.0.0.jar;C:\Users\mamcc\.m2\repository\org\junit\vintage\junit-vintage-engine\4.12.0\junit-vintage-engine-4.12.0.jar;C:\Users\mamcc\.m2\repository\org\junit\platform\junit-platform-engine\1.0.0\junit-platform-engine-1.0.0.jar;C:\Users\mamcc\.m2\repository\org\opentest4j\opentest4j\1.0.0\opentest4j-1.0.0.jar;C:\Users\mamcc\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.0.0\junit-jupiter-engine-5.0.0.jar;C:\Users\mamcc\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.0.0\junit-jupiter-api-5.0.0.jar, kotlinx.coroutines.debug.enable.mutable.state.flows.stack.trace=true, java.vm.vendor=Eclipse Adoptium, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=https://adoptium.net/, user.timezone=America/Chicago, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Eclipse Adoptium\jdk-11.0.28.6-hotspot\bin, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 org.hungrybadger.persistence.PhotoDaoTest, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\mamcc, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2025-07-15, java.home=C:\Program Files\Eclipse Adoptium\jdk-11.0.28.6-hotspot, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, intellij.debug.agent=true, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, user.script=, connection.password=Marthacodes, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=11.0.28+6, user.name=Test, path.separator=;, kotlinx.coroutines.debug.enable.creation.stack.trace=false, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3307/hungryBadger_test, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, java.vendor.version=Temurin-11.0.28+6, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=C:\Users\mamcc\AppData\Local\Temp\, java.version=11.0.28, jboss.modules.system.pkgs=com.intellij.rt, user.dir=C:\Users\mamcc\IdeaProjects\PersonalFoodReviewer, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@75882261, kotlinx.coroutines.debug.enable.flows.stack.trace=true, java.library.path=C:\Program Files\Eclipse Adoptium\jdk-11.0.28.6-hotspot\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Microsoft\jdk-21.0.2.13-hotspot\bin;C:\Program Files\Eclipse Adoptium\jdk-11.0.28.6-hotspot\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\dotnet\;C:\Program Files\Amazon\AWSCLIV2\;C:\Program Files\nodejs\;C:\Program Files\MySQL\MySQL Server 9.0\bin;C:\Program Files\NVIDIA Corporation\NVIDIA app\NvDLISR;C:\Program Files\Git\cmd;C:\Users\mamcc\AppData\Local\Microsoft\WindowsApps;;C:\Users\mamcc\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\mamcc\AppData\Roaming\npm;., java.vendor=Eclipse Adoptium, java.vm.info=mixed mode, java.vm.version=11.0.28+6, java.specification.maintenance.version=3, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3307/hungryBadger_test, debugger.agent.enable.coroutines=true, java.class.version=55.0}
[DEBUG] 2025-10-15 11:59:19.210 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2025-10-15 11:59:19.219 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2025-10-15 11:59:19.271 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2025-10-15 11:59:19.272 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2025-10-15 11:59:19.272 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2025-10-15 11:59:19.273 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2025-10-15 11:59:19.274 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@29c53c4f] under count; prior registration was null
[DEBUG] 2025-10-15 11:59:19.275 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@4f2ac7e0] under every; prior registration was null
[DEBUG] 2025-10-15 11:59:19.276 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@2484dbb7] under any; prior registration was null
[DEBUG] 2025-10-15 11:59:19.276 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2025-10-15 11:59:19.276 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2025-10-15 11:59:19.276 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2025-10-15 11:59:19.276 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2025-10-15 11:59:19.276 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2025-10-15 11:59:19.276 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2025-10-15 11:59:19.276 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2025-10-15 11:59:19.276 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2025-10-15 11:59:19.277 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2025-10-15 11:59:19.277 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2025-10-15 11:59:19.277 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2025-10-15 11:59:19.277 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2025-10-15 11:59:19.277 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2025-10-15 11:59:19.277 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2025-10-15 11:59:19.277 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2025-10-15 11:59:19.277 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2025-10-15 11:59:19.277 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2025-10-15 11:59:19.279 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2e952845] under sinh; prior registration was null
[DEBUG] 2025-10-15 11:59:19.280 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@79252c83] under cosh; prior registration was null
[DEBUG] 2025-10-15 11:59:19.280 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6fbf5db2] under tanh; prior registration was null
[DEBUG] 2025-10-15 11:59:19.280 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@509a6095] under pi; prior registration was null
[DEBUG] 2025-10-15 11:59:19.280 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@57cabdc3] under log; prior registration was null
[DEBUG] 2025-10-15 11:59:19.280 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2025-10-15 11:59:19.280 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2025-10-15 11:59:19.280 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2025-10-15 11:59:19.280 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2025-10-15 11:59:19.281 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2025-10-15 11:59:19.281 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2025-10-15 11:59:19.281 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2025-10-15 11:59:19.281 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2025-10-15 11:59:19.281 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2025-10-15 11:59:19.281 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2025-10-15 11:59:19.281 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2025-10-15 11:59:19.281 [main] SqmFunctionRegistry - Registering alternate key : length -> character_length
[DEBUG] 2025-10-15 11:59:19.282 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@5faeeb56] under position; prior registration was null
[DEBUG] 2025-10-15 11:59:19.284 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@37d3e140] under overlay; prior registration was null
[DEBUG] 2025-10-15 11:59:19.285 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@a3cba3a] under trim; prior registration was null
[DEBUG] 2025-10-15 11:59:19.285 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@6169be09] under cast; prior registration was null
[DEBUG] 2025-10-15 11:59:19.285 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5e3db14] under collate; prior registration was null
[DEBUG] 2025-10-15 11:59:19.286 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@5c448ef] under extract; prior registration was null
[DEBUG] 2025-10-15 11:59:19.286 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2025-10-15 11:59:19.286 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2025-10-15 11:59:19.287 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@50e5032c] under ifnull; prior registration was null
[DEBUG] 2025-10-15 11:59:19.287 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2025-10-15 11:59:19.287 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2025-10-15 11:59:19.287 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@10817f46] under pad; prior registration was null
[DEBUG] 2025-10-15 11:59:19.288 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@16681017] under str; prior registration was null
[DEBUG] 2025-10-15 11:59:19.289 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@3a40bb52] under format; prior registration was null
[DEBUG] 2025-10-15 11:59:19.290 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@284990de] under timestampadd; prior registration was null
[DEBUG] 2025-10-15 11:59:19.291 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@377dfb8d] under timestampdiff; prior registration was null
[DEBUG] 2025-10-15 11:59:19.291 [main] SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
[DEBUG] 2025-10-15 11:59:19.291 [main] SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
[DEBUG] 2025-10-15 11:59:19.291 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@78c74647] under current_date; prior registration was null
[DEBUG] 2025-10-15 11:59:19.291 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@39652a30] under current_time; prior registration was null
[DEBUG] 2025-10-15 11:59:19.291 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5763a655] under current_timestamp; prior registration was null
[DEBUG] 2025-10-15 11:59:19.291 [main] SqmFunctionRegistry - Registering alternate key : current date -> current_date
[DEBUG] 2025-10-15 11:59:19.291 [main] SqmFunctionRegistry - Registering alternate key : current time -> current_time
[DEBUG] 2025-10-15 11:59:19.292 [main] SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2025-10-15 11:59:19.292 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@40c8067] under local_date; prior registration was null
[DEBUG] 2025-10-15 11:59:19.292 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@46bb0bdf] under local_time; prior registration was null
[DEBUG] 2025-10-15 11:59:19.292 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@561f9d92] under local_datetime; prior registration was null
[DEBUG] 2025-10-15 11:59:19.292 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1c84d80a] under offset_datetime; prior registration was null
[DEBUG] 2025-10-15 11:59:19.292 [main] SqmFunctionRegistry - Registering alternate key : local date -> local_date
[DEBUG] 2025-10-15 11:59:19.292 [main] SqmFunctionRegistry - Registering alternate key : local time -> local_time
[DEBUG] 2025-10-15 11:59:19.292 [main] SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
[DEBUG] 2025-10-15 11:59:19.292 [main] SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2025-10-15 11:59:19.292 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7ceb6c45] under instant; prior registration was null
[DEBUG] 2025-10-15 11:59:19.292 [main] SqmFunctionRegistry - Registering alternate key : current_instant -> instant
[DEBUG] 2025-10-15 11:59:19.293 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@559991f5] under sql; prior registration was null
[DEBUG] 2025-10-15 11:59:19.293 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2025-10-15 11:59:19.293 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2025-10-15 11:59:19.293 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2025-10-15 11:59:19.293 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2025-10-15 11:59:19.293 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@57cabdc3
[DEBUG] 2025-10-15 11:59:19.293 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
[DEBUG] 2025-10-15 11:59:19.293 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2025-10-15 11:59:19.293 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2025-10-15 11:59:19.293 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2025-10-15 11:59:19.293 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2025-10-15 11:59:19.293 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
[DEBUG] 2025-10-15 11:59:19.293 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2025-10-15 11:59:19.293 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2025-10-15 11:59:19.294 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@61d60e38] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
[DEBUG] 2025-10-15 11:59:19.294 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@6e95973c] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
[DEBUG] 2025-10-15 11:59:19.294 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
[DEBUG] 2025-10-15 11:59:19.294 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2025-10-15 11:59:19.294 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2025-10-15 11:59:19.294 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2025-10-15 11:59:19.294 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2025-10-15 11:59:19.295 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2025-10-15 11:59:19.295 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2025-10-15 11:59:19.295 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2025-10-15 11:59:19.295 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
[DEBUG] 2025-10-15 11:59:19.295 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
[DEBUG] 2025-10-15 11:59:19.295 [main] SqmFunctionRegistry - Registering alternate key : day -> dayofmonth
[DEBUG] 2025-10-15 11:59:19.295 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
[DEBUG] 2025-10-15 11:59:19.295 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2025-10-15 11:59:19.295 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2025-10-15 11:59:19.295 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2025-10-15 11:59:19.295 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2025-10-15 11:59:19.295 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
[DEBUG] 2025-10-15 11:59:19.295 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
[DEBUG] 2025-10-15 11:59:19.295 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
[DEBUG] 2025-10-15 11:59:19.296 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
[DEBUG] 2025-10-15 11:59:19.296 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
[DEBUG] 2025-10-15 11:59:19.296 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
[DEBUG] 2025-10-15 11:59:19.296 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
[DEBUG] 2025-10-15 11:59:19.296 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2025-10-15 11:59:19.296 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
[DEBUG] 2025-10-15 11:59:19.296 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
[DEBUG] 2025-10-15 11:59:19.296 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
[DEBUG] 2025-10-15 11:59:19.296 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
[DEBUG] 2025-10-15 11:59:19.296 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2025-10-15 11:59:19.296 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2025-10-15 11:59:19.296 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2025-10-15 11:59:19.296 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2025-10-15 11:59:19.297 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2025-10-15 11:59:19.297 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@404ced67] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@5faeeb56
[DEBUG] 2025-10-15 11:59:19.297 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2025-10-15 11:59:19.297 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2025-10-15 11:59:19.297 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2025-10-15 11:59:19.301 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@527937d0] under trunc; prior registration was null
[DEBUG] 2025-10-15 11:59:19.302 [main] SqmFunctionRegistry - Registering alternate key : truncate -> trunc
[DEBUG] 2025-10-15 11:59:19.302 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2025-10-15 11:59:19.302 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@36d582cb] under bitand; prior registration was null
[DEBUG] 2025-10-15 11:59:19.302 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6c2a95d5] under bitor; prior registration was null
[DEBUG] 2025-10-15 11:59:19.302 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@24d8f87a] under bitxor; prior registration was null
[DEBUG] 2025-10-15 11:59:19.302 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3f048c86] under bitnot; prior registration was null
[DEBUG] 2025-10-15 11:59:19.302 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2025-10-15 11:59:19.302 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2025-10-15 11:59:19.302 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
[DEBUG] 2025-10-15 11:59:19.302 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2025-10-15 11:59:19.302 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2025-10-15 11:59:19.302 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
[DEBUG] 2025-10-15 11:59:19.302 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2025-10-15 11:59:19.302 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2025-10-15 11:59:19.302 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
[DEBUG] 2025-10-15 11:59:19.303 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
[DEBUG] 2025-10-15 11:59:19.303 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
[DEBUG] 2025-10-15 11:59:19.303 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
[DEBUG] 2025-10-15 11:59:19.303 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
[DEBUG] 2025-10-15 11:59:19.303 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@255d9277] under format; prior registration was org.hibernate.dialect.function.FormatFunction@3a40bb52
[DEBUG] 2025-10-15 11:59:19.303 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
[DEBUG] 2025-10-15 11:59:19.303 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
[DEBUG] 2025-10-15 11:59:19.303 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2025-10-15 11:59:19.303 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2025-10-15 11:59:19.303 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@46bb0bdf
[DEBUG] 2025-10-15 11:59:19.303 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@561f9d92
[DEBUG] 2025-10-15 11:59:19.303 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
[DEBUG] 2025-10-15 11:59:19.303 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1de13f34] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@509a6095
[DEBUG] 2025-10-15 11:59:19.303 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7e191fda] under chr; prior registration was null
[DEBUG] 2025-10-15 11:59:19.303 [main] SqmFunctionRegistry - Registering alternate key : char -> chr
[DEBUG] 2025-10-15 11:59:19.303 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6562cc23] under sysdate; prior registration was null
[DEBUG] 2025-10-15 11:59:19.303 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2025-10-15 11:59:19.304 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2025-10-15 11:59:19.304 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2025-10-15 11:59:19.304 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2025-10-15 11:59:19.304 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2025-10-15 11:59:19.304 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2025-10-15 11:59:19.306 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@53ea380b] under rank; prior registration was null
[DEBUG] 2025-10-15 11:59:19.306 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@578c3fd9] under dense_rank; prior registration was null
[DEBUG] 2025-10-15 11:59:19.306 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@245cb8df] under percent_rank; prior registration was null
[DEBUG] 2025-10-15 11:59:19.306 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@26b3c9a2] under cume_dist; prior registration was null
[DEBUG] 2025-10-15 11:59:19.307 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@6b42e36d] under listagg; prior registration was null
[DEBUG] 2025-10-15 11:59:19.311 [main] HQL_FUNCTIONS - abs(NUMERIC arg)
[DEBUG] 2025-10-15 11:59:19.311 [main] HQL_FUNCTIONS - Double acos(NUMERIC arg)
[DEBUG] 2025-10-15 11:59:19.311 [main] HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days)
[DEBUG] 2025-10-15 11:59:19.311 [main] HQL_FUNCTIONS - addtime(TIME datetime, TIME time)
[DEBUG] 2025-10-15 11:59:19.311 [main] HQL_FUNCTIONS - Boolean any(BOOLEAN arg)
[DEBUG] 2025-10-15 11:59:19.311 [main] HQL_FUNCTIONS - Integer ascii(STRING arg)
[DEBUG] 2025-10-15 11:59:19.311 [main] HQL_FUNCTIONS - Double asin(NUMERIC arg)
[DEBUG] 2025-10-15 11:59:19.311 [main] HQL_FUNCTIONS - Double atan(NUMERIC arg)
[DEBUG] 2025-10-15 11:59:19.312 [main] HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2025-10-15 11:59:19.312 [main] HQL_FUNCTIONS - avg(arg)
[DEBUG] 2025-10-15 11:59:19.312 [main] HQL_FUNCTIONS - bit_and(arg)
[DEBUG] 2025-10-15 11:59:19.312 [main] HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2025-10-15 11:59:19.312 [main] HQL_FUNCTIONS - bit_or(arg)
[DEBUG] 2025-10-15 11:59:19.312 [main] HQL_FUNCTIONS - bitand(arg0, arg1)
[DEBUG] 2025-10-15 11:59:19.312 [main] HQL_FUNCTIONS - bitnot(arg)
[DEBUG] 2025-10-15 11:59:19.312 [main] HQL_FUNCTIONS - bitor(arg0, arg1)
[DEBUG] 2025-10-15 11:59:19.312 [main] HQL_FUNCTIONS - bitxor(arg0, arg1)
[DEBUG] 2025-10-15 11:59:19.312 [main] HQL_FUNCTIONS - cast(arg as Type)
[DEBUG] 2025-10-15 11:59:19.312 [main] HQL_FUNCTIONS - ceiling(NUMERIC arg)
[DEBUG] 2025-10-15 11:59:19.312 [main] HQL_FUNCTIONS - Character char(INTEGER arg)
[DEBUG] 2025-10-15 11:59:19.312 [main] HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2025-10-15 11:59:19.312 [main] HQL_FUNCTIONS - Character chr(INTEGER arg)
[DEBUG] 2025-10-15 11:59:19.312 [main] HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
[DEBUG] 2025-10-15 11:59:19.312 [main] HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
[DEBUG] 2025-10-15 11:59:19.312 [main] HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2025-10-15 11:59:19.312 [main] HQL_FUNCTIONS - Double cos(NUMERIC arg)
[DEBUG] 2025-10-15 11:59:19.312 [main] HQL_FUNCTIONS - Double cosh(NUMERIC arg)
[DEBUG] 2025-10-15 11:59:19.312 [main] HQL_FUNCTIONS - Double cot(NUMERIC arg)
[DEBUG] 2025-10-15 11:59:19.312 [main] HQL_FUNCTIONS - Long count([distinct ]{arg|*})
[DEBUG] 2025-10-15 11:59:19.312 [main] HQL_FUNCTIONS - Integer crc32(arg)
[DEBUG] 2025-10-15 11:59:19.312 [main] HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
[DEBUG] 2025-10-15 11:59:19.312 [main] HQL_FUNCTIONS - Date curdate()
[DEBUG] 2025-10-15 11:59:19.312 [main] HQL_FUNCTIONS - Date current date
[DEBUG] 2025-10-15 11:59:19.312 [main] HQL_FUNCTIONS - Time current time
[DEBUG] 2025-10-15 11:59:19.313 [main] HQL_FUNCTIONS - Timestamp current timestamp
[DEBUG] 2025-10-15 11:59:19.313 [main] HQL_FUNCTIONS - Date current_date
[DEBUG] 2025-10-15 11:59:19.313 [main] HQL_FUNCTIONS - Instant current_instant
[DEBUG] 2025-10-15 11:59:19.313 [main] HQL_FUNCTIONS - Time current_time
[DEBUG] 2025-10-15 11:59:19.313 [main] HQL_FUNCTIONS - Timestamp current_timestamp
[DEBUG] 2025-10-15 11:59:19.313 [main] HQL_FUNCTIONS - Time curtime()
[DEBUG] 2025-10-15 11:59:19.313 [main] HQL_FUNCTIONS - Date date(arg)
[DEBUG] 2025-10-15 11:59:19.313 [main] HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2025-10-15 11:59:19.313 [main] HQL_FUNCTIONS - Integer datediff(DATE end, DATE start)
[DEBUG] 2025-10-15 11:59:19.313 [main] HQL_FUNCTIONS - Integer day(DATE arg)
[DEBUG] 2025-10-15 11:59:19.313 [main] HQL_FUNCTIONS - String dayname(DATE arg)
[DEBUG] 2025-10-15 11:59:19.313 [main] HQL_FUNCTIONS - Integer dayofmonth(DATE arg)
[DEBUG] 2025-10-15 11:59:19.313 [main] HQL_FUNCTIONS - Integer dayofweek(DATE arg)
[DEBUG] 2025-10-15 11:59:19.313 [main] HQL_FUNCTIONS - Integer dayofyear(DATE arg)
[DEBUG] 2025-10-15 11:59:19.313 [main] HQL_FUNCTIONS - Double degrees(NUMERIC arg)
[DEBUG] 2025-10-15 11:59:19.313 [main] HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
[DEBUG] 2025-10-15 11:59:19.313 [main] HQL_FUNCTIONS - Boolean every(BOOLEAN arg)
[DEBUG] 2025-10-15 11:59:19.313 [main] HQL_FUNCTIONS - Double exp(NUMERIC arg)
[DEBUG] 2025-10-15 11:59:19.313 [main] HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2025-10-15 11:59:19.313 [main] HQL_FUNCTIONS - first_valueANY value
[DEBUG] 2025-10-15 11:59:19.313 [main] HQL_FUNCTIONS - floor(NUMERIC arg)
[DEBUG] 2025-10-15 11:59:19.314 [main] HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2025-10-15 11:59:19.314 [main] HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2025-10-15 11:59:19.314 [main] HQL_FUNCTIONS - Integer hour(TIME arg)
[DEBUG] 2025-10-15 11:59:19.314 [main] HQL_FUNCTIONS - ifnull(arg0, arg1)
[DEBUG] 2025-10-15 11:59:19.314 [main] HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2025-10-15 11:59:19.314 [main] HQL_FUNCTIONS - Instant instant
[DEBUG] 2025-10-15 11:59:19.314 [main] HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2025-10-15 11:59:19.314 [main] HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2025-10-15 11:59:19.314 [main] HQL_FUNCTIONS - Date last_day(DATE arg)
[DEBUG] 2025-10-15 11:59:19.314 [main] HQL_FUNCTIONS - last_valueANY value
[DEBUG] 2025-10-15 11:59:19.314 [main] HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2025-10-15 11:59:19.314 [main] HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2025-10-15 11:59:19.314 [main] HQL_FUNCTIONS - String left(STRING string, INTEGER length)
[DEBUG] 2025-10-15 11:59:19.314 [main] HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
[DEBUG] 2025-10-15 11:59:19.314 [main] HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
[DEBUG] 2025-10-15 11:59:19.314 [main] HQL_FUNCTIONS - Double ln(NUMERIC arg)
[DEBUG] 2025-10-15 11:59:19.314 [main] HQL_FUNCTIONS - LocalDate local date
[DEBUG] 2025-10-15 11:59:19.314 [main] HQL_FUNCTIONS - LocalDateTime local datetime
[DEBUG] 2025-10-15 11:59:19.314 [main] HQL_FUNCTIONS - LocalTime local time
[DEBUG] 2025-10-15 11:59:19.314 [main] HQL_FUNCTIONS - LocalDate local_date
[DEBUG] 2025-10-15 11:59:19.314 [main] HQL_FUNCTIONS - LocalDateTime local_datetime
[DEBUG] 2025-10-15 11:59:19.314 [main] HQL_FUNCTIONS - LocalTime local_time
[DEBUG] 2025-10-15 11:59:19.314 [main] HQL_FUNCTIONS - Timestamp localtime
[DEBUG] 2025-10-15 11:59:19.314 [main] HQL_FUNCTIONS - Timestamp localtimestamp
[DEBUG] 2025-10-15 11:59:19.314 [main] HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2025-10-15 11:59:19.315 [main] HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
[DEBUG] 2025-10-15 11:59:19.315 [main] HQL_FUNCTIONS - Double log10(NUMERIC arg)
[DEBUG] 2025-10-15 11:59:19.315 [main] HQL_FUNCTIONS - Double log2(NUMERIC arg)
[DEBUG] 2025-10-15 11:59:19.315 [main] HQL_FUNCTIONS - String lower(STRING string)
[DEBUG] 2025-10-15 11:59:19.315 [main] HQL_FUNCTIONS - String lpad(string, length[, padding])
[DEBUG] 2025-10-15 11:59:19.315 [main] HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
[DEBUG] 2025-10-15 11:59:19.315 [main] HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear)
[DEBUG] 2025-10-15 11:59:19.315 [main] HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
[DEBUG] 2025-10-15 11:59:19.315 [main] HQL_FUNCTIONS - max(COMPARABLE arg)
[DEBUG] 2025-10-15 11:59:19.315 [main] HQL_FUNCTIONS - String md5(arg)
[DEBUG] 2025-10-15 11:59:19.315 [main] HQL_FUNCTIONS - Integer microsecond(TIME arg)
[DEBUG] 2025-10-15 11:59:19.315 [main] HQL_FUNCTIONS - min(COMPARABLE arg)
[DEBUG] 2025-10-15 11:59:19.315 [main] HQL_FUNCTIONS - Integer minute(TIME arg)
[DEBUG] 2025-10-15 11:59:19.315 [main] HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2025-10-15 11:59:19.315 [main] HQL_FUNCTIONS - Integer month(DATE arg)
[DEBUG] 2025-10-15 11:59:19.315 [main] HQL_FUNCTIONS - String monthname(DATE arg)
[DEBUG] 2025-10-15 11:59:19.315 [main] HQL_FUNCTIONS - Timestamp now()
[DEBUG] 2025-10-15 11:59:19.315 [main] HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
[DEBUG] 2025-10-15 11:59:19.315 [main] HQL_FUNCTIONS - nullif(arg0, arg1)
[DEBUG] 2025-10-15 11:59:19.315 [main] HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2025-10-15 11:59:19.315 [main] HQL_FUNCTIONS - OffsetDateTime offset datetime
[DEBUG] 2025-10-15 11:59:19.315 [main] HQL_FUNCTIONS - OffsetDateTime offset_datetime
[DEBUG] 2025-10-15 11:59:19.315 [main] HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2025-10-15 11:59:19.315 [main] HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2025-10-15 11:59:19.315 [main] HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
[DEBUG] 2025-10-15 11:59:19.315 [main] HQL_FUNCTIONS - Double pi
[DEBUG] 2025-10-15 11:59:19.315 [main] HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
[DEBUG] 2025-10-15 11:59:19.316 [main] HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2025-10-15 11:59:19.316 [main] HQL_FUNCTIONS - Integer quarter(DATE arg)
[DEBUG] 2025-10-15 11:59:19.316 [main] HQL_FUNCTIONS - Double radians(NUMERIC arg)
[DEBUG] 2025-10-15 11:59:19.316 [main] HQL_FUNCTIONS - Double rand([INTEGER seed])
[DEBUG] 2025-10-15 11:59:19.316 [main] HQL_FUNCTIONS - Long rank([arg0[, ...]])
[DEBUG] 2025-10-15 11:59:19.316 [main] HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
[DEBUG] 2025-10-15 11:59:19.316 [main] HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2025-10-15 11:59:19.316 [main] HQL_FUNCTIONS - String reverse(STRING arg)
[DEBUG] 2025-10-15 11:59:19.316 [main] HQL_FUNCTIONS - String right(STRING string, INTEGER length)
[DEBUG] 2025-10-15 11:59:19.316 [main] HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
[DEBUG] 2025-10-15 11:59:19.316 [main] HQL_FUNCTIONS - Long row_number()
[DEBUG] 2025-10-15 11:59:19.316 [main] HQL_FUNCTIONS - String rpad(string, length[, padding])
[DEBUG] 2025-10-15 11:59:19.316 [main] HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
[DEBUG] 2025-10-15 11:59:19.316 [main] HQL_FUNCTIONS - Integer second(TIME arg)
[DEBUG] 2025-10-15 11:59:19.316 [main] HQL_FUNCTIONS - String sha(arg)
[DEBUG] 2025-10-15 11:59:19.316 [main] HQL_FUNCTIONS - String sha1(arg)
[DEBUG] 2025-10-15 11:59:19.316 [main] HQL_FUNCTIONS - String sha2(arg0, arg1)
[DEBUG] 2025-10-15 11:59:19.316 [main] HQL_FUNCTIONS - Integer sign(NUMERIC arg)
[DEBUG] 2025-10-15 11:59:19.316 [main] HQL_FUNCTIONS - Double sin(NUMERIC arg)
[DEBUG] 2025-10-15 11:59:19.316 [main] HQL_FUNCTIONS - Double sinh(NUMERIC arg)
[DEBUG] 2025-10-15 11:59:19.316 [main] HQL_FUNCTIONS - String soundex(arg)
[DEBUG] 2025-10-15 11:59:19.316 [main] HQL_FUNCTIONS - String space(INTEGER arg)
[DEBUG] 2025-10-15 11:59:19.316 [main] HQL_FUNCTIONS - Object sql
[DEBUG] 2025-10-15 11:59:19.316 [main] HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
[DEBUG] 2025-10-15 11:59:19.316 [main] HQL_FUNCTIONS - Double stddev(NUMERIC arg)
[DEBUG] 2025-10-15 11:59:19.316 [main] HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
[DEBUG] 2025-10-15 11:59:19.316 [main] HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
[DEBUG] 2025-10-15 11:59:19.316 [main] HQL_FUNCTIONS - String str(arg)
[DEBUG] 2025-10-15 11:59:19.316 [main] HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days)
[DEBUG] 2025-10-15 11:59:19.317 [main] HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2025-10-15 11:59:19.317 [main] HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2025-10-15 11:59:19.317 [main] HQL_FUNCTIONS - subtime(TIME datetime, TIME time)
[DEBUG] 2025-10-15 11:59:19.317 [main] HQL_FUNCTIONS - sum(arg)
[DEBUG] 2025-10-15 11:59:19.317 [main] HQL_FUNCTIONS - Timestamp sysdate()
[DEBUG] 2025-10-15 11:59:19.317 [main] HQL_FUNCTIONS - Double tan(NUMERIC arg)
[DEBUG] 2025-10-15 11:59:19.317 [main] HQL_FUNCTIONS - Double tanh(NUMERIC arg)
[DEBUG] 2025-10-15 11:59:19.317 [main] HQL_FUNCTIONS - String time(arg)
[DEBUG] 2025-10-15 11:59:19.317 [main] HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1])
[DEBUG] 2025-10-15 11:59:19.317 [main] HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2025-10-15 11:59:19.317 [main] HQL_FUNCTIONS - basicType@14(java.lang.Long,-5)|basicType@17(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2025-10-15 11:59:19.317 [main] HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2025-10-15 11:59:19.317 [main] HQL_FUNCTIONS - trunc( ... )
[DEBUG] 2025-10-15 11:59:19.317 [main] HQL_FUNCTIONS - truncate( ... )
[DEBUG] 2025-10-15 11:59:19.317 [main] HQL_FUNCTIONS - String upper(STRING string)
[DEBUG] 2025-10-15 11:59:19.317 [main] HQL_FUNCTIONS - Date utc_date
[DEBUG] 2025-10-15 11:59:19.317 [main] HQL_FUNCTIONS - Time utc_time
[DEBUG] 2025-10-15 11:59:19.317 [main] HQL_FUNCTIONS - Timestamp utc_timestamp
[DEBUG] 2025-10-15 11:59:19.317 [main] HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
[DEBUG] 2025-10-15 11:59:19.317 [main] HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
[DEBUG] 2025-10-15 11:59:19.318 [main] HQL_FUNCTIONS - Double variance(NUMERIC arg)
[DEBUG] 2025-10-15 11:59:19.318 [main] HQL_FUNCTIONS - Integer week(DATE arg)
[DEBUG] 2025-10-15 11:59:19.318 [main] HQL_FUNCTIONS - Integer year(DATE arg)
[DEBUG] 2025-10-15 11:59:19.323 [main] cache - Starting QueryInterpretationCache(2048)
[DEBUG] 2025-10-15 11:59:19.438 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2025-10-15 11:59:19.440 [main] EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
[DEBUG] 2025-10-15 11:59:19.553 [main] ClassLoaderAccessImpl - Not known whether passed class name [org.hungrybadger.entity.Review] is safe
[DEBUG] 2025-10-15 11:59:19.553 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.hungrybadger.entity.Review
[DEBUG] 2025-10-15 11:59:19.778 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.hungrybadger.entity.Review]: private accessor [cuisineType]
[DEBUG] 2025-10-15 11:59:19.814 [main] interceptor - To-one property `org.hungrybadger.entity.Photo#review` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2025-10-15 11:59:19.814 [main] interceptor - To-one property `org.hungrybadger.entity.Photo#review` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2025-10-15 11:59:19.814 [main] ClassLoaderAccessImpl - Not known whether passed class name [org.hungrybadger.entity.Photo] is safe
[DEBUG] 2025-10-15 11:59:19.814 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.hungrybadger.entity.Photo
[DEBUG] 2025-10-15 11:59:19.827 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.hungrybadger.entity.Photo]: private accessor [imagePath]
[DEBUG] 2025-10-15 11:59:19.827 [main] interceptor - To-one property `org.hungrybadger.entity.Photo#review` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2025-10-15 11:59:19.855 [main] mutation - Skipping collection (re)creation - org.hungrybadger.entity.Review.photos
[DEBUG] 2025-10-15 11:59:19.856 [main] mutation - Skipping collection row deletions - org.hungrybadger.entity.Review.photos
[DEBUG] 2025-10-15 11:59:19.856 [main] mutation - Skipping collection removals - org.hungrybadger.entity.Review.photos
[DEBUG] 2025-10-15 11:59:19.890 [main] creation - Starting post-init callbacks
[DEBUG] 2025-10-15 11:59:19.890 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[org.hungrybadger.entity.Review.photos#{element}]) - element descriptor
[DEBUG] 2025-10-15 11:59:19.890 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(org.hungrybadger.entity.Review.photos)#finishInitialization
[DEBUG] 2025-10-15 11:59:19.890 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(org.hungrybadger.entity.Review.photos) - key descriptor
[DEBUG] 2025-10-15 11:59:19.895 [main] creation - Starting PostInitCallbackEntry : Entity(org.hungrybadger.entity.Review) `staticFetchableList` generator
[DEBUG] 2025-10-15 11:59:19.896 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.hungrybadger.entity.Photo.review]
[DEBUG] 2025-10-15 11:59:19.896 [main] creation - Starting PostInitCallbackEntry : Entity(org.hungrybadger.entity.Photo) `staticFetchableList` generator
[DEBUG] 2025-10-15 11:59:19.896 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[org.hungrybadger.entity.Review.photos#{element}]) - element descriptor
[DEBUG] 2025-10-15 11:59:19.988 [main] create - Created new SQL alias : r1_0
[DEBUG] 2025-10-15 11:59:19.991 [main] create - Registration of TableGroup [StandardTableGroup(org.hungrybadger.entity.Review)] with identifierForTableGroup [org.hungrybadger.entity.Review] for NavigablePath [org.hungrybadger.entity.Review] 
[DEBUG] 2025-10-15 11:59:20.011 [main] AST - DomainResult Graph:
 \-EntityResultImpl [org.hungrybadger.entity.Review]
 |  +-BasicFetch [org.hungrybadger.entity.Review.cuisineType]
 |  +-BasicFetch [org.hungrybadger.entity.Review.personalNotes]
 |  +-BasicFetch [org.hungrybadger.entity.Review.personalRating]
 |  +-DelayedCollectionFetch [org.hungrybadger.entity.Review.photos]
 |  \-BasicFetch [org.hungrybadger.entity.Review.restaurantName]

[DEBUG] 2025-10-15 11:59:20.021 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.hungrybadger.entity.Review) {
          primaryTableReference : review as r1_0
        }
      }
    }

[DEBUG] 2025-10-15 11:59:20.033 [main] AbstractEntityPersister - Static SQL for entity: org.hungrybadger.entity.Review
[DEBUG] 2025-10-15 11:59:20.033 [main] AbstractEntityPersister -  Version select: select id from review where id=?
[DEBUG] 2025-10-15 11:59:20.034 [main] AbstractEntityPersister -  Insert (0): insert into review (cuisine_type,personal_notes,personal_rating,restaurant_name) values (?,?,?,?)
[DEBUG] 2025-10-15 11:59:20.034 [main] AbstractEntityPersister -  Update (0): update review set cuisine_type=?,personal_notes=?,personal_rating=?,restaurant_name=? where id=?
[DEBUG] 2025-10-15 11:59:20.034 [main] AbstractEntityPersister -  Delete (0): delete from review where id=?
[DEBUG] 2025-10-15 11:59:20.034 [main] create - Created new SQL alias : p1_0
[DEBUG] 2025-10-15 11:59:20.034 [main] create - Registration of TableGroup [StandardTableGroup(org.hungrybadger.entity.Photo)] with identifierForTableGroup [org.hungrybadger.entity.Photo] for NavigablePath [org.hungrybadger.entity.Photo] 
[DEBUG] 2025-10-15 11:59:20.038 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@ccd000e] with identifierForTableGroup [org.hungrybadger.entity.Photo.review] for NavigablePath [org.hungrybadger.entity.Photo.review] 
[DEBUG] 2025-10-15 11:59:20.039 [main] create - Created new SQL alias : r1_0
[DEBUG] 2025-10-15 11:59:20.041 [main] AST - DomainResult Graph:
 \-EntityResultImpl [org.hungrybadger.entity.Photo]
 |  +-BasicFetch [org.hungrybadger.entity.Photo.imagePath]
 |  \-EntityFetchJoinedImpl [org.hungrybadger.entity.Photo.review]

[DEBUG] 2025-10-15 11:59:20.042 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.hungrybadger.entity.Photo) {
          primaryTableReference : photo as p1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.hungrybadger.entity.Photo.review) {
              primaryTableReference : review as r1_0
            }
          }
        }
      }
    }

[DEBUG] 2025-10-15 11:59:20.042 [main] AbstractEntityPersister - Static SQL for entity: org.hungrybadger.entity.Photo
[DEBUG] 2025-10-15 11:59:20.042 [main] AbstractEntityPersister -  Version select: select id from photo where id=?
[DEBUG] 2025-10-15 11:59:20.042 [main] AbstractEntityPersister -  Insert (0): insert into photo (image_path,review_id) values (?,?)
[DEBUG] 2025-10-15 11:59:20.043 [main] AbstractEntityPersister -  Update (0): update photo set image_path=?,review_id=? where id=?
[DEBUG] 2025-10-15 11:59:20.043 [main] AbstractEntityPersister -  Delete (0): delete from photo where id=?
[DEBUG] 2025-10-15 11:59:20.044 [main] create - Created new SQL alias : p1_0
[DEBUG] 2025-10-15 11:59:20.045 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@7d18338b] with identifierForTableGroup [org.hungrybadger.entity.Review.photos] for NavigablePath [org.hungrybadger.entity.Review.photos] 
[DEBUG] 2025-10-15 11:59:20.045 [main] create - Registration of TableGroup [StandardTableGroup(org.hungrybadger.entity.Review.photos.{element})] with identifierForTableGroup [org.hungrybadger.entity.Review.photos.{element}] for NavigablePath [org.hungrybadger.entity.Review.photos.{element}] 
[DEBUG] 2025-10-15 11:59:20.053 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@106459d9] with identifierForTableGroup [org.hungrybadger.entity.Review.photos.{element}.review] for NavigablePath [org.hungrybadger.entity.Review.photos.{element}.review] 
[DEBUG] 2025-10-15 11:59:20.056 [main] AST - DomainResult Graph:
 \-CollectionDomainResult [org.hungrybadger.entity.Review.photos]

[DEBUG] 2025-10-15 11:59:20.057 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (p1 : org.hungrybadger.entity.Review.photos) {
          primaryTableReference : photo as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (r1 : org.hungrybadger.entity.Review.photos.{element}.review) {
            }
          }
        }
      }
    }

[DEBUG] 2025-10-15 11:59:20.057 [main] mutation - Static SQL for collection: org.hungrybadger.entity.Review.photos
[DEBUG] 2025-10-15 11:59:20.096 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2025-10-15 11:59:20.096 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2025-10-15 11:59:20.103 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2025-10-15 11:59:20.103 [main] JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[DEBUG] 2025-10-15 11:59:20.105 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7377781e] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@d13379e]
[DEBUG] 2025-10-15 11:59:20.106 [main] NamedObjectRepository - Checking 0 named HQL queries
[DEBUG] 2025-10-15 11:59:20.106 [main] NamedObjectRepository - Checking 0 named SQL queries
[DEBUG] 2025-10-15 11:59:20.107 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2025-10-15 11:59:20.107 [main] SchemaManagementToolCoordinator - No actions found; doing nothing
[DEBUG] 2025-10-15 11:59:20.110 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@681d704e
[DEBUG] 2025-10-15 11:59:20.110 [main] SessionFactoryRegistry - Registering SessionFactory: 4b4eda76-6982-479a-87d0-5590f8ae386f (<unnamed>)
[DEBUG] 2025-10-15 11:59:20.110 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2025-10-15 11:59:20.110 [main] SessionFactoryImpl - Instantiated SessionFactory
[DEBUG] 2025-10-15 11:59:20.159 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2025-10-15 11:59:20.183 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2025-10-15 11:59:20.203 [main] results - Initializer list:
	  org.hungrybadger.entity.Photo.review -> EntityJoinedFetchInitializer(org.hungrybadger.entity.Photo.review)@508397424 (ToOneAttributeMapping(NavigableRole[org.hungrybadger.entity.Photo.review])@347419231)
	  org.hungrybadger.entity.Photo.review.photos -> DelayedCollectionInitializer(org.hungrybadger.entity.Photo.review.photos)@155833159 (PluralAttribute(org.hungrybadger.entity.Review.photos))
	  org.hungrybadger.entity.Photo -> EntityResultInitializer(org.hungrybadger.entity.Photo)@257614494 (SingleTableEntityPersister(org.hungrybadger.entity.Photo))

[DEBUG] 2025-10-15 11:59:20.210 [main] SQL - select p1_0.id,p1_0.image_path,p1_0.review_id,r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from photo p1_0 join review r1_0 on r1_0.id=p1_0.review_id where p1_0.id=?
[DEBUG] 2025-10-15 11:59:20.233 [main] results - Extracted JDBC value [3] - [2]
[DEBUG] 2025-10-15 11:59:20.233 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.hungrybadger.entity.Photo.review): 2
[DEBUG] 2025-10-15 11:59:20.233 [main] results - Extracted JDBC value [2] - [2]
[DEBUG] 2025-10-15 11:59:20.234 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Photo): 2
[DEBUG] 2025-10-15 11:59:20.234 [main] results - Extracted JDBC value [3] - [2]
[DEBUG] 2025-10-15 11:59:20.235 [main] collection - (DelayedCollectionInitializer) Current row collection key : org.hungrybadger.entity.Photo.review.photos#2
[DEBUG] 2025-10-15 11:59:20.237 [main] entity - (EntityJoinedFetchInitializer) Created new entity instance [org.hungrybadger.entity.Photo.review#2] : 481577519
[DEBUG] 2025-10-15 11:59:20.238 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Photo#2] : 527826205
[DEBUG] 2025-10-15 11:59:20.246 [main] results - Extracted JDBC value [4] - [American]
[DEBUG] 2025-10-15 11:59:20.247 [main] results - Extracted JDBC value [5] - [Wraps, good after a long day]
[DEBUG] 2025-10-15 11:59:20.247 [main] results - Extracted JDBC value [6] - [4]
[DEBUG] 2025-10-15 11:59:20.247 [main] results - Extracted JDBC value [7] - [Conrads]
[DEBUG] 2025-10-15 11:59:20.252 [main] entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.hungrybadger.entity.Photo.review#2
[DEBUG] 2025-10-15 11:59:20.252 [main] results - Extracted JDBC value [1] - [images/conrads_wrap.jpg]
[DEBUG] 2025-10-15 11:59:20.252 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Photo#2
[DEBUG] 2025-10-15 11:59:20.252 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@16949dfa
[DEBUG] 2025-10-15 11:59:20.255 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 11:59:20.258 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2025-10-15 11:59:20.258 [main] TransactionImpl - begin
[DEBUG] 2025-10-15 11:59:20.276 [main] TransactionImpl - committing
[DEBUG] 2025-10-15 11:59:20.277 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2025-10-15 11:59:20.278 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2025-10-15 11:59:20.287 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
[DEBUG] 2025-10-15 11:59:20.287 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2025-10-15 11:59:20.288 [main] EntityPrinter - Listing entities:
[DEBUG] 2025-10-15 11:59:20.289 [main] EntityPrinter - org.hungrybadger.entity.Photo{imagePath=images/conrads_wrap.jpg, review=org.hungrybadger.entity.Review#2, id=2}
[DEBUG] 2025-10-15 11:59:20.298 [main] SQL - delete from photo where id=?
[DEBUG] 2025-10-15 11:59:20.304 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 11:59:20.305 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 11:59:20.305 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2025-10-15 11:59:20.306 [main] results - Initializer list:
	  org.hungrybadger.entity.Photo.review -> EntityJoinedFetchInitializer(org.hungrybadger.entity.Photo.review)@1042853700 (ToOneAttributeMapping(NavigableRole[org.hungrybadger.entity.Photo.review])@347419231)
	  org.hungrybadger.entity.Photo.review.photos -> DelayedCollectionInitializer(org.hungrybadger.entity.Photo.review.photos)@864622150 (PluralAttribute(org.hungrybadger.entity.Review.photos))
	  org.hungrybadger.entity.Photo -> EntityResultInitializer(org.hungrybadger.entity.Photo)@1004271827 (SingleTableEntityPersister(org.hungrybadger.entity.Photo))

[DEBUG] 2025-10-15 11:59:20.306 [main] SQL - select p1_0.id,p1_0.image_path,p1_0.review_id,r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from photo p1_0 join review r1_0 on r1_0.id=p1_0.review_id where p1_0.id=?
[DEBUG] 2025-10-15 11:59:20.307 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 11:59:20.531 [main] create - Created new SQL alias : p1_0
[DEBUG] 2025-10-15 11:59:20.531 [main] create - Registration of TableGroup [StandardTableGroup(org.hungrybadger.entity.Photo(13278331620100))] with identifierForTableGroup [org.hungrybadger.entity.Photo] for NavigablePath [org.hungrybadger.entity.Photo] 
[DEBUG] 2025-10-15 11:59:20.540 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4c000cc4] with identifierForTableGroup [org.hungrybadger.entity.Photo.review] for NavigablePath [org.hungrybadger.entity.Photo.review] 
[DEBUG] 2025-10-15 11:59:20.542 [main] AST - DomainResult Graph:
 \-EntityResultImpl [org.hungrybadger.entity.Photo(13278331620100)]
 |  +-BasicFetch [org.hungrybadger.entity.Photo(13278331620100).imagePath]
 |  \-CircularFetchImpl [org.hungrybadger.entity.Photo(13278331620100).review]

[DEBUG] 2025-10-15 11:59:20.542 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.hungrybadger.entity.Photo(13278331620100)) {
          primaryTableReference : photo as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (r1 : org.hungrybadger.entity.Photo(13278331620100).review) {
            }
          }
        }
      }
    }

[DEBUG] 2025-10-15 11:59:20.545 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
[DEBUG] 2025-10-15 11:59:20.548 [main] results - Initializer list:
	  org.hungrybadger.entity.Photo(13278331620100).review -> EntitySelectFetchInitializer(org.hungrybadger.entity.Photo(13278331620100).review)@243076530 (ToOneAttributeMapping(NavigableRole[org.hungrybadger.entity.Photo.review])@347419231)
	  org.hungrybadger.entity.Photo(13278331620100) -> EntityResultInitializer(org.hungrybadger.entity.Photo(13278331620100))@1245825773 (SingleTableEntityPersister(org.hungrybadger.entity.Photo))

[DEBUG] 2025-10-15 11:59:20.548 [main] SQL - select p1_0.id,p1_0.image_path,p1_0.review_id from photo p1_0
[DEBUG] 2025-10-15 11:59:20.550 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2025-10-15 11:59:20.550 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Photo(13278331620100)): 1
[DEBUG] 2025-10-15 11:59:20.550 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Photo(13278331620100)#1] : 1993314761
[DEBUG] 2025-10-15 11:59:20.551 [main] results - Extracted JDBC value [2] - [1]
[DEBUG] 2025-10-15 11:59:20.551 [main] entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.hungrybadger.entity.Photo(13278331620100).review#1) : 1
[DEBUG] 2025-10-15 11:59:20.551 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2025-10-15 11:59:20.551 [main] results - Initializer list:
	  org.hungrybadger.entity.Review.photos -> DelayedCollectionInitializer(org.hungrybadger.entity.Review.photos)@1958731110 (PluralAttribute(org.hungrybadger.entity.Review.photos))
	  org.hungrybadger.entity.Review -> EntityResultInitializer(org.hungrybadger.entity.Review)@1875372072 (SingleTableEntityPersister(org.hungrybadger.entity.Review))

[DEBUG] 2025-10-15 11:59:20.551 [main] SQL - select r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from review r1_0 where r1_0.id=?
[DEBUG] 2025-10-15 11:59:20.553 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review): 1
[DEBUG] 2025-10-15 11:59:20.553 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2025-10-15 11:59:20.553 [main] collection - (DelayedCollectionInitializer) Current row collection key : org.hungrybadger.entity.Review.photos#1
[DEBUG] 2025-10-15 11:59:20.553 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Review#1] : 1098139353
[DEBUG] 2025-10-15 11:59:20.553 [main] results - Extracted JDBC value [1] - [Japanese]
[DEBUG] 2025-10-15 11:59:20.553 [main] results - Extracted JDBC value [2] - [Good cheap rolls. Togo or sit down are both great]
[DEBUG] 2025-10-15 11:59:20.553 [main] results - Extracted JDBC value [3] - [5]
[DEBUG] 2025-10-15 11:59:20.553 [main] results - Extracted JDBC value [4] - [Sushi Express]
[DEBUG] 2025-10-15 11:59:20.554 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Review#1
[DEBUG] 2025-10-15 11:59:20.554 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1e7d3d87
[DEBUG] 2025-10-15 11:59:20.554 [main] entity - (EntitySelectFetchInitializer) Entity [org.hungrybadger.entity.Photo(13278331620100).review#1] : 1 has being loaded by session.internalLoad.
[DEBUG] 2025-10-15 11:59:20.554 [main] results - Extracted JDBC value [1] - [images/sushi_express_rolls.jpg]
[DEBUG] 2025-10-15 11:59:20.554 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Photo(13278331620100)#1
[DEBUG] 2025-10-15 11:59:20.554 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7e76a66f
[DEBUG] 2025-10-15 11:59:20.554 [main] results - Extracted JDBC value [0] - [2]
[DEBUG] 2025-10-15 11:59:20.554 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Photo(13278331620100)): 2
[DEBUG] 2025-10-15 11:59:20.554 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Photo(13278331620100)#2] : 1914928104
[DEBUG] 2025-10-15 11:59:20.554 [main] results - Extracted JDBC value [2] - [2]
[DEBUG] 2025-10-15 11:59:20.554 [main] entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.hungrybadger.entity.Photo(13278331620100).review#2) : 2
[DEBUG] 2025-10-15 11:59:20.554 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2025-10-15 11:59:20.555 [main] results - Initializer list:
	  org.hungrybadger.entity.Review.photos -> DelayedCollectionInitializer(org.hungrybadger.entity.Review.photos)@96858414 (PluralAttribute(org.hungrybadger.entity.Review.photos))
	  org.hungrybadger.entity.Review -> EntityResultInitializer(org.hungrybadger.entity.Review)@603456365 (SingleTableEntityPersister(org.hungrybadger.entity.Review))

[DEBUG] 2025-10-15 11:59:20.555 [main] SQL - select r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from review r1_0 where r1_0.id=?
[DEBUG] 2025-10-15 11:59:20.556 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review): 2
[DEBUG] 2025-10-15 11:59:20.556 [main] results - Extracted JDBC value [0] - [2]
[DEBUG] 2025-10-15 11:59:20.556 [main] collection - (DelayedCollectionInitializer) Current row collection key : org.hungrybadger.entity.Review.photos#2
[DEBUG] 2025-10-15 11:59:20.556 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Review#2] : 251788397
[DEBUG] 2025-10-15 11:59:20.556 [main] results - Extracted JDBC value [1] - [American]
[DEBUG] 2025-10-15 11:59:20.556 [main] results - Extracted JDBC value [2] - [Wraps, good after a long day]
[DEBUG] 2025-10-15 11:59:20.556 [main] results - Extracted JDBC value [3] - [4]
[DEBUG] 2025-10-15 11:59:20.556 [main] results - Extracted JDBC value [4] - [Conrads]
[DEBUG] 2025-10-15 11:59:20.556 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Review#2
[DEBUG] 2025-10-15 11:59:20.556 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@688d2a5d
[DEBUG] 2025-10-15 11:59:20.557 [main] entity - (EntitySelectFetchInitializer) Entity [org.hungrybadger.entity.Photo(13278331620100).review#2] : 2 has being loaded by session.internalLoad.
[DEBUG] 2025-10-15 11:59:20.557 [main] results - Extracted JDBC value [1] - [images/conrads_wrap.jpg]
[DEBUG] 2025-10-15 11:59:20.557 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Photo(13278331620100)#2
[DEBUG] 2025-10-15 11:59:20.557 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7e76a66f
[DEBUG] 2025-10-15 11:59:20.557 [main] results - Extracted JDBC value [0] - [3]
[DEBUG] 2025-10-15 11:59:20.557 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Photo(13278331620100)): 3
[DEBUG] 2025-10-15 11:59:20.557 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Photo(13278331620100)#3] : 675463320
[DEBUG] 2025-10-15 11:59:20.557 [main] results - Extracted JDBC value [2] - [3]
[DEBUG] 2025-10-15 11:59:20.557 [main] entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.hungrybadger.entity.Photo(13278331620100).review#3) : 3
[DEBUG] 2025-10-15 11:59:20.557 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2025-10-15 11:59:20.558 [main] results - Initializer list:
	  org.hungrybadger.entity.Review.photos -> DelayedCollectionInitializer(org.hungrybadger.entity.Review.photos)@673231721 (PluralAttribute(org.hungrybadger.entity.Review.photos))
	  org.hungrybadger.entity.Review -> EntityResultInitializer(org.hungrybadger.entity.Review)@1186076210 (SingleTableEntityPersister(org.hungrybadger.entity.Review))

[DEBUG] 2025-10-15 11:59:20.558 [main] SQL - select r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from review r1_0 where r1_0.id=?
[DEBUG] 2025-10-15 11:59:20.559 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review): 3
[DEBUG] 2025-10-15 11:59:20.559 [main] results - Extracted JDBC value [0] - [3]
[DEBUG] 2025-10-15 11:59:20.559 [main] collection - (DelayedCollectionInitializer) Current row collection key : org.hungrybadger.entity.Review.photos#3
[DEBUG] 2025-10-15 11:59:20.559 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Review#3] : 2116089059
[DEBUG] 2025-10-15 11:59:20.559 [main] results - Extracted JDBC value [1] - [American]
[DEBUG] 2025-10-15 11:59:20.559 [main] results - Extracted JDBC value [2] - [Mac and Cheese Slice for the win!]
[DEBUG] 2025-10-15 11:59:20.559 [main] results - Extracted JDBC value [3] - [5]
[DEBUG] 2025-10-15 11:59:20.559 [main] results - Extracted JDBC value [4] - [Ians Pizza]
[DEBUG] 2025-10-15 11:59:20.559 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Review#3
[DEBUG] 2025-10-15 11:59:20.559 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4f6ff62
[DEBUG] 2025-10-15 11:59:20.560 [main] entity - (EntitySelectFetchInitializer) Entity [org.hungrybadger.entity.Photo(13278331620100).review#3] : 3 has being loaded by session.internalLoad.
[DEBUG] 2025-10-15 11:59:20.560 [main] results - Extracted JDBC value [1] - [images/ians_mac_slice.jpg]
[DEBUG] 2025-10-15 11:59:20.560 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Photo(13278331620100)#3
[DEBUG] 2025-10-15 11:59:20.560 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7e76a66f
[DEBUG] 2025-10-15 11:59:20.560 [main] results - Extracted JDBC value [0] - [4]
[DEBUG] 2025-10-15 11:59:20.560 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Photo(13278331620100)): 4
[DEBUG] 2025-10-15 11:59:20.560 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Photo(13278331620100)#4] : 476238509
[DEBUG] 2025-10-15 11:59:20.560 [main] results - Extracted JDBC value [2] - [3]
[DEBUG] 2025-10-15 11:59:20.560 [main] entity - (EntitySelectFetchInitializer) Found existing loading entry [org.hungrybadger.entity.Photo(13278331620100).review#3] - using loading instance
[DEBUG] 2025-10-15 11:59:20.560 [main] results - Extracted JDBC value [1] - [images/ians_inside.jpg]
[DEBUG] 2025-10-15 11:59:20.560 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Photo(13278331620100)#4
[DEBUG] 2025-10-15 11:59:20.560 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7e76a66f
[DEBUG] 2025-10-15 11:59:20.561 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 11:59:20.562 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 11:59:20.691 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2025-10-15 11:59:20.691 [main] results - Initializer list:
	  org.hungrybadger.entity.Review.photos -> DelayedCollectionInitializer(org.hungrybadger.entity.Review.photos)@1828522217 (PluralAttribute(org.hungrybadger.entity.Review.photos))
	  org.hungrybadger.entity.Review -> EntityResultInitializer(org.hungrybadger.entity.Review)@1422562336 (SingleTableEntityPersister(org.hungrybadger.entity.Review))

[DEBUG] 2025-10-15 11:59:20.691 [main] SQL - select r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from review r1_0 where r1_0.id=?
[DEBUG] 2025-10-15 11:59:20.693 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review): 3
[DEBUG] 2025-10-15 11:59:20.693 [main] results - Extracted JDBC value [0] - [3]
[DEBUG] 2025-10-15 11:59:20.693 [main] collection - (DelayedCollectionInitializer) Current row collection key : org.hungrybadger.entity.Review.photos#3
[DEBUG] 2025-10-15 11:59:20.693 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Review#3] : 1869571492
[DEBUG] 2025-10-15 11:59:20.693 [main] results - Extracted JDBC value [1] - [American]
[DEBUG] 2025-10-15 11:59:20.693 [main] results - Extracted JDBC value [2] - [Mac and Cheese Slice for the win!]
[DEBUG] 2025-10-15 11:59:20.694 [main] results - Extracted JDBC value [3] - [5]
[DEBUG] 2025-10-15 11:59:20.694 [main] results - Extracted JDBC value [4] - [Ians Pizza]
[DEBUG] 2025-10-15 11:59:20.694 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Review#3
[DEBUG] 2025-10-15 11:59:20.694 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3dea1ecc
[DEBUG] 2025-10-15 11:59:20.694 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 11:59:20.850 [main] create - Created new SQL alias : p1_0
[DEBUG] 2025-10-15 11:59:20.850 [main] create - Registration of TableGroup [StandardTableGroup(org.hungrybadger.entity.Photo(13278711906700))] with identifierForTableGroup [org.hungrybadger.entity.Photo] for NavigablePath [org.hungrybadger.entity.Photo] 
[DEBUG] 2025-10-15 11:59:20.850 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@40ddf339] with identifierForTableGroup [org.hungrybadger.entity.Photo.review] for NavigablePath [org.hungrybadger.entity.Photo.review] 
[DEBUG] 2025-10-15 11:59:20.854 [main] BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5c3007d
[DEBUG] 2025-10-15 11:59:20.855 [main] BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.hungrybadger.entity.Photo(13278711906700).imagePath) 
[DEBUG] 2025-10-15 11:59:20.858 [main] AST - DomainResult Graph:
 \-EntityResultImpl [org.hungrybadger.entity.Photo(13278711906700)]
 |  +-BasicFetch [org.hungrybadger.entity.Photo(13278711906700).imagePath]
 |  \-CircularFetchImpl [org.hungrybadger.entity.Photo(13278711906700).review]

[DEBUG] 2025-10-15 11:59:20.858 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.hungrybadger.entity.Photo(13278711906700)) {
          primaryTableReference : photo as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (r1 : org.hungrybadger.entity.Photo(13278711906700).review) {
            }
          }
        }
      }
    }

[DEBUG] 2025-10-15 11:59:20.859 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
[DEBUG] 2025-10-15 11:59:20.859 [main] results - Initializer list:
	  org.hungrybadger.entity.Photo(13278711906700).review -> EntitySelectFetchInitializer(org.hungrybadger.entity.Photo(13278711906700).review)@2081098713 (ToOneAttributeMapping(NavigableRole[org.hungrybadger.entity.Photo.review])@347419231)
	  org.hungrybadger.entity.Photo(13278711906700) -> EntityResultInitializer(org.hungrybadger.entity.Photo(13278711906700))@1632677830 (SingleTableEntityPersister(org.hungrybadger.entity.Photo))

[DEBUG] 2025-10-15 11:59:20.859 [main] SQL - select p1_0.id,p1_0.image_path,p1_0.review_id from photo p1_0 where p1_0.image_path like ? escape ''
[DEBUG] 2025-10-15 11:59:20.861 [main] results - Extracted JDBC value [0] - [3]
[DEBUG] 2025-10-15 11:59:20.861 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Photo(13278711906700)): 3
[DEBUG] 2025-10-15 11:59:20.861 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Photo(13278711906700)#3] : 700253546
[DEBUG] 2025-10-15 11:59:20.861 [main] results - Extracted JDBC value [2] - [3]
[DEBUG] 2025-10-15 11:59:20.861 [main] entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.hungrybadger.entity.Photo(13278711906700).review#3) : 3
[DEBUG] 2025-10-15 11:59:20.861 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2025-10-15 11:59:20.861 [main] results - Initializer list:
	  org.hungrybadger.entity.Review.photos -> DelayedCollectionInitializer(org.hungrybadger.entity.Review.photos)@568787640 (PluralAttribute(org.hungrybadger.entity.Review.photos))
	  org.hungrybadger.entity.Review -> EntityResultInitializer(org.hungrybadger.entity.Review)@2132798551 (SingleTableEntityPersister(org.hungrybadger.entity.Review))

[DEBUG] 2025-10-15 11:59:20.861 [main] SQL - select r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from review r1_0 where r1_0.id=?
[DEBUG] 2025-10-15 11:59:20.863 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review): 3
[DEBUG] 2025-10-15 11:59:20.863 [main] results - Extracted JDBC value [0] - [3]
[DEBUG] 2025-10-15 11:59:20.863 [main] collection - (DelayedCollectionInitializer) Current row collection key : org.hungrybadger.entity.Review.photos#3
[DEBUG] 2025-10-15 11:59:20.863 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Review#3] : 2075283526
[DEBUG] 2025-10-15 11:59:20.864 [main] results - Extracted JDBC value [1] - [American]
[DEBUG] 2025-10-15 11:59:20.864 [main] results - Extracted JDBC value [2] - [Mac and Cheese Slice for the win!]
[DEBUG] 2025-10-15 11:59:20.864 [main] results - Extracted JDBC value [3] - [5]
[DEBUG] 2025-10-15 11:59:20.864 [main] results - Extracted JDBC value [4] - [Ians Pizza]
[DEBUG] 2025-10-15 11:59:20.864 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Review#3
[DEBUG] 2025-10-15 11:59:20.864 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@126af200
[DEBUG] 2025-10-15 11:59:20.864 [main] entity - (EntitySelectFetchInitializer) Entity [org.hungrybadger.entity.Photo(13278711906700).review#3] : 3 has being loaded by session.internalLoad.
[DEBUG] 2025-10-15 11:59:20.864 [main] results - Extracted JDBC value [1] - [images/ians_mac_slice.jpg]
[DEBUG] 2025-10-15 11:59:20.864 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Photo(13278711906700)#3
[DEBUG] 2025-10-15 11:59:20.864 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1e000a17
[DEBUG] 2025-10-15 11:59:20.864 [main] results - Extracted JDBC value [0] - [4]
[DEBUG] 2025-10-15 11:59:20.864 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Photo(13278711906700)): 4
[DEBUG] 2025-10-15 11:59:20.864 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Photo(13278711906700)#4] : 2010733041
[DEBUG] 2025-10-15 11:59:20.864 [main] results - Extracted JDBC value [2] - [3]
[DEBUG] 2025-10-15 11:59:20.864 [main] entity - (EntitySelectFetchInitializer) Found existing loading entry [org.hungrybadger.entity.Photo(13278711906700).review#3] - using loading instance
[DEBUG] 2025-10-15 11:59:20.864 [main] results - Extracted JDBC value [1] - [images/ians_inside.jpg]
[DEBUG] 2025-10-15 11:59:20.864 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Photo(13278711906700)#4
[DEBUG] 2025-10-15 11:59:20.864 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1e000a17
[DEBUG] 2025-10-15 11:59:20.865 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 11:59:20.865 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 11:59:20.985 [main] create - Created new SQL alias : p1_0
[DEBUG] 2025-10-15 11:59:20.985 [main] create - Registration of TableGroup [StandardTableGroup(org.hungrybadger.entity.Photo(13278856611300))] with identifierForTableGroup [org.hungrybadger.entity.Photo] for NavigablePath [org.hungrybadger.entity.Photo] 
[DEBUG] 2025-10-15 11:59:20.985 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4b22214d] with identifierForTableGroup [org.hungrybadger.entity.Photo.review] for NavigablePath [org.hungrybadger.entity.Photo.review] 
[DEBUG] 2025-10-15 11:59:20.986 [main] BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4c79ca55
[DEBUG] 2025-10-15 11:59:20.986 [main] BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.hungrybadger.entity.Photo(13278856611300).imagePath) 
[DEBUG] 2025-10-15 11:59:20.988 [main] AST - DomainResult Graph:
 \-EntityResultImpl [org.hungrybadger.entity.Photo(13278856611300)]
 |  +-BasicFetch [org.hungrybadger.entity.Photo(13278856611300).imagePath]
 |  \-CircularFetchImpl [org.hungrybadger.entity.Photo(13278856611300).review]

[DEBUG] 2025-10-15 11:59:20.988 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.hungrybadger.entity.Photo(13278856611300)) {
          primaryTableReference : photo as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (r1 : org.hungrybadger.entity.Photo(13278856611300).review) {
            }
          }
        }
      }
    }

[DEBUG] 2025-10-15 11:59:20.989 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
[DEBUG] 2025-10-15 11:59:20.989 [main] results - Initializer list:
	  org.hungrybadger.entity.Photo(13278856611300).review -> EntitySelectFetchInitializer(org.hungrybadger.entity.Photo(13278856611300).review)@1464949060 (ToOneAttributeMapping(NavigableRole[org.hungrybadger.entity.Photo.review])@347419231)
	  org.hungrybadger.entity.Photo(13278856611300) -> EntityResultInitializer(org.hungrybadger.entity.Photo(13278856611300))@2049393953 (SingleTableEntityPersister(org.hungrybadger.entity.Photo))

[DEBUG] 2025-10-15 11:59:20.989 [main] SQL - select p1_0.id,p1_0.image_path,p1_0.review_id from photo p1_0 where p1_0.image_path=?
[DEBUG] 2025-10-15 11:59:20.991 [main] results - Extracted JDBC value [0] - [2]
[DEBUG] 2025-10-15 11:59:20.991 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Photo(13278856611300)): 2
[DEBUG] 2025-10-15 11:59:20.991 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Photo(13278856611300)#2] : 1812378044
[DEBUG] 2025-10-15 11:59:20.991 [main] results - Extracted JDBC value [2] - [2]
[DEBUG] 2025-10-15 11:59:20.992 [main] entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.hungrybadger.entity.Photo(13278856611300).review#2) : 2
[DEBUG] 2025-10-15 11:59:20.992 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2025-10-15 11:59:20.992 [main] results - Initializer list:
	  org.hungrybadger.entity.Review.photos -> DelayedCollectionInitializer(org.hungrybadger.entity.Review.photos)@495828752 (PluralAttribute(org.hungrybadger.entity.Review.photos))
	  org.hungrybadger.entity.Review -> EntityResultInitializer(org.hungrybadger.entity.Review)@236396435 (SingleTableEntityPersister(org.hungrybadger.entity.Review))

[DEBUG] 2025-10-15 11:59:20.992 [main] SQL - select r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from review r1_0 where r1_0.id=?
[DEBUG] 2025-10-15 11:59:20.994 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review): 2
[DEBUG] 2025-10-15 11:59:20.994 [main] results - Extracted JDBC value [0] - [2]
[DEBUG] 2025-10-15 11:59:20.994 [main] collection - (DelayedCollectionInitializer) Current row collection key : org.hungrybadger.entity.Review.photos#2
[DEBUG] 2025-10-15 11:59:20.994 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Review#2] : 1424575977
[DEBUG] 2025-10-15 11:59:20.994 [main] results - Extracted JDBC value [1] - [American]
[DEBUG] 2025-10-15 11:59:20.995 [main] results - Extracted JDBC value [2] - [Wraps, good after a long day]
[DEBUG] 2025-10-15 11:59:20.995 [main] results - Extracted JDBC value [3] - [4]
[DEBUG] 2025-10-15 11:59:20.995 [main] results - Extracted JDBC value [4] - [Conrads]
[DEBUG] 2025-10-15 11:59:20.995 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Review#2
[DEBUG] 2025-10-15 11:59:20.995 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@924f3f1
[DEBUG] 2025-10-15 11:59:20.995 [main] entity - (EntitySelectFetchInitializer) Entity [org.hungrybadger.entity.Photo(13278856611300).review#2] : 2 has being loaded by session.internalLoad.
[DEBUG] 2025-10-15 11:59:20.995 [main] results - Extracted JDBC value [1] - [images/conrads_wrap.jpg]
[DEBUG] 2025-10-15 11:59:20.995 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Photo(13278856611300)#2
[DEBUG] 2025-10-15 11:59:20.995 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@19e2db7c
[DEBUG] 2025-10-15 11:59:20.995 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 11:59:20.996 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 11:59:21.119 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2025-10-15 11:59:21.119 [main] results - Initializer list:
	  org.hungrybadger.entity.Photo.review -> EntityJoinedFetchInitializer(org.hungrybadger.entity.Photo.review)@1256374299 (ToOneAttributeMapping(NavigableRole[org.hungrybadger.entity.Photo.review])@347419231)
	  org.hungrybadger.entity.Photo.review.photos -> DelayedCollectionInitializer(org.hungrybadger.entity.Photo.review.photos)@480975330 (PluralAttribute(org.hungrybadger.entity.Review.photos))
	  org.hungrybadger.entity.Photo -> EntityResultInitializer(org.hungrybadger.entity.Photo)@1752820099 (SingleTableEntityPersister(org.hungrybadger.entity.Photo))

[DEBUG] 2025-10-15 11:59:21.119 [main] SQL - select p1_0.id,p1_0.image_path,p1_0.review_id,r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from photo p1_0 join review r1_0 on r1_0.id=p1_0.review_id where p1_0.id=?
[DEBUG] 2025-10-15 11:59:21.122 [main] results - Extracted JDBC value [3] - [1]
[DEBUG] 2025-10-15 11:59:21.122 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.hungrybadger.entity.Photo.review): 1
[DEBUG] 2025-10-15 11:59:21.122 [main] results - Extracted JDBC value [2] - [1]
[DEBUG] 2025-10-15 11:59:21.122 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Photo): 1
[DEBUG] 2025-10-15 11:59:21.122 [main] results - Extracted JDBC value [3] - [1]
[DEBUG] 2025-10-15 11:59:21.122 [main] collection - (DelayedCollectionInitializer) Current row collection key : org.hungrybadger.entity.Photo.review.photos#1
[DEBUG] 2025-10-15 11:59:21.122 [main] entity - (EntityJoinedFetchInitializer) Created new entity instance [org.hungrybadger.entity.Photo.review#1] : 326190931
[DEBUG] 2025-10-15 11:59:21.122 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Photo#1] : 1010620325
[DEBUG] 2025-10-15 11:59:21.122 [main] results - Extracted JDBC value [4] - [Japanese]
[DEBUG] 2025-10-15 11:59:21.122 [main] results - Extracted JDBC value [5] - [Good cheap rolls. Togo or sit down are both great]
[DEBUG] 2025-10-15 11:59:21.122 [main] results - Extracted JDBC value [6] - [5]
[DEBUG] 2025-10-15 11:59:21.122 [main] results - Extracted JDBC value [7] - [Sushi Express]
[DEBUG] 2025-10-15 11:59:21.122 [main] entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.hungrybadger.entity.Photo.review#1
[DEBUG] 2025-10-15 11:59:21.122 [main] results - Extracted JDBC value [1] - [images/sushi_express_rolls.jpg]
[DEBUG] 2025-10-15 11:59:21.122 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Photo#1
[DEBUG] 2025-10-15 11:59:21.122 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6eb5b9e7
[DEBUG] 2025-10-15 11:59:21.123 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 11:59:21.236 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2025-10-15 11:59:21.236 [main] results - Initializer list:
	  org.hungrybadger.entity.Photo.review -> EntityJoinedFetchInitializer(org.hungrybadger.entity.Photo.review)@654651991 (ToOneAttributeMapping(NavigableRole[org.hungrybadger.entity.Photo.review])@347419231)
	  org.hungrybadger.entity.Photo.review.photos -> DelayedCollectionInitializer(org.hungrybadger.entity.Photo.review.photos)@1779341308 (PluralAttribute(org.hungrybadger.entity.Review.photos))
	  org.hungrybadger.entity.Photo -> EntityResultInitializer(org.hungrybadger.entity.Photo)@1713836982 (SingleTableEntityPersister(org.hungrybadger.entity.Photo))

[DEBUG] 2025-10-15 11:59:21.236 [main] SQL - select p1_0.id,p1_0.image_path,p1_0.review_id,r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from photo p1_0 join review r1_0 on r1_0.id=p1_0.review_id where p1_0.id=?
[DEBUG] 2025-10-15 11:59:21.238 [main] results - Extracted JDBC value [3] - [1]
[DEBUG] 2025-10-15 11:59:21.238 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.hungrybadger.entity.Photo.review): 1
[DEBUG] 2025-10-15 11:59:21.238 [main] results - Extracted JDBC value [2] - [1]
[DEBUG] 2025-10-15 11:59:21.238 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Photo): 1
[DEBUG] 2025-10-15 11:59:21.239 [main] results - Extracted JDBC value [3] - [1]
[DEBUG] 2025-10-15 11:59:21.239 [main] collection - (DelayedCollectionInitializer) Current row collection key : org.hungrybadger.entity.Photo.review.photos#1
[DEBUG] 2025-10-15 11:59:21.239 [main] entity - (EntityJoinedFetchInitializer) Created new entity instance [org.hungrybadger.entity.Photo.review#1] : 845519198
[DEBUG] 2025-10-15 11:59:21.239 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Photo#1] : 871557892
[DEBUG] 2025-10-15 11:59:21.239 [main] results - Extracted JDBC value [4] - [Japanese]
[DEBUG] 2025-10-15 11:59:21.239 [main] results - Extracted JDBC value [5] - [Good cheap rolls. Togo or sit down are both great]
[DEBUG] 2025-10-15 11:59:21.239 [main] results - Extracted JDBC value [6] - [5]
[DEBUG] 2025-10-15 11:59:21.239 [main] results - Extracted JDBC value [7] - [Sushi Express]
[DEBUG] 2025-10-15 11:59:21.239 [main] entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.hungrybadger.entity.Photo.review#1
[DEBUG] 2025-10-15 11:59:21.239 [main] results - Extracted JDBC value [1] - [images/sushi_express_rolls.jpg]
[DEBUG] 2025-10-15 11:59:21.239 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Photo#1
[DEBUG] 2025-10-15 11:59:21.239 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2ed7978c
[DEBUG] 2025-10-15 11:59:21.239 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 11:59:21.240 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2025-10-15 11:59:21.240 [main] TransactionImpl - begin
[DEBUG] 2025-10-15 11:59:21.243 [main] create - Created new SQL alias : p1_0
[DEBUG] 2025-10-15 11:59:21.243 [main] create - Registration of TableGroup [StandardTableGroup(org.hungrybadger.entity.Photo)] with identifierForTableGroup [org.hungrybadger.entity.Photo] for NavigablePath [org.hungrybadger.entity.Photo] 
[DEBUG] 2025-10-15 11:59:21.244 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@57a5b03] with identifierForTableGroup [org.hungrybadger.entity.Photo.review] for NavigablePath [org.hungrybadger.entity.Photo.review] 
[DEBUG] 2025-10-15 11:59:21.244 [main] create - Created new SQL alias : r1_0
[DEBUG] 2025-10-15 11:59:21.245 [main] AST - DomainResult Graph:
 \-EntityResultImpl [org.hungrybadger.entity.Photo]
 |  +-BasicFetch [org.hungrybadger.entity.Photo.imagePath]
 |  \-EntityFetchJoinedImpl [org.hungrybadger.entity.Photo.review]

[DEBUG] 2025-10-15 11:59:21.245 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.hungrybadger.entity.Photo) {
          primaryTableReference : photo as p1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.hungrybadger.entity.Photo.review) {
              primaryTableReference : review as r1_0
            }
          }
        }
      }
    }

[DEBUG] 2025-10-15 11:59:21.245 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2025-10-15 11:59:21.246 [main] results - Initializer list:
	  org.hungrybadger.entity.Photo.review -> EntityJoinedFetchInitializer(org.hungrybadger.entity.Photo.review)@30784348 (ToOneAttributeMapping(NavigableRole[org.hungrybadger.entity.Photo.review])@347419231)
	  org.hungrybadger.entity.Photo.review.photos -> SelectEagerCollectionInitializer(org.hungrybadger.entity.Photo.review.photos)@2017890623 (PluralAttribute(org.hungrybadger.entity.Review.photos))
	  org.hungrybadger.entity.Photo -> EntityResultInitializer(org.hungrybadger.entity.Photo)@1222272242 (SingleTableEntityPersister(org.hungrybadger.entity.Photo))

[DEBUG] 2025-10-15 11:59:21.247 [main] SQL - select p1_0.id,p1_0.image_path,p1_0.review_id,r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from photo p1_0 join review r1_0 on r1_0.id=p1_0.review_id where p1_0.id=?
[DEBUG] 2025-10-15 11:59:21.248 [main] results - Extracted JDBC value [3] - [1]
[DEBUG] 2025-10-15 11:59:21.248 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.hungrybadger.entity.Photo.review): 1
[DEBUG] 2025-10-15 11:59:21.248 [main] results - Extracted JDBC value [2] - [1]
[DEBUG] 2025-10-15 11:59:21.248 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Photo): 1
[DEBUG] 2025-10-15 11:59:21.248 [main] collection - (SelectEagerCollectionInitializer) Current row collection key : org.hungrybadger.entity.Photo.review.photos#1
[DEBUG] 2025-10-15 11:59:21.248 [main] entity - (EntityJoinedFetchInitializer) Created new entity instance [org.hungrybadger.entity.Photo.review#1] : 1266568468
[DEBUG] 2025-10-15 11:59:21.248 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Photo#1] : 1895373539
[DEBUG] 2025-10-15 11:59:21.248 [main] results - Extracted JDBC value [4] - [Japanese]
[DEBUG] 2025-10-15 11:59:21.248 [main] results - Extracted JDBC value [5] - [Good cheap rolls. Togo or sit down are both great]
[DEBUG] 2025-10-15 11:59:21.248 [main] results - Extracted JDBC value [6] - [5]
[DEBUG] 2025-10-15 11:59:21.248 [main] results - Extracted JDBC value [7] - [Sushi Express]
[DEBUG] 2025-10-15 11:59:21.248 [main] entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.hungrybadger.entity.Photo.review#1
[DEBUG] 2025-10-15 11:59:21.248 [main] results - Extracted JDBC value [1] - [images/sushi_express_rolls.jpg]
[DEBUG] 2025-10-15 11:59:21.248 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Photo#1
[DEBUG] 2025-10-15 11:59:21.248 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5c2a3f0c
[DEBUG] 2025-10-15 11:59:21.250 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2025-10-15 11:59:21.252 [main] results - Initializer list:
	  org.hungrybadger.entity.Review.photos.{element} -> EntityJoinedFetchInitializer(org.hungrybadger.entity.Review.photos.{element})@1937765828 (EntityCollectionPart(org.hungrybadger.entity.Review.photos#{element})@132753462)
	  org.hungrybadger.entity.Review.photos.{element}.review -> EntitySelectFetchInitializer(org.hungrybadger.entity.Review.photos.{element}.review)@307230285 (ToOneAttributeMapping(NavigableRole[org.hungrybadger.entity.Photo.review])@347419231)
	  org.hungrybadger.entity.Review.photos -> BagInitializer(org.hungrybadger.entity.Review.photos)@1974105859 (PluralAttribute(org.hungrybadger.entity.Review.photos))

[DEBUG] 2025-10-15 11:59:21.253 [main] SQL - select p1_0.review_id,p1_0.id,p1_0.image_path from photo p1_0 where p1_0.review_id=?
[DEBUG] 2025-10-15 11:59:21.254 [main] results - Extracted JDBC value [1] - [1]
[DEBUG] 2025-10-15 11:59:21.254 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review.photos.{element}): 1
[DEBUG] 2025-10-15 11:59:21.254 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2025-10-15 11:59:21.254 [main] collection - (BagInitializer) Current row collection key : org.hungrybadger.entity.Review.photos#1
[DEBUG] 2025-10-15 11:59:21.254 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2025-10-15 11:59:21.256 [main] collection - (BagInitializer) Responsible for loading collection [org.hungrybadger.entity.Review.photos#1] : org.hibernate.collection.spi.PersistentBag@1612554042
[DEBUG] 2025-10-15 11:59:21.256 [main] collection - (BagInitializer) Reading element from row for collection [org.hungrybadger.entity.Review.photos#1] -> org.hibernate.collection.spi.PersistentBag@1612554042
[DEBUG] 2025-10-15 11:59:21.256 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@63a72cc6
[DEBUG] 2025-10-15 11:59:21.257 [main] ResultsHelper - Collection fully initialized: [org.hungrybadger.entity.Review.photos#1]
[DEBUG] 2025-10-15 11:59:21.258 [main] TransactionImpl - committing
[DEBUG] 2025-10-15 11:59:21.258 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2025-10-15 11:59:21.261 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2025-10-15 11:59:21.263 [main] Collections - Collection found: [org.hungrybadger.entity.Review.photos#1], was: [org.hungrybadger.entity.Review.photos#1] (initialized)
[DEBUG] 2025-10-15 11:59:21.265 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 2 objects
[DEBUG] 2025-10-15 11:59:21.265 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2025-10-15 11:59:21.265 [main] EntityPrinter - Listing entities:
[DEBUG] 2025-10-15 11:59:21.265 [main] EntityPrinter - org.hungrybadger.entity.Photo{imagePath=/images/sushi_updated.jpg, review=org.hungrybadger.entity.Review#1, id=1}
[DEBUG] 2025-10-15 11:59:21.265 [main] EntityPrinter - org.hungrybadger.entity.Review{personalNotes=Good cheap rolls. Togo or sit down are both great, personalRating=5, restaurantName=Sushi Express, id=1, cuisineType=Japanese, photos=[org.hungrybadger.entity.Photo#1]}
[DEBUG] 2025-10-15 11:59:21.268 [main] SQL - update photo set image_path=?,review_id=? where id=?
[DEBUG] 2025-10-15 11:59:21.272 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 11:59:21.272 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 11:59:21.272 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2025-10-15 11:59:21.273 [main] results - Initializer list:
	  org.hungrybadger.entity.Photo.review -> EntityJoinedFetchInitializer(org.hungrybadger.entity.Photo.review)@271874232 (ToOneAttributeMapping(NavigableRole[org.hungrybadger.entity.Photo.review])@347419231)
	  org.hungrybadger.entity.Photo.review.photos -> DelayedCollectionInitializer(org.hungrybadger.entity.Photo.review.photos)@655326029 (PluralAttribute(org.hungrybadger.entity.Review.photos))
	  org.hungrybadger.entity.Photo -> EntityResultInitializer(org.hungrybadger.entity.Photo)@1454834922 (SingleTableEntityPersister(org.hungrybadger.entity.Photo))

[DEBUG] 2025-10-15 11:59:21.273 [main] SQL - select p1_0.id,p1_0.image_path,p1_0.review_id,r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from photo p1_0 join review r1_0 on r1_0.id=p1_0.review_id where p1_0.id=?
[DEBUG] 2025-10-15 11:59:21.274 [main] results - Extracted JDBC value [3] - [1]
[DEBUG] 2025-10-15 11:59:21.274 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.hungrybadger.entity.Photo.review): 1
[DEBUG] 2025-10-15 11:59:21.274 [main] results - Extracted JDBC value [2] - [1]
[DEBUG] 2025-10-15 11:59:21.274 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Photo): 1
[DEBUG] 2025-10-15 11:59:21.274 [main] results - Extracted JDBC value [3] - [1]
[DEBUG] 2025-10-15 11:59:21.274 [main] collection - (DelayedCollectionInitializer) Current row collection key : org.hungrybadger.entity.Photo.review.photos#1
[DEBUG] 2025-10-15 11:59:21.274 [main] entity - (EntityJoinedFetchInitializer) Created new entity instance [org.hungrybadger.entity.Photo.review#1] : 891052865
[DEBUG] 2025-10-15 11:59:21.274 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Photo#1] : 839291796
[DEBUG] 2025-10-15 11:59:21.274 [main] results - Extracted JDBC value [4] - [Japanese]
[DEBUG] 2025-10-15 11:59:21.274 [main] results - Extracted JDBC value [5] - [Good cheap rolls. Togo or sit down are both great]
[DEBUG] 2025-10-15 11:59:21.274 [main] results - Extracted JDBC value [6] - [5]
[DEBUG] 2025-10-15 11:59:21.274 [main] results - Extracted JDBC value [7] - [Sushi Express]
[DEBUG] 2025-10-15 11:59:21.274 [main] entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.hungrybadger.entity.Photo.review#1
[DEBUG] 2025-10-15 11:59:21.274 [main] results - Extracted JDBC value [1] - [/images/sushi_updated.jpg]
[DEBUG] 2025-10-15 11:59:21.274 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Photo#1
[DEBUG] 2025-10-15 11:59:21.274 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5dba3fdc
[DEBUG] 2025-10-15 11:59:21.274 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 11:59:21.373 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2025-10-15 11:59:21.373 [main] results - Initializer list:
	  org.hungrybadger.entity.Review.photos -> DelayedCollectionInitializer(org.hungrybadger.entity.Review.photos)@1325322464 (PluralAttribute(org.hungrybadger.entity.Review.photos))
	  org.hungrybadger.entity.Review -> EntityResultInitializer(org.hungrybadger.entity.Review)@1254157669 (SingleTableEntityPersister(org.hungrybadger.entity.Review))

[DEBUG] 2025-10-15 11:59:21.373 [main] SQL - select r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from review r1_0 where r1_0.id=?
[DEBUG] 2025-10-15 11:59:21.375 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review): 1
[DEBUG] 2025-10-15 11:59:21.375 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2025-10-15 11:59:21.375 [main] collection - (DelayedCollectionInitializer) Current row collection key : org.hungrybadger.entity.Review.photos#1
[DEBUG] 2025-10-15 11:59:21.375 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Review#1] : 219743801
[DEBUG] 2025-10-15 11:59:21.375 [main] results - Extracted JDBC value [1] - [Japanese]
[DEBUG] 2025-10-15 11:59:21.375 [main] results - Extracted JDBC value [2] - [Good cheap rolls. Togo or sit down are both great]
[DEBUG] 2025-10-15 11:59:21.375 [main] results - Extracted JDBC value [3] - [5]
[DEBUG] 2025-10-15 11:59:21.375 [main] results - Extracted JDBC value [4] - [Sushi Express]
[DEBUG] 2025-10-15 11:59:21.376 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Review#1
[DEBUG] 2025-10-15 11:59:21.376 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@515c732d
[DEBUG] 2025-10-15 11:59:21.376 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 11:59:21.377 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2025-10-15 11:59:21.377 [main] TransactionImpl - begin
[DEBUG] 2025-10-15 11:59:21.380 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2025-10-15 11:59:21.382 [main] SQL - insert into photo (image_path,review_id) values (?,?)
[DEBUG] 2025-10-15 11:59:21.388 [main] IdentifierGeneratorHelper - Natively generated identity (org.hungrybadger.entity.Photo) : 5
[DEBUG] 2025-10-15 11:59:21.388 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2025-10-15 11:59:21.390 [main] ResourceRegistryStandardImpl - Exception clearing maxRows/queryTimeout [You can't operate on a closed Statement!!!]
[DEBUG] 2025-10-15 11:59:21.392 [main] TransactionImpl - committing
[DEBUG] 2025-10-15 11:59:21.392 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2025-10-15 11:59:21.392 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2025-10-15 11:59:21.392 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2025-10-15 11:59:21.392 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2025-10-15 11:59:21.392 [main] EntityPrinter - Listing entities:
[DEBUG] 2025-10-15 11:59:21.392 [main] EntityPrinter - org.hungrybadger.entity.Photo{imagePath=/images/new_photo.jpg, review=org.hungrybadger.entity.Review#1, id=5}
[DEBUG] 2025-10-15 11:59:21.394 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 11:59:21.394 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 11:59:21.395 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2025-10-15 11:59:21.396 [main] results - Initializer list:
	  org.hungrybadger.entity.Photo.review -> EntityJoinedFetchInitializer(org.hungrybadger.entity.Photo.review)@1993471722 (ToOneAttributeMapping(NavigableRole[org.hungrybadger.entity.Photo.review])@347419231)
	  org.hungrybadger.entity.Photo.review.photos -> DelayedCollectionInitializer(org.hungrybadger.entity.Photo.review.photos)@1442749487 (PluralAttribute(org.hungrybadger.entity.Review.photos))
	  org.hungrybadger.entity.Photo -> EntityResultInitializer(org.hungrybadger.entity.Photo)@897585997 (SingleTableEntityPersister(org.hungrybadger.entity.Photo))

[DEBUG] 2025-10-15 11:59:21.396 [main] SQL - select p1_0.id,p1_0.image_path,p1_0.review_id,r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from photo p1_0 join review r1_0 on r1_0.id=p1_0.review_id where p1_0.id=?
[DEBUG] 2025-10-15 11:59:21.397 [main] results - Extracted JDBC value [3] - [1]
[DEBUG] 2025-10-15 11:59:21.397 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.hungrybadger.entity.Photo.review): 1
[DEBUG] 2025-10-15 11:59:21.397 [main] results - Extracted JDBC value [2] - [1]
[DEBUG] 2025-10-15 11:59:21.397 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Photo): 5
[DEBUG] 2025-10-15 11:59:21.397 [main] results - Extracted JDBC value [3] - [1]
[DEBUG] 2025-10-15 11:59:21.397 [main] collection - (DelayedCollectionInitializer) Current row collection key : org.hungrybadger.entity.Photo.review.photos#1
[DEBUG] 2025-10-15 11:59:21.397 [main] entity - (EntityJoinedFetchInitializer) Created new entity instance [org.hungrybadger.entity.Photo.review#1] : 924067193
[DEBUG] 2025-10-15 11:59:21.397 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Photo#5] : 642086628
[DEBUG] 2025-10-15 11:59:21.397 [main] results - Extracted JDBC value [4] - [Japanese]
[DEBUG] 2025-10-15 11:59:21.397 [main] results - Extracted JDBC value [5] - [Good cheap rolls. Togo or sit down are both great]
[DEBUG] 2025-10-15 11:59:21.397 [main] results - Extracted JDBC value [6] - [5]
[DEBUG] 2025-10-15 11:59:21.398 [main] results - Extracted JDBC value [7] - [Sushi Express]
[DEBUG] 2025-10-15 11:59:21.398 [main] entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.hungrybadger.entity.Photo.review#1
[DEBUG] 2025-10-15 11:59:21.398 [main] results - Extracted JDBC value [1] - [/images/new_photo.jpg]
[DEBUG] 2025-10-15 11:59:21.398 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Photo#5
[DEBUG] 2025-10-15 11:59:21.398 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5c13af01
[DEBUG] 2025-10-15 11:59:21.398 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 12:02:52.229 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2025-10-15 12:02:52.239 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2025-10-15 12:02:52.278 [main] Version - HHH000412: Hibernate ORM core version 6.4.3.Final
[DEBUG] 2025-10-15 12:02:52.281 [main] Environment - HHH000206: 'hibernate.properties' not found
[DEBUG] 2025-10-15 12:02:52.342 [main] LocalXmlResourceResolver - Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
[DEBUG] 2025-10-15 12:02:52.349 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2025-10-15 12:02:52.596 [main] factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2025-10-15 12:02:52.602 [main] factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2025-10-15 12:02:52.603 [main] factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2025-10-15 12:02:52.603 [main] factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2025-10-15 12:02:52.603 [main] factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2025-10-15 12:02:52.604 [main] factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2025-10-15 12:02:52.605 [main] factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2025-10-15 12:02:52.606 [main] factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2025-10-15 12:02:52.607 [main] factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2025-10-15 12:02:52.608 [main] factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2025-10-15 12:02:52.609 [main] factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2025-10-15 12:02:52.609 [main] factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2025-10-15 12:02:52.610 [main] factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2025-10-15 12:02:52.619 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[INFO ] 2025-10-15 12:02:52.620 [main] RegionFactoryInitiator - HHH000026: Second-level cache disabled
[DEBUG] 2025-10-15 12:02:52.749 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@19f7222e
[DEBUG] 2025-10-15 12:02:52.749 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@19f7222e
[DEBUG] 2025-10-15 12:02:52.749 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@19f7222e
[DEBUG] 2025-10-15 12:02:52.749 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3f725306
[DEBUG] 2025-10-15 12:02:52.749 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3f725306
[DEBUG] 2025-10-15 12:02:52.749 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3c69362a
[DEBUG] 2025-10-15 12:02:52.749 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3c69362a
[DEBUG] 2025-10-15 12:02:52.749 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@2412a42b
[DEBUG] 2025-10-15 12:02:52.749 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@2412a42b
[DEBUG] 2025-10-15 12:02:52.749 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@45404d5
[DEBUG] 2025-10-15 12:02:52.750 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@45404d5
[DEBUG] 2025-10-15 12:02:52.750 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@45404d5
[DEBUG] 2025-10-15 12:02:52.750 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@29138d3a
[DEBUG] 2025-10-15 12:02:52.750 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@29138d3a
[DEBUG] 2025-10-15 12:02:52.750 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@29138d3a
[DEBUG] 2025-10-15 12:02:52.750 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@5cbe2654
[DEBUG] 2025-10-15 12:02:52.750 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@5cbe2654
[DEBUG] 2025-10-15 12:02:52.750 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@6dbcf214
[DEBUG] 2025-10-15 12:02:52.750 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@496a31da
[DEBUG] 2025-10-15 12:02:52.750 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@496a31da
[DEBUG] 2025-10-15 12:02:52.750 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@7c251f90
[DEBUG] 2025-10-15 12:02:52.750 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@51841ac6
[DEBUG] 2025-10-15 12:02:52.751 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@5ba26eb0
[DEBUG] 2025-10-15 12:02:52.751 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@5ba26eb0
[DEBUG] 2025-10-15 12:02:52.751 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@5ba26eb0
[DEBUG] 2025-10-15 12:02:52.751 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@435e60ff
[DEBUG] 2025-10-15 12:02:52.751 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@435e60ff
[DEBUG] 2025-10-15 12:02:52.751 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@435e60ff
[DEBUG] 2025-10-15 12:02:52.751 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@17d32e9b
[DEBUG] 2025-10-15 12:02:52.751 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@17d32e9b
[DEBUG] 2025-10-15 12:02:52.751 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@17d32e9b
[DEBUG] 2025-10-15 12:02:52.751 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@66f0548d
[DEBUG] 2025-10-15 12:02:52.751 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@66f0548d
[DEBUG] 2025-10-15 12:02:52.751 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@66f0548d
[DEBUG] 2025-10-15 12:02:52.751 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@2e6f610d
[DEBUG] 2025-10-15 12:02:52.751 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@2e6f610d
[DEBUG] 2025-10-15 12:02:52.752 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@2e6f610d
[DEBUG] 2025-10-15 12:02:52.752 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@1e86a5a7
[DEBUG] 2025-10-15 12:02:52.752 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@1e86a5a7
[DEBUG] 2025-10-15 12:02:52.752 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@10afe71a
[DEBUG] 2025-10-15 12:02:52.752 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@10afe71a
[DEBUG] 2025-10-15 12:02:52.752 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@741f8dbe
[DEBUG] 2025-10-15 12:02:52.752 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@741f8dbe
[DEBUG] 2025-10-15 12:02:52.752 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@741f8dbe
[DEBUG] 2025-10-15 12:02:52.752 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@212dfd39
[DEBUG] 2025-10-15 12:02:52.752 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@a2ddf26
[DEBUG] 2025-10-15 12:02:52.752 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@a2ddf26
[DEBUG] 2025-10-15 12:02:52.752 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@65d57e4e
[DEBUG] 2025-10-15 12:02:52.753 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@6daf7d37
[DEBUG] 2025-10-15 12:02:52.753 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@6daf7d37
[DEBUG] 2025-10-15 12:02:52.753 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@6daf7d37
[DEBUG] 2025-10-15 12:02:52.753 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@23a5818e
[DEBUG] 2025-10-15 12:02:52.753 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@4715ae33
[DEBUG] 2025-10-15 12:02:52.753 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@9fc9f91
[DEBUG] 2025-10-15 12:02:52.753 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@1fac1d5c
[DEBUG] 2025-10-15 12:02:52.753 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@1fac1d5c
[DEBUG] 2025-10-15 12:02:52.753 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@108a46d6
[DEBUG] 2025-10-15 12:02:52.753 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@108a46d6
[DEBUG] 2025-10-15 12:02:52.753 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@7a8406c2
[DEBUG] 2025-10-15 12:02:52.753 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@17690e14
[DEBUG] 2025-10-15 12:02:52.753 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6850b758
[DEBUG] 2025-10-15 12:02:52.754 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@2a2ef072
[DEBUG] 2025-10-15 12:02:52.754 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@704641e3
[DEBUG] 2025-10-15 12:02:52.754 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@2f00f851
[DEBUG] 2025-10-15 12:02:52.754 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@4207609e
[DEBUG] 2025-10-15 12:02:52.754 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@4207609e
[DEBUG] 2025-10-15 12:02:52.754 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@1f77b5cc
[DEBUG] 2025-10-15 12:02:52.754 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@1f77b5cc
[DEBUG] 2025-10-15 12:02:52.754 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@5d7ca698
[DEBUG] 2025-10-15 12:02:52.754 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@5d7ca698
[DEBUG] 2025-10-15 12:02:52.754 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@75961f16
[DEBUG] 2025-10-15 12:02:52.754 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@75961f16
[DEBUG] 2025-10-15 12:02:52.754 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@c6c82aa
[DEBUG] 2025-10-15 12:02:52.754 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@c6c82aa
[DEBUG] 2025-10-15 12:02:52.755 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2e179f3e
[DEBUG] 2025-10-15 12:02:52.755 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@16e7b402
[DEBUG] 2025-10-15 12:02:52.755 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@534c6767
[DEBUG] 2025-10-15 12:02:52.755 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@534c6767
[DEBUG] 2025-10-15 12:02:52.755 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@3bddc676
[DEBUG] 2025-10-15 12:02:52.755 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@29a1505c
[DEBUG] 2025-10-15 12:02:52.755 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@24db6ce
[DEBUG] 2025-10-15 12:02:52.755 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@320a8ebf
[DEBUG] 2025-10-15 12:02:52.755 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@320a8ebf
[DEBUG] 2025-10-15 12:02:52.755 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@67b100fe
[DEBUG] 2025-10-15 12:02:52.755 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@44b18fe4
[DEBUG] 2025-10-15 12:02:52.755 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@2ba5aa7a
[DEBUG] 2025-10-15 12:02:52.755 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@2ba5aa7a
[DEBUG] 2025-10-15 12:02:52.755 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@4d3ca6c7
[DEBUG] 2025-10-15 12:02:52.756 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@4d3ca6c7
[DEBUG] 2025-10-15 12:02:52.756 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@22e5f96e
[DEBUG] 2025-10-15 12:02:52.756 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@22e5f96e
[DEBUG] 2025-10-15 12:02:52.756 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@22e5f96e
[DEBUG] 2025-10-15 12:02:52.756 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@6a638c79
[DEBUG] 2025-10-15 12:02:52.756 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@6a638c79
[DEBUG] 2025-10-15 12:02:52.756 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@6a638c79
[DEBUG] 2025-10-15 12:02:52.756 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@6c931d35
[DEBUG] 2025-10-15 12:02:52.756 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@44b194fe
[DEBUG] 2025-10-15 12:02:52.756 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@49122b8f
[DEBUG] 2025-10-15 12:02:52.756 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@49122b8f
[DEBUG] 2025-10-15 12:02:52.756 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@3fe46690
[DEBUG] 2025-10-15 12:02:52.756 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@3fe46690
[DEBUG] 2025-10-15 12:02:52.756 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@3fe46690
[DEBUG] 2025-10-15 12:02:52.757 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4beabeec
[DEBUG] 2025-10-15 12:02:52.757 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@3b4d50b
[DEBUG] 2025-10-15 12:02:52.757 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@5b22d8a1
[DEBUG] 2025-10-15 12:02:52.757 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@5b22d8a1
[DEBUG] 2025-10-15 12:02:52.757 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@476ee5b3
[DEBUG] 2025-10-15 12:02:52.757 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@476ee5b3
[DEBUG] 2025-10-15 12:02:52.757 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@476ee5b3
[DEBUG] 2025-10-15 12:02:52.757 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@59ed3e6c
[DEBUG] 2025-10-15 12:02:52.757 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@59ed3e6c
[DEBUG] 2025-10-15 12:02:52.757 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@7cd4a4d7
[DEBUG] 2025-10-15 12:02:52.757 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@7cd4a4d7
[DEBUG] 2025-10-15 12:02:52.757 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@317e9c3c
[DEBUG] 2025-10-15 12:02:52.757 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@317e9c3c
[DEBUG] 2025-10-15 12:02:52.758 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@18da4dd
[DEBUG] 2025-10-15 12:02:52.758 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@18da4dd
[DEBUG] 2025-10-15 12:02:52.758 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@31a3f4de
[DEBUG] 2025-10-15 12:02:52.758 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@31a3f4de
[DEBUG] 2025-10-15 12:02:52.758 [main] BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@68880c21
[DEBUG] 2025-10-15 12:02:52.758 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@2dd2e270
[DEBUG] 2025-10-15 12:02:52.764 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@35267fd4
[DEBUG] 2025-10-15 12:02:52.764 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@35267fd4
[DEBUG] 2025-10-15 12:02:52.765 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@4e08acf9
[DEBUG] 2025-10-15 12:02:52.766 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@42ea287
[DEBUG] 2025-10-15 12:02:52.766 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@78cd163b
[DEBUG] 2025-10-15 12:02:52.766 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@1f0b3cfe
[DEBUG] 2025-10-15 12:02:52.766 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@14ef2482
[DEBUG] 2025-10-15 12:02:52.766 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@65a48602
[DEBUG] 2025-10-15 12:02:52.766 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@75483843
[DEBUG] 2025-10-15 12:02:52.766 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@336206d8
[DEBUG] 2025-10-15 12:02:52.766 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@5ec4ff02
[INFO ] 2025-10-15 12:02:52.803 [main] c3p0 - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3307/hungryBadger_test
[INFO ] 2025-10-15 12:02:52.804 [main] c3p0 - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2025-10-15 12:02:52.804 [main] c3p0 - HHH10001003: Autocommit mode: false
[INFO ] 2025-10-15 12:02:52.913 [main] c3p0 - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2025-10-15 12:02:53.025 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 9.4.0
      major : 9
      minor : 4
[DEBUG] 2025-10-15 12:02:53.026 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2025-10-15 12:02:53.026 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[DEBUG] 2025-10-15 12:02:53.095 [main] dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 9.4
[DEBUG] 2025-10-15 12:02:53.105 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2025-10-15 12:02:53.106 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2025-10-15 12:02:53.125 [main] DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@17410c07) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6ee99964)
[DEBUG] 2025-10-15 12:02:53.125 [main] DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@257ef9ed) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@59c70ceb)
[DEBUG] 2025-10-15 12:02:53.125 [main] DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@46f902e0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@64f981e2)
[DEBUG] 2025-10-15 12:02:53.126 [main] DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@361abd01) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@575b5f7d)
[DEBUG] 2025-10-15 12:02:53.126 [main] DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@59bbb974) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7165d530)
[DEBUG] 2025-10-15 12:02:53.126 [main] DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@12f49ca8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1fd9893c)
[DEBUG] 2025-10-15 12:02:53.126 [main] DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1b2df3aa) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@44be69aa)
[DEBUG] 2025-10-15 12:02:53.126 [main] DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7219ac49) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@21da4b5f)
[DEBUG] 2025-10-15 12:02:53.126 [main] DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@551e4c6d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@625a9c5d)
[DEBUG] 2025-10-15 12:02:53.128 [main] JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2025-10-15 12:02:53.128 [main] JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2025-10-15 12:02:53.128 [main] JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2025-10-15 12:02:53.131 [main] JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2025-10-15 12:02:53.131 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2025-10-15 12:02:53.135 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@57c00115
[DEBUG] 2025-10-15 12:02:53.135 [main] BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@4e08acf9`
[DEBUG] 2025-10-15 12:02:53.143 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
[DEBUG] 2025-10-15 12:02:53.143 [main] BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2025-10-15 12:02:53.143 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2025-10-15 12:02:53.147 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2025-10-15 12:02:53.147 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2025-10-15 12:02:53.147 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2025-10-15 12:02:53.147 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2025-10-15 12:02:53.148 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2025-10-15 12:02:53.148 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2025-10-15 12:02:53.148 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2025-10-15 12:02:53.148 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2025-10-15 12:02:53.149 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2025-10-15 12:02:53.150 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7377781e] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@31db34da]
[DEBUG] 2025-10-15 12:02:53.204 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2025-10-15 12:02:53.236 [main] EntityBinder - Binding entity from annotated class: org.hungrybadger.entity.Review
[DEBUG] 2025-10-15 12:02:53.248 [main] EntityBinder - Import with entity name Review
[DEBUG] 2025-10-15 12:02:53.255 [main] EntityBinder - Bind entity org.hungrybadger.entity.Review on table review
[DEBUG] 2025-10-15 12:02:53.266 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2025-10-15 12:02:53.291 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2025-10-15 12:02:53.292 [main] ClassLoaderAccessImpl - Not known whether passed class name [org.hungrybadger.entity.Review] is safe
[DEBUG] 2025-10-15 12:02:53.292 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.hungrybadger.entity.Review
[DEBUG] 2025-10-15 12:02:53.295 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2025-10-15 12:02:53.301 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.hungrybadger.entity.Review:id]
[DEBUG] 2025-10-15 12:02:53.306 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2025-10-15 12:02:53.310 [main] BasicValue - Skipping column re-registration: review.id
[DEBUG] 2025-10-15 12:02:53.311 [main] PropertyBinder - Building property id
[DEBUG] 2025-10-15 12:02:53.316 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2025-10-15 12:02:53.321 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='cuisine_type')
[DEBUG] 2025-10-15 12:02:53.321 [main] PropertyBinder - MetadataSourceProcessor property cuisineType with lazy=false
[DEBUG] 2025-10-15 12:02:53.321 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.hungrybadger.entity.Review:cuisineType]
[DEBUG] 2025-10-15 12:02:53.321 [main] BasicValueBinder - building BasicValue for cuisineType
[DEBUG] 2025-10-15 12:02:53.321 [main] BasicValue - Skipping column re-registration: review.cuisine_type
[DEBUG] 2025-10-15 12:02:53.321 [main] PropertyBinder - Building property cuisineType
[DEBUG] 2025-10-15 12:02:53.322 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='personal_notes')
[DEBUG] 2025-10-15 12:02:53.322 [main] PropertyBinder - MetadataSourceProcessor property personalNotes with lazy=false
[DEBUG] 2025-10-15 12:02:53.322 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.hungrybadger.entity.Review:personalNotes]
[DEBUG] 2025-10-15 12:02:53.322 [main] BasicValueBinder - building BasicValue for personalNotes
[DEBUG] 2025-10-15 12:02:53.322 [main] BasicValue - Skipping column re-registration: review.personal_notes
[DEBUG] 2025-10-15 12:02:53.322 [main] PropertyBinder - Building property personalNotes
[DEBUG] 2025-10-15 12:02:53.323 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='personal_rating')
[DEBUG] 2025-10-15 12:02:53.323 [main] PropertyBinder - MetadataSourceProcessor property personalRating with lazy=false
[DEBUG] 2025-10-15 12:02:53.323 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.hungrybadger.entity.Review:personalRating]
[DEBUG] 2025-10-15 12:02:53.323 [main] BasicValueBinder - building BasicValue for personalRating
[DEBUG] 2025-10-15 12:02:53.323 [main] BasicValue - Skipping column re-registration: review.personal_rating
[DEBUG] 2025-10-15 12:02:53.323 [main] PropertyBinder - Building property personalRating
[DEBUG] 2025-10-15 12:02:53.325 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2025-10-15 12:02:53.325 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2025-10-15 12:02:53.339 [main] AnnotatedColumn - Binding column: IndexColumn(column='photos_ORDER')
[DEBUG] 2025-10-15 12:02:53.342 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2025-10-15 12:02:53.342 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='photos_KEY')
[DEBUG] 2025-10-15 12:02:53.343 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='photos_KEY')
[DEBUG] 2025-10-15 12:02:53.345 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2025-10-15 12:02:53.345 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn()
[DEBUG] 2025-10-15 12:02:53.347 [main] CollectionBinder - Collection role: org.hungrybadger.entity.Review.photos
[DEBUG] 2025-10-15 12:02:53.350 [main] PropertyBinder - Building property photos
[DEBUG] 2025-10-15 12:02:53.350 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='restaurant_name')
[DEBUG] 2025-10-15 12:02:53.350 [main] PropertyBinder - MetadataSourceProcessor property restaurantName with lazy=false
[DEBUG] 2025-10-15 12:02:53.351 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.hungrybadger.entity.Review:restaurantName]
[DEBUG] 2025-10-15 12:02:53.351 [main] BasicValueBinder - building BasicValue for restaurantName
[DEBUG] 2025-10-15 12:02:53.351 [main] BasicValue - Skipping column re-registration: review.restaurant_name
[DEBUG] 2025-10-15 12:02:53.351 [main] PropertyBinder - Building property restaurantName
[DEBUG] 2025-10-15 12:02:53.352 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: org.hungrybadger.entity
[DEBUG] 2025-10-15 12:02:53.358 [main] EntityBinder - Binding entity from annotated class: org.hungrybadger.entity.Photo
[DEBUG] 2025-10-15 12:02:53.358 [main] EntityBinder - Import with entity name Photo
[DEBUG] 2025-10-15 12:02:53.358 [main] EntityBinder - Bind entity org.hungrybadger.entity.Photo on table photo
[DEBUG] 2025-10-15 12:02:53.358 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2025-10-15 12:02:53.362 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2025-10-15 12:02:53.362 [main] ClassLoaderAccessImpl - Not known whether passed class name [org.hungrybadger.entity.Photo] is safe
[DEBUG] 2025-10-15 12:02:53.362 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.hungrybadger.entity.Photo
[DEBUG] 2025-10-15 12:02:53.362 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2025-10-15 12:02:53.362 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.hungrybadger.entity.Photo:id]
[DEBUG] 2025-10-15 12:02:53.362 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2025-10-15 12:02:53.362 [main] BasicValue - Skipping column re-registration: photo.id
[DEBUG] 2025-10-15 12:02:53.362 [main] PropertyBinder - Building property id
[DEBUG] 2025-10-15 12:02:53.363 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2025-10-15 12:02:53.363 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='image_path')
[DEBUG] 2025-10-15 12:02:53.363 [main] PropertyBinder - MetadataSourceProcessor property imagePath with lazy=false
[DEBUG] 2025-10-15 12:02:53.363 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.hungrybadger.entity.Photo:imagePath]
[DEBUG] 2025-10-15 12:02:53.363 [main] BasicValueBinder - building BasicValue for imagePath
[DEBUG] 2025-10-15 12:02:53.363 [main] BasicValue - Skipping column re-registration: photo.image_path
[DEBUG] 2025-10-15 12:02:53.363 [main] PropertyBinder - Building property imagePath
[DEBUG] 2025-10-15 12:02:53.364 [main] AnnotatedColumn - Binding column: AnnotatedJoinColumn(column='review_id')
[DEBUG] 2025-10-15 12:02:53.364 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2025-10-15 12:02:53.367 [main] PropertyBinder - Building property review
[DEBUG] 2025-10-15 12:02:53.368 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: org.hungrybadger.entity
[DEBUG] 2025-10-15 12:02:53.369 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2025-10-15 12:02:53.369 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for cuisineType
[DEBUG] 2025-10-15 12:02:53.371 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for personalNotes
[DEBUG] 2025-10-15 12:02:53.371 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for personalRating
[DEBUG] 2025-10-15 12:02:53.371 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for restaurantName
[DEBUG] 2025-10-15 12:02:53.371 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2025-10-15 12:02:53.371 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for imagePath
[DEBUG] 2025-10-15 12:02:53.377 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [review]
[DEBUG] 2025-10-15 12:02:53.377 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [photo]
[DEBUG] 2025-10-15 12:02:53.377 [main] CollectionSecondPass - Second pass for collection: org.hungrybadger.entity.Review.photos
[DEBUG] 2025-10-15 12:02:53.379 [main] CollectionBinder - Binding a OneToMany: org.hungrybadger.entity.Review.photos through a foreign key
[DEBUG] 2025-10-15 12:02:53.381 [main] CollectionBinder - Mapping collection: org.hungrybadger.entity.Review.photos -> photo
[DEBUG] 2025-10-15 12:02:53.382 [main] TableBinder - Retrieving property org.hungrybadger.entity.Photo.review
[DEBUG] 2025-10-15 12:02:53.382 [main] CollectionSecondPass - Mapped collection key: review_id, one-to-many: org.hungrybadger.entity.Photo
[DEBUG] 2025-10-15 12:02:53.383 [main] InFlightMetadataCollectorImpl - Resolving reference to class: org.hungrybadger.entity.Review
[DEBUG] 2025-10-15 12:02:53.397 [main] InFlightMetadataCollectorImpl - Resolving reference to class: org.hungrybadger.entity.Review
[DEBUG] 2025-10-15 12:02:53.604 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2025-10-15 12:02:53.660 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2025-10-15 12:02:53.660 [main] SessionFactoryImpl - Instantiating SessionFactory with settings: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=11, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, java.class.path=C:\Program Files\JetBrains\IntelliJ IDEA 2025.2.1\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2025.2.1\plugins\junit\lib\junit5-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2025.2.1\plugins\junit\lib\junit-rt.jar;C:\Users\mamcc\IdeaProjects\PersonalFoodReviewer\target\test-classes;C:\Users\mamcc\IdeaProjects\PersonalFoodReviewer\target\classes;C:\Users\mamcc\.m2\repository\org\hibernate\orm\hibernate-core\6.4.3.Final\hibernate-core-6.4.3.Final.jar;C:\Users\mamcc\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\mamcc\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\mamcc\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\mamcc\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\mamcc\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\mamcc\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\mamcc\.m2\repository\net\bytebuddy\byte-buddy\1.14.7\byte-buddy-1.14.7.jar;C:\Users\mamcc\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\mamcc\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\mamcc\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\mamcc\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\mamcc\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\mamcc\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\mamcc\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\mamcc\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\mamcc\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\mamcc\.m2\repository\org\hibernate\orm\hibernate-c3p0\6.4.3.Final\hibernate-c3p0-6.4.3.Final.jar;C:\Users\mamcc\.m2\repository\com\mchange\c3p0\0.9.5.5\c3p0-0.9.5.5.jar;C:\Users\mamcc\.m2\repository\com\mchange\mchange-commons-java\0.2.19\mchange-commons-java-0.2.19.jar;C:\Users\mamcc\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\mamcc\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\mamcc\.m2\repository\javax\javaee-web-api\7.0\javaee-web-api-7.0.jar;C:\Users\mamcc\.m2\repository\mysql\mysql-connector-java\8.0.16\mysql-connector-java-8.0.16.jar;C:\Users\mamcc\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\mamcc\.m2\repository\org\apache\logging\log4j\log4j-api\2.17.1\log4j-api-2.17.1.jar;C:\Users\mamcc\.m2\repository\org\apache\logging\log4j\log4j-core\2.17.1\log4j-core-2.17.1.jar;C:\Users\mamcc\.m2\repository\jstl\jstl\1.2\jstl-1.2.jar;C:\Users\mamcc\.m2\repository\org\junit\platform\junit-platform-runner\1.0.0\junit-platform-runner-1.0.0.jar;C:\Users\mamcc\.m2\repository\org\apiguardian\apiguardian-api\1.0.0\apiguardian-api-1.0.0.jar;C:\Users\mamcc\.m2\repository\org\junit\platform\junit-platform-launcher\1.0.0\junit-platform-launcher-1.0.0.jar;C:\Users\mamcc\.m2\repository\org\junit\platform\junit-platform-suite-api\1.0.0\junit-platform-suite-api-1.0.0.jar;C:\Users\mamcc\.m2\repository\org\junit\platform\junit-platform-commons\1.0.0\junit-platform-commons-1.0.0.jar;C:\Users\mamcc\.m2\repository\org\junit\vintage\junit-vintage-engine\4.12.0\junit-vintage-engine-4.12.0.jar;C:\Users\mamcc\.m2\repository\org\junit\platform\junit-platform-engine\1.0.0\junit-platform-engine-1.0.0.jar;C:\Users\mamcc\.m2\repository\org\opentest4j\opentest4j\1.0.0\opentest4j-1.0.0.jar;C:\Users\mamcc\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.0.0\junit-jupiter-engine-5.0.0.jar;C:\Users\mamcc\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.0.0\junit-jupiter-api-5.0.0.jar, kotlinx.coroutines.debug.enable.mutable.state.flows.stack.trace=true, java.vm.vendor=Eclipse Adoptium, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=https://adoptium.net/, user.timezone=America/Chicago, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Eclipse Adoptium\jdk-11.0.28.6-hotspot\bin, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 org.hungrybadger.persistence.PhotoDaoTest, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\mamcc, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2025-07-15, java.home=C:\Program Files\Eclipse Adoptium\jdk-11.0.28.6-hotspot, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, intellij.debug.agent=true, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, user.script=, connection.password=Marthacodes, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=11.0.28+6, user.name=Test, path.separator=;, kotlinx.coroutines.debug.enable.creation.stack.trace=false, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3307/hungryBadger_test, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, java.vendor.version=Temurin-11.0.28+6, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=C:\Users\mamcc\AppData\Local\Temp\, java.version=11.0.28, jboss.modules.system.pkgs=com.intellij.rt, user.dir=C:\Users\mamcc\IdeaProjects\PersonalFoodReviewer, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@75882261, kotlinx.coroutines.debug.enable.flows.stack.trace=true, java.library.path=C:\Program Files\Eclipse Adoptium\jdk-11.0.28.6-hotspot\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Microsoft\jdk-21.0.2.13-hotspot\bin;C:\Program Files\Eclipse Adoptium\jdk-11.0.28.6-hotspot\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\dotnet\;C:\Program Files\Amazon\AWSCLIV2\;C:\Program Files\nodejs\;C:\Program Files\MySQL\MySQL Server 9.0\bin;C:\Program Files\NVIDIA Corporation\NVIDIA app\NvDLISR;C:\Program Files\Git\cmd;C:\Users\mamcc\AppData\Local\Microsoft\WindowsApps;;C:\Users\mamcc\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\mamcc\AppData\Roaming\npm;., java.vendor=Eclipse Adoptium, java.vm.info=mixed mode, java.vm.version=11.0.28+6, java.specification.maintenance.version=3, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3307/hungryBadger_test, debugger.agent.enable.coroutines=true, java.class.version=55.0}
[DEBUG] 2025-10-15 12:02:53.665 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2025-10-15 12:02:53.673 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2025-10-15 12:02:53.724 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2025-10-15 12:02:53.724 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2025-10-15 12:02:53.725 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2025-10-15 12:02:53.726 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2025-10-15 12:02:53.728 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@29c53c4f] under count; prior registration was null
[DEBUG] 2025-10-15 12:02:53.729 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@4f2ac7e0] under every; prior registration was null
[DEBUG] 2025-10-15 12:02:53.729 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@2484dbb7] under any; prior registration was null
[DEBUG] 2025-10-15 12:02:53.729 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2025-10-15 12:02:53.730 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2025-10-15 12:02:53.730 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2025-10-15 12:02:53.730 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2025-10-15 12:02:53.730 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2025-10-15 12:02:53.730 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2025-10-15 12:02:53.730 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2025-10-15 12:02:53.730 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2025-10-15 12:02:53.730 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2025-10-15 12:02:53.730 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2025-10-15 12:02:53.731 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2025-10-15 12:02:53.731 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2025-10-15 12:02:53.731 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2025-10-15 12:02:53.731 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2025-10-15 12:02:53.731 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2025-10-15 12:02:53.731 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2025-10-15 12:02:53.731 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2025-10-15 12:02:53.733 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2e952845] under sinh; prior registration was null
[DEBUG] 2025-10-15 12:02:53.733 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@79252c83] under cosh; prior registration was null
[DEBUG] 2025-10-15 12:02:53.733 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6fbf5db2] under tanh; prior registration was null
[DEBUG] 2025-10-15 12:02:53.733 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@509a6095] under pi; prior registration was null
[DEBUG] 2025-10-15 12:02:53.733 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@57cabdc3] under log; prior registration was null
[DEBUG] 2025-10-15 12:02:53.734 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2025-10-15 12:02:53.734 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2025-10-15 12:02:53.734 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2025-10-15 12:02:53.734 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2025-10-15 12:02:53.734 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2025-10-15 12:02:53.735 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2025-10-15 12:02:53.735 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2025-10-15 12:02:53.735 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2025-10-15 12:02:53.735 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2025-10-15 12:02:53.735 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2025-10-15 12:02:53.735 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2025-10-15 12:02:53.735 [main] SqmFunctionRegistry - Registering alternate key : length -> character_length
[DEBUG] 2025-10-15 12:02:53.736 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@5faeeb56] under position; prior registration was null
[DEBUG] 2025-10-15 12:02:53.738 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@37d3e140] under overlay; prior registration was null
[DEBUG] 2025-10-15 12:02:53.739 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@a3cba3a] under trim; prior registration was null
[DEBUG] 2025-10-15 12:02:53.740 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@6169be09] under cast; prior registration was null
[DEBUG] 2025-10-15 12:02:53.740 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5e3db14] under collate; prior registration was null
[DEBUG] 2025-10-15 12:02:53.741 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@5c448ef] under extract; prior registration was null
[DEBUG] 2025-10-15 12:02:53.741 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2025-10-15 12:02:53.741 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2025-10-15 12:02:53.741 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@50e5032c] under ifnull; prior registration was null
[DEBUG] 2025-10-15 12:02:53.742 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2025-10-15 12:02:53.742 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2025-10-15 12:02:53.742 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@10817f46] under pad; prior registration was null
[DEBUG] 2025-10-15 12:02:53.743 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@16681017] under str; prior registration was null
[DEBUG] 2025-10-15 12:02:53.745 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@3a40bb52] under format; prior registration was null
[DEBUG] 2025-10-15 12:02:53.745 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@284990de] under timestampadd; prior registration was null
[DEBUG] 2025-10-15 12:02:53.746 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@377dfb8d] under timestampdiff; prior registration was null
[DEBUG] 2025-10-15 12:02:53.747 [main] SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
[DEBUG] 2025-10-15 12:02:53.747 [main] SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
[DEBUG] 2025-10-15 12:02:53.747 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@78c74647] under current_date; prior registration was null
[DEBUG] 2025-10-15 12:02:53.747 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@39652a30] under current_time; prior registration was null
[DEBUG] 2025-10-15 12:02:53.747 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5763a655] under current_timestamp; prior registration was null
[DEBUG] 2025-10-15 12:02:53.747 [main] SqmFunctionRegistry - Registering alternate key : current date -> current_date
[DEBUG] 2025-10-15 12:02:53.747 [main] SqmFunctionRegistry - Registering alternate key : current time -> current_time
[DEBUG] 2025-10-15 12:02:53.747 [main] SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2025-10-15 12:02:53.747 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@40c8067] under local_date; prior registration was null
[DEBUG] 2025-10-15 12:02:53.747 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@46bb0bdf] under local_time; prior registration was null
[DEBUG] 2025-10-15 12:02:53.748 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@561f9d92] under local_datetime; prior registration was null
[DEBUG] 2025-10-15 12:02:53.748 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1c84d80a] under offset_datetime; prior registration was null
[DEBUG] 2025-10-15 12:02:53.748 [main] SqmFunctionRegistry - Registering alternate key : local date -> local_date
[DEBUG] 2025-10-15 12:02:53.748 [main] SqmFunctionRegistry - Registering alternate key : local time -> local_time
[DEBUG] 2025-10-15 12:02:53.748 [main] SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
[DEBUG] 2025-10-15 12:02:53.748 [main] SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2025-10-15 12:02:53.748 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7ceb6c45] under instant; prior registration was null
[DEBUG] 2025-10-15 12:02:53.748 [main] SqmFunctionRegistry - Registering alternate key : current_instant -> instant
[DEBUG] 2025-10-15 12:02:53.749 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@559991f5] under sql; prior registration was null
[DEBUG] 2025-10-15 12:02:53.749 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2025-10-15 12:02:53.749 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2025-10-15 12:02:53.749 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2025-10-15 12:02:53.749 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2025-10-15 12:02:53.749 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@57cabdc3
[DEBUG] 2025-10-15 12:02:53.749 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
[DEBUG] 2025-10-15 12:02:53.749 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2025-10-15 12:02:53.749 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2025-10-15 12:02:53.749 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2025-10-15 12:02:53.749 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2025-10-15 12:02:53.749 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
[DEBUG] 2025-10-15 12:02:53.749 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2025-10-15 12:02:53.749 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2025-10-15 12:02:53.750 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@61d60e38] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
[DEBUG] 2025-10-15 12:02:53.750 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@6e95973c] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
[DEBUG] 2025-10-15 12:02:53.750 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
[DEBUG] 2025-10-15 12:02:53.750 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2025-10-15 12:02:53.750 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2025-10-15 12:02:53.751 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2025-10-15 12:02:53.751 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2025-10-15 12:02:53.751 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2025-10-15 12:02:53.751 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2025-10-15 12:02:53.751 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2025-10-15 12:02:53.751 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
[DEBUG] 2025-10-15 12:02:53.751 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
[DEBUG] 2025-10-15 12:02:53.751 [main] SqmFunctionRegistry - Registering alternate key : day -> dayofmonth
[DEBUG] 2025-10-15 12:02:53.751 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
[DEBUG] 2025-10-15 12:02:53.751 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2025-10-15 12:02:53.751 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2025-10-15 12:02:53.751 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2025-10-15 12:02:53.751 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2025-10-15 12:02:53.751 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
[DEBUG] 2025-10-15 12:02:53.751 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
[DEBUG] 2025-10-15 12:02:53.752 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
[DEBUG] 2025-10-15 12:02:53.752 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
[DEBUG] 2025-10-15 12:02:53.752 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
[DEBUG] 2025-10-15 12:02:53.752 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
[DEBUG] 2025-10-15 12:02:53.752 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
[DEBUG] 2025-10-15 12:02:53.752 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2025-10-15 12:02:53.752 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
[DEBUG] 2025-10-15 12:02:53.752 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
[DEBUG] 2025-10-15 12:02:53.752 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
[DEBUG] 2025-10-15 12:02:53.752 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
[DEBUG] 2025-10-15 12:02:53.752 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2025-10-15 12:02:53.752 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2025-10-15 12:02:53.752 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2025-10-15 12:02:53.753 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2025-10-15 12:02:53.753 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2025-10-15 12:02:53.753 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@404ced67] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@5faeeb56
[DEBUG] 2025-10-15 12:02:53.753 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2025-10-15 12:02:53.753 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2025-10-15 12:02:53.753 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2025-10-15 12:02:53.758 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@527937d0] under trunc; prior registration was null
[DEBUG] 2025-10-15 12:02:53.758 [main] SqmFunctionRegistry - Registering alternate key : truncate -> trunc
[DEBUG] 2025-10-15 12:02:53.758 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2025-10-15 12:02:53.758 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@36d582cb] under bitand; prior registration was null
[DEBUG] 2025-10-15 12:02:53.758 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6c2a95d5] under bitor; prior registration was null
[DEBUG] 2025-10-15 12:02:53.758 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@24d8f87a] under bitxor; prior registration was null
[DEBUG] 2025-10-15 12:02:53.758 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3f048c86] under bitnot; prior registration was null
[DEBUG] 2025-10-15 12:02:53.758 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2025-10-15 12:02:53.758 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2025-10-15 12:02:53.758 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
[DEBUG] 2025-10-15 12:02:53.758 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2025-10-15 12:02:53.759 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2025-10-15 12:02:53.759 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
[DEBUG] 2025-10-15 12:02:53.759 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2025-10-15 12:02:53.759 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2025-10-15 12:02:53.759 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
[DEBUG] 2025-10-15 12:02:53.759 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
[DEBUG] 2025-10-15 12:02:53.759 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
[DEBUG] 2025-10-15 12:02:53.759 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
[DEBUG] 2025-10-15 12:02:53.759 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
[DEBUG] 2025-10-15 12:02:53.759 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@255d9277] under format; prior registration was org.hibernate.dialect.function.FormatFunction@3a40bb52
[DEBUG] 2025-10-15 12:02:53.759 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
[DEBUG] 2025-10-15 12:02:53.759 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
[DEBUG] 2025-10-15 12:02:53.759 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2025-10-15 12:02:53.759 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2025-10-15 12:02:53.759 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@46bb0bdf
[DEBUG] 2025-10-15 12:02:53.759 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@561f9d92
[DEBUG] 2025-10-15 12:02:53.759 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
[DEBUG] 2025-10-15 12:02:53.760 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1de13f34] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@509a6095
[DEBUG] 2025-10-15 12:02:53.760 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7e191fda] under chr; prior registration was null
[DEBUG] 2025-10-15 12:02:53.760 [main] SqmFunctionRegistry - Registering alternate key : char -> chr
[DEBUG] 2025-10-15 12:02:53.760 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6562cc23] under sysdate; prior registration was null
[DEBUG] 2025-10-15 12:02:53.760 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2025-10-15 12:02:53.760 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2025-10-15 12:02:53.760 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2025-10-15 12:02:53.760 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2025-10-15 12:02:53.760 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2025-10-15 12:02:53.761 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2025-10-15 12:02:53.762 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@53ea380b] under rank; prior registration was null
[DEBUG] 2025-10-15 12:02:53.762 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@578c3fd9] under dense_rank; prior registration was null
[DEBUG] 2025-10-15 12:02:53.762 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@245cb8df] under percent_rank; prior registration was null
[DEBUG] 2025-10-15 12:02:53.762 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@26b3c9a2] under cume_dist; prior registration was null
[DEBUG] 2025-10-15 12:02:53.763 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@6b42e36d] under listagg; prior registration was null
[DEBUG] 2025-10-15 12:02:53.767 [main] HQL_FUNCTIONS - abs(NUMERIC arg)
[DEBUG] 2025-10-15 12:02:53.767 [main] HQL_FUNCTIONS - Double acos(NUMERIC arg)
[DEBUG] 2025-10-15 12:02:53.767 [main] HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days)
[DEBUG] 2025-10-15 12:02:53.767 [main] HQL_FUNCTIONS - addtime(TIME datetime, TIME time)
[DEBUG] 2025-10-15 12:02:53.768 [main] HQL_FUNCTIONS - Boolean any(BOOLEAN arg)
[DEBUG] 2025-10-15 12:02:53.768 [main] HQL_FUNCTIONS - Integer ascii(STRING arg)
[DEBUG] 2025-10-15 12:02:53.768 [main] HQL_FUNCTIONS - Double asin(NUMERIC arg)
[DEBUG] 2025-10-15 12:02:53.768 [main] HQL_FUNCTIONS - Double atan(NUMERIC arg)
[DEBUG] 2025-10-15 12:02:53.768 [main] HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2025-10-15 12:02:53.768 [main] HQL_FUNCTIONS - avg(arg)
[DEBUG] 2025-10-15 12:02:53.768 [main] HQL_FUNCTIONS - bit_and(arg)
[DEBUG] 2025-10-15 12:02:53.768 [main] HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2025-10-15 12:02:53.768 [main] HQL_FUNCTIONS - bit_or(arg)
[DEBUG] 2025-10-15 12:02:53.768 [main] HQL_FUNCTIONS - bitand(arg0, arg1)
[DEBUG] 2025-10-15 12:02:53.768 [main] HQL_FUNCTIONS - bitnot(arg)
[DEBUG] 2025-10-15 12:02:53.768 [main] HQL_FUNCTIONS - bitor(arg0, arg1)
[DEBUG] 2025-10-15 12:02:53.768 [main] HQL_FUNCTIONS - bitxor(arg0, arg1)
[DEBUG] 2025-10-15 12:02:53.768 [main] HQL_FUNCTIONS - cast(arg as Type)
[DEBUG] 2025-10-15 12:02:53.768 [main] HQL_FUNCTIONS - ceiling(NUMERIC arg)
[DEBUG] 2025-10-15 12:02:53.768 [main] HQL_FUNCTIONS - Character char(INTEGER arg)
[DEBUG] 2025-10-15 12:02:53.768 [main] HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2025-10-15 12:02:53.768 [main] HQL_FUNCTIONS - Character chr(INTEGER arg)
[DEBUG] 2025-10-15 12:02:53.768 [main] HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
[DEBUG] 2025-10-15 12:02:53.768 [main] HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
[DEBUG] 2025-10-15 12:02:53.768 [main] HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2025-10-15 12:02:53.768 [main] HQL_FUNCTIONS - Double cos(NUMERIC arg)
[DEBUG] 2025-10-15 12:02:53.768 [main] HQL_FUNCTIONS - Double cosh(NUMERIC arg)
[DEBUG] 2025-10-15 12:02:53.768 [main] HQL_FUNCTIONS - Double cot(NUMERIC arg)
[DEBUG] 2025-10-15 12:02:53.768 [main] HQL_FUNCTIONS - Long count([distinct ]{arg|*})
[DEBUG] 2025-10-15 12:02:53.769 [main] HQL_FUNCTIONS - Integer crc32(arg)
[DEBUG] 2025-10-15 12:02:53.769 [main] HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
[DEBUG] 2025-10-15 12:02:53.769 [main] HQL_FUNCTIONS - Date curdate()
[DEBUG] 2025-10-15 12:02:53.769 [main] HQL_FUNCTIONS - Date current date
[DEBUG] 2025-10-15 12:02:53.769 [main] HQL_FUNCTIONS - Time current time
[DEBUG] 2025-10-15 12:02:53.769 [main] HQL_FUNCTIONS - Timestamp current timestamp
[DEBUG] 2025-10-15 12:02:53.769 [main] HQL_FUNCTIONS - Date current_date
[DEBUG] 2025-10-15 12:02:53.769 [main] HQL_FUNCTIONS - Instant current_instant
[DEBUG] 2025-10-15 12:02:53.769 [main] HQL_FUNCTIONS - Time current_time
[DEBUG] 2025-10-15 12:02:53.769 [main] HQL_FUNCTIONS - Timestamp current_timestamp
[DEBUG] 2025-10-15 12:02:53.769 [main] HQL_FUNCTIONS - Time curtime()
[DEBUG] 2025-10-15 12:02:53.769 [main] HQL_FUNCTIONS - Date date(arg)
[DEBUG] 2025-10-15 12:02:53.769 [main] HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2025-10-15 12:02:53.769 [main] HQL_FUNCTIONS - Integer datediff(DATE end, DATE start)
[DEBUG] 2025-10-15 12:02:53.769 [main] HQL_FUNCTIONS - Integer day(DATE arg)
[DEBUG] 2025-10-15 12:02:53.769 [main] HQL_FUNCTIONS - String dayname(DATE arg)
[DEBUG] 2025-10-15 12:02:53.769 [main] HQL_FUNCTIONS - Integer dayofmonth(DATE arg)
[DEBUG] 2025-10-15 12:02:53.769 [main] HQL_FUNCTIONS - Integer dayofweek(DATE arg)
[DEBUG] 2025-10-15 12:02:53.769 [main] HQL_FUNCTIONS - Integer dayofyear(DATE arg)
[DEBUG] 2025-10-15 12:02:53.769 [main] HQL_FUNCTIONS - Double degrees(NUMERIC arg)
[DEBUG] 2025-10-15 12:02:53.769 [main] HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
[DEBUG] 2025-10-15 12:02:53.769 [main] HQL_FUNCTIONS - Boolean every(BOOLEAN arg)
[DEBUG] 2025-10-15 12:02:53.769 [main] HQL_FUNCTIONS - Double exp(NUMERIC arg)
[DEBUG] 2025-10-15 12:02:53.769 [main] HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2025-10-15 12:02:53.770 [main] HQL_FUNCTIONS - first_valueANY value
[DEBUG] 2025-10-15 12:02:53.770 [main] HQL_FUNCTIONS - floor(NUMERIC arg)
[DEBUG] 2025-10-15 12:02:53.770 [main] HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2025-10-15 12:02:53.770 [main] HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2025-10-15 12:02:53.770 [main] HQL_FUNCTIONS - Integer hour(TIME arg)
[DEBUG] 2025-10-15 12:02:53.770 [main] HQL_FUNCTIONS - ifnull(arg0, arg1)
[DEBUG] 2025-10-15 12:02:53.770 [main] HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2025-10-15 12:02:53.770 [main] HQL_FUNCTIONS - Instant instant
[DEBUG] 2025-10-15 12:02:53.770 [main] HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2025-10-15 12:02:53.770 [main] HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2025-10-15 12:02:53.770 [main] HQL_FUNCTIONS - Date last_day(DATE arg)
[DEBUG] 2025-10-15 12:02:53.770 [main] HQL_FUNCTIONS - last_valueANY value
[DEBUG] 2025-10-15 12:02:53.770 [main] HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2025-10-15 12:02:53.770 [main] HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2025-10-15 12:02:53.770 [main] HQL_FUNCTIONS - String left(STRING string, INTEGER length)
[DEBUG] 2025-10-15 12:02:53.770 [main] HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
[DEBUG] 2025-10-15 12:02:53.770 [main] HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
[DEBUG] 2025-10-15 12:02:53.770 [main] HQL_FUNCTIONS - Double ln(NUMERIC arg)
[DEBUG] 2025-10-15 12:02:53.770 [main] HQL_FUNCTIONS - LocalDate local date
[DEBUG] 2025-10-15 12:02:53.770 [main] HQL_FUNCTIONS - LocalDateTime local datetime
[DEBUG] 2025-10-15 12:02:53.770 [main] HQL_FUNCTIONS - LocalTime local time
[DEBUG] 2025-10-15 12:02:53.770 [main] HQL_FUNCTIONS - LocalDate local_date
[DEBUG] 2025-10-15 12:02:53.770 [main] HQL_FUNCTIONS - LocalDateTime local_datetime
[DEBUG] 2025-10-15 12:02:53.770 [main] HQL_FUNCTIONS - LocalTime local_time
[DEBUG] 2025-10-15 12:02:53.771 [main] HQL_FUNCTIONS - Timestamp localtime
[DEBUG] 2025-10-15 12:02:53.771 [main] HQL_FUNCTIONS - Timestamp localtimestamp
[DEBUG] 2025-10-15 12:02:53.771 [main] HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2025-10-15 12:02:53.771 [main] HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
[DEBUG] 2025-10-15 12:02:53.771 [main] HQL_FUNCTIONS - Double log10(NUMERIC arg)
[DEBUG] 2025-10-15 12:02:53.771 [main] HQL_FUNCTIONS - Double log2(NUMERIC arg)
[DEBUG] 2025-10-15 12:02:53.771 [main] HQL_FUNCTIONS - String lower(STRING string)
[DEBUG] 2025-10-15 12:02:53.771 [main] HQL_FUNCTIONS - String lpad(string, length[, padding])
[DEBUG] 2025-10-15 12:02:53.771 [main] HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
[DEBUG] 2025-10-15 12:02:53.771 [main] HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear)
[DEBUG] 2025-10-15 12:02:53.771 [main] HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
[DEBUG] 2025-10-15 12:02:53.771 [main] HQL_FUNCTIONS - max(COMPARABLE arg)
[DEBUG] 2025-10-15 12:02:53.771 [main] HQL_FUNCTIONS - String md5(arg)
[DEBUG] 2025-10-15 12:02:53.771 [main] HQL_FUNCTIONS - Integer microsecond(TIME arg)
[DEBUG] 2025-10-15 12:02:53.771 [main] HQL_FUNCTIONS - min(COMPARABLE arg)
[DEBUG] 2025-10-15 12:02:53.771 [main] HQL_FUNCTIONS - Integer minute(TIME arg)
[DEBUG] 2025-10-15 12:02:53.771 [main] HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2025-10-15 12:02:53.771 [main] HQL_FUNCTIONS - Integer month(DATE arg)
[DEBUG] 2025-10-15 12:02:53.771 [main] HQL_FUNCTIONS - String monthname(DATE arg)
[DEBUG] 2025-10-15 12:02:53.771 [main] HQL_FUNCTIONS - Timestamp now()
[DEBUG] 2025-10-15 12:02:53.771 [main] HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
[DEBUG] 2025-10-15 12:02:53.771 [main] HQL_FUNCTIONS - nullif(arg0, arg1)
[DEBUG] 2025-10-15 12:02:53.771 [main] HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2025-10-15 12:02:53.771 [main] HQL_FUNCTIONS - OffsetDateTime offset datetime
[DEBUG] 2025-10-15 12:02:53.771 [main] HQL_FUNCTIONS - OffsetDateTime offset_datetime
[DEBUG] 2025-10-15 12:02:53.771 [main] HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2025-10-15 12:02:53.771 [main] HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2025-10-15 12:02:53.771 [main] HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
[DEBUG] 2025-10-15 12:02:53.771 [main] HQL_FUNCTIONS - Double pi
[DEBUG] 2025-10-15 12:02:53.772 [main] HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
[DEBUG] 2025-10-15 12:02:53.772 [main] HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2025-10-15 12:02:53.772 [main] HQL_FUNCTIONS - Integer quarter(DATE arg)
[DEBUG] 2025-10-15 12:02:53.772 [main] HQL_FUNCTIONS - Double radians(NUMERIC arg)
[DEBUG] 2025-10-15 12:02:53.772 [main] HQL_FUNCTIONS - Double rand([INTEGER seed])
[DEBUG] 2025-10-15 12:02:53.772 [main] HQL_FUNCTIONS - Long rank([arg0[, ...]])
[DEBUG] 2025-10-15 12:02:53.772 [main] HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
[DEBUG] 2025-10-15 12:02:53.772 [main] HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2025-10-15 12:02:53.772 [main] HQL_FUNCTIONS - String reverse(STRING arg)
[DEBUG] 2025-10-15 12:02:53.772 [main] HQL_FUNCTIONS - String right(STRING string, INTEGER length)
[DEBUG] 2025-10-15 12:02:53.772 [main] HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
[DEBUG] 2025-10-15 12:02:53.772 [main] HQL_FUNCTIONS - Long row_number()
[DEBUG] 2025-10-15 12:02:53.772 [main] HQL_FUNCTIONS - String rpad(string, length[, padding])
[DEBUG] 2025-10-15 12:02:53.772 [main] HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
[DEBUG] 2025-10-15 12:02:53.772 [main] HQL_FUNCTIONS - Integer second(TIME arg)
[DEBUG] 2025-10-15 12:02:53.772 [main] HQL_FUNCTIONS - String sha(arg)
[DEBUG] 2025-10-15 12:02:53.772 [main] HQL_FUNCTIONS - String sha1(arg)
[DEBUG] 2025-10-15 12:02:53.772 [main] HQL_FUNCTIONS - String sha2(arg0, arg1)
[DEBUG] 2025-10-15 12:02:53.772 [main] HQL_FUNCTIONS - Integer sign(NUMERIC arg)
[DEBUG] 2025-10-15 12:02:53.772 [main] HQL_FUNCTIONS - Double sin(NUMERIC arg)
[DEBUG] 2025-10-15 12:02:53.772 [main] HQL_FUNCTIONS - Double sinh(NUMERIC arg)
[DEBUG] 2025-10-15 12:02:53.772 [main] HQL_FUNCTIONS - String soundex(arg)
[DEBUG] 2025-10-15 12:02:53.772 [main] HQL_FUNCTIONS - String space(INTEGER arg)
[DEBUG] 2025-10-15 12:02:53.772 [main] HQL_FUNCTIONS - Object sql
[DEBUG] 2025-10-15 12:02:53.772 [main] HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
[DEBUG] 2025-10-15 12:02:53.772 [main] HQL_FUNCTIONS - Double stddev(NUMERIC arg)
[DEBUG] 2025-10-15 12:02:53.772 [main] HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
[DEBUG] 2025-10-15 12:02:53.772 [main] HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
[DEBUG] 2025-10-15 12:02:53.773 [main] HQL_FUNCTIONS - String str(arg)
[DEBUG] 2025-10-15 12:02:53.773 [main] HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days)
[DEBUG] 2025-10-15 12:02:53.773 [main] HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2025-10-15 12:02:53.773 [main] HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2025-10-15 12:02:53.773 [main] HQL_FUNCTIONS - subtime(TIME datetime, TIME time)
[DEBUG] 2025-10-15 12:02:53.773 [main] HQL_FUNCTIONS - sum(arg)
[DEBUG] 2025-10-15 12:02:53.773 [main] HQL_FUNCTIONS - Timestamp sysdate()
[DEBUG] 2025-10-15 12:02:53.773 [main] HQL_FUNCTIONS - Double tan(NUMERIC arg)
[DEBUG] 2025-10-15 12:02:53.773 [main] HQL_FUNCTIONS - Double tanh(NUMERIC arg)
[DEBUG] 2025-10-15 12:02:53.773 [main] HQL_FUNCTIONS - String time(arg)
[DEBUG] 2025-10-15 12:02:53.773 [main] HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1])
[DEBUG] 2025-10-15 12:02:53.773 [main] HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2025-10-15 12:02:53.773 [main] HQL_FUNCTIONS - basicType@14(java.lang.Long,-5)|basicType@17(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2025-10-15 12:02:53.773 [main] HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2025-10-15 12:02:53.773 [main] HQL_FUNCTIONS - trunc( ... )
[DEBUG] 2025-10-15 12:02:53.773 [main] HQL_FUNCTIONS - truncate( ... )
[DEBUG] 2025-10-15 12:02:53.773 [main] HQL_FUNCTIONS - String upper(STRING string)
[DEBUG] 2025-10-15 12:02:53.773 [main] HQL_FUNCTIONS - Date utc_date
[DEBUG] 2025-10-15 12:02:53.773 [main] HQL_FUNCTIONS - Time utc_time
[DEBUG] 2025-10-15 12:02:53.774 [main] HQL_FUNCTIONS - Timestamp utc_timestamp
[DEBUG] 2025-10-15 12:02:53.774 [main] HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
[DEBUG] 2025-10-15 12:02:53.774 [main] HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
[DEBUG] 2025-10-15 12:02:53.774 [main] HQL_FUNCTIONS - Double variance(NUMERIC arg)
[DEBUG] 2025-10-15 12:02:53.774 [main] HQL_FUNCTIONS - Integer week(DATE arg)
[DEBUG] 2025-10-15 12:02:53.774 [main] HQL_FUNCTIONS - Integer year(DATE arg)
[DEBUG] 2025-10-15 12:02:53.779 [main] cache - Starting QueryInterpretationCache(2048)
[DEBUG] 2025-10-15 12:02:53.893 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2025-10-15 12:02:53.895 [main] EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
[DEBUG] 2025-10-15 12:02:54.002 [main] ClassLoaderAccessImpl - Not known whether passed class name [org.hungrybadger.entity.Review] is safe
[DEBUG] 2025-10-15 12:02:54.002 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.hungrybadger.entity.Review
[DEBUG] 2025-10-15 12:02:54.234 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.hungrybadger.entity.Review]: private accessor [cuisineType]
[DEBUG] 2025-10-15 12:02:54.269 [main] interceptor - To-one property `org.hungrybadger.entity.Photo#review` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2025-10-15 12:02:54.269 [main] interceptor - To-one property `org.hungrybadger.entity.Photo#review` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2025-10-15 12:02:54.269 [main] ClassLoaderAccessImpl - Not known whether passed class name [org.hungrybadger.entity.Photo] is safe
[DEBUG] 2025-10-15 12:02:54.269 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.hungrybadger.entity.Photo
[DEBUG] 2025-10-15 12:02:54.280 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.hungrybadger.entity.Photo]: private accessor [imagePath]
[DEBUG] 2025-10-15 12:02:54.281 [main] interceptor - To-one property `org.hungrybadger.entity.Photo#review` was mapped with LAZY + NO_PROXY but the class was not enhanced
[DEBUG] 2025-10-15 12:02:54.299 [main] mutation - Skipping collection (re)creation - org.hungrybadger.entity.Review.photos
[DEBUG] 2025-10-15 12:02:54.300 [main] mutation - Skipping collection row deletions - org.hungrybadger.entity.Review.photos
[DEBUG] 2025-10-15 12:02:54.300 [main] mutation - Skipping collection removals - org.hungrybadger.entity.Review.photos
[DEBUG] 2025-10-15 12:02:54.334 [main] creation - Starting post-init callbacks
[DEBUG] 2025-10-15 12:02:54.334 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[org.hungrybadger.entity.Review.photos#{element}]) - element descriptor
[DEBUG] 2025-10-15 12:02:54.334 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(org.hungrybadger.entity.Review.photos)#finishInitialization
[DEBUG] 2025-10-15 12:02:54.334 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping(org.hungrybadger.entity.Review.photos) - key descriptor
[DEBUG] 2025-10-15 12:02:54.339 [main] creation - Starting PostInitCallbackEntry : Entity(org.hungrybadger.entity.Review) `staticFetchableList` generator
[DEBUG] 2025-10-15 12:02:54.340 [main] creation - Starting PostInitCallbackEntry : To-one key - NavigableRole[org.hungrybadger.entity.Photo.review]
[DEBUG] 2025-10-15 12:02:54.340 [main] creation - Starting PostInitCallbackEntry : Entity(org.hungrybadger.entity.Photo) `staticFetchableList` generator
[DEBUG] 2025-10-15 12:02:54.340 [main] creation - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[org.hungrybadger.entity.Review.photos#{element}]) - element descriptor
[DEBUG] 2025-10-15 12:02:54.433 [main] create - Created new SQL alias : r1_0
[DEBUG] 2025-10-15 12:02:54.437 [main] create - Registration of TableGroup [StandardTableGroup(org.hungrybadger.entity.Review)] with identifierForTableGroup [org.hungrybadger.entity.Review] for NavigablePath [org.hungrybadger.entity.Review] 
[DEBUG] 2025-10-15 12:02:54.446 [main] create - Created new SQL alias : p1_0
[DEBUG] 2025-10-15 12:02:54.451 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@48af5f38] with identifierForTableGroup [org.hungrybadger.entity.Review.photos] for NavigablePath [org.hungrybadger.entity.Review.photos] 
[DEBUG] 2025-10-15 12:02:54.453 [main] create - Registration of TableGroup [StandardTableGroup(org.hungrybadger.entity.Review.photos.{element})] with identifierForTableGroup [org.hungrybadger.entity.Review.photos.{element}] for NavigablePath [org.hungrybadger.entity.Review.photos.{element}] 
[DEBUG] 2025-10-15 12:02:54.463 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1da53f4f] with identifierForTableGroup [org.hungrybadger.entity.Review.photos.{element}.review] for NavigablePath [org.hungrybadger.entity.Review.photos.{element}.review] 
[DEBUG] 2025-10-15 12:02:54.474 [main] AST - DomainResult Graph:
 \-EntityResultImpl [org.hungrybadger.entity.Review]
 |  +-BasicFetch [org.hungrybadger.entity.Review.cuisineType]
 |  +-BasicFetch [org.hungrybadger.entity.Review.personalNotes]
 |  +-BasicFetch [org.hungrybadger.entity.Review.personalRating]
 |  +-EagerCollectionFetch [org.hungrybadger.entity.Review.photos]
 |  |  \-EntityFetchJoinedImpl [org.hungrybadger.entity.Review.photos.{element}]
 |  \-BasicFetch [org.hungrybadger.entity.Review.restaurantName]

[DEBUG] 2025-10-15 12:02:54.485 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.hungrybadger.entity.Review) {
          primaryTableReference : review as r1_0
          TableGroupJoins {
            left  join OneToManyTableGroup (p1 : org.hungrybadger.entity.Review.photos) {
              primaryTableReference : photo as p1_0
              TableGroupJoins {
                left  join LazyTableGroup (r2 : org.hungrybadger.entity.Review.photos.{element}.review) {
                }
              }
            }
          }
        }
      }
    }

[DEBUG] 2025-10-15 12:02:54.497 [main] AbstractEntityPersister - Static SQL for entity: org.hungrybadger.entity.Review
[DEBUG] 2025-10-15 12:02:54.497 [main] AbstractEntityPersister -  Version select: select id from review where id=?
[DEBUG] 2025-10-15 12:02:54.497 [main] AbstractEntityPersister -  Insert (0): insert into review (cuisine_type,personal_notes,personal_rating,restaurant_name) values (?,?,?,?)
[DEBUG] 2025-10-15 12:02:54.497 [main] AbstractEntityPersister -  Update (0): update review set cuisine_type=?,personal_notes=?,personal_rating=?,restaurant_name=? where id=?
[DEBUG] 2025-10-15 12:02:54.497 [main] AbstractEntityPersister -  Delete (0): delete from review where id=?
[DEBUG] 2025-10-15 12:02:54.497 [main] create - Created new SQL alias : p1_0
[DEBUG] 2025-10-15 12:02:54.497 [main] create - Registration of TableGroup [StandardTableGroup(org.hungrybadger.entity.Photo)] with identifierForTableGroup [org.hungrybadger.entity.Photo] for NavigablePath [org.hungrybadger.entity.Photo] 
[DEBUG] 2025-10-15 12:02:54.498 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@a55e82a] with identifierForTableGroup [org.hungrybadger.entity.Photo.review] for NavigablePath [org.hungrybadger.entity.Photo.review] 
[DEBUG] 2025-10-15 12:02:54.499 [main] create - Created new SQL alias : r1_0
[DEBUG] 2025-10-15 12:02:54.500 [main] AST - DomainResult Graph:
 \-EntityResultImpl [org.hungrybadger.entity.Photo]
 |  +-BasicFetch [org.hungrybadger.entity.Photo.imagePath]
 |  \-EntityFetchJoinedImpl [org.hungrybadger.entity.Photo.review]

[DEBUG] 2025-10-15 12:02:54.500 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.hungrybadger.entity.Photo) {
          primaryTableReference : photo as p1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.hungrybadger.entity.Photo.review) {
              primaryTableReference : review as r1_0
            }
          }
        }
      }
    }

[DEBUG] 2025-10-15 12:02:54.500 [main] AbstractEntityPersister - Static SQL for entity: org.hungrybadger.entity.Photo
[DEBUG] 2025-10-15 12:02:54.500 [main] AbstractEntityPersister -  Version select: select id from photo where id=?
[DEBUG] 2025-10-15 12:02:54.500 [main] AbstractEntityPersister -  Insert (0): insert into photo (image_path,review_id) values (?,?)
[DEBUG] 2025-10-15 12:02:54.500 [main] AbstractEntityPersister -  Update (0): update photo set image_path=?,review_id=? where id=?
[DEBUG] 2025-10-15 12:02:54.500 [main] AbstractEntityPersister -  Delete (0): delete from photo where id=?
[DEBUG] 2025-10-15 12:02:54.502 [main] create - Created new SQL alias : p1_0
[DEBUG] 2025-10-15 12:02:54.502 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@11f3400c] with identifierForTableGroup [org.hungrybadger.entity.Review.photos] for NavigablePath [org.hungrybadger.entity.Review.photos] 
[DEBUG] 2025-10-15 12:02:54.502 [main] create - Registration of TableGroup [StandardTableGroup(org.hungrybadger.entity.Review.photos.{element})] with identifierForTableGroup [org.hungrybadger.entity.Review.photos.{element}] for NavigablePath [org.hungrybadger.entity.Review.photos.{element}] 
[DEBUG] 2025-10-15 12:02:54.503 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4fbe486c] with identifierForTableGroup [org.hungrybadger.entity.Review.photos.{element}.review] for NavigablePath [org.hungrybadger.entity.Review.photos.{element}.review] 
[DEBUG] 2025-10-15 12:02:54.504 [main] AST - DomainResult Graph:
 \-CollectionDomainResult [org.hungrybadger.entity.Review.photos]

[DEBUG] 2025-10-15 12:02:54.504 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (p1 : org.hungrybadger.entity.Review.photos) {
          primaryTableReference : photo as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (r1 : org.hungrybadger.entity.Review.photos.{element}.review) {
            }
          }
        }
      }
    }

[DEBUG] 2025-10-15 12:02:54.505 [main] mutation - Static SQL for collection: org.hungrybadger.entity.Review.photos
[DEBUG] 2025-10-15 12:02:54.543 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2025-10-15 12:02:54.543 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2025-10-15 12:02:54.550 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2025-10-15 12:02:54.551 [main] JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[DEBUG] 2025-10-15 12:02:54.552 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7377781e] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@11bfd751]
[DEBUG] 2025-10-15 12:02:54.553 [main] NamedObjectRepository - Checking 0 named HQL queries
[DEBUG] 2025-10-15 12:02:54.553 [main] NamedObjectRepository - Checking 0 named SQL queries
[DEBUG] 2025-10-15 12:02:54.554 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2025-10-15 12:02:54.554 [main] SchemaManagementToolCoordinator - No actions found; doing nothing
[DEBUG] 2025-10-15 12:02:54.557 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@17053b5
[DEBUG] 2025-10-15 12:02:54.557 [main] SessionFactoryRegistry - Registering SessionFactory: 21ea858d-f314-42b3-8fa9-7c8054d19451 (<unnamed>)
[DEBUG] 2025-10-15 12:02:54.557 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2025-10-15 12:02:54.557 [main] SessionFactoryImpl - Instantiated SessionFactory
[DEBUG] 2025-10-15 12:02:54.606 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2025-10-15 12:02:54.628 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2025-10-15 12:02:54.647 [main] results - Initializer list:
	  org.hungrybadger.entity.Photo.review -> EntityJoinedFetchInitializer(org.hungrybadger.entity.Photo.review)@155833159 (ToOneAttributeMapping(NavigableRole[org.hungrybadger.entity.Photo.review])@45681857)
	  org.hungrybadger.entity.Photo.review.photos -> SelectEagerCollectionInitializer(org.hungrybadger.entity.Photo.review.photos)@689471568 (PluralAttribute(org.hungrybadger.entity.Review.photos))
	  org.hungrybadger.entity.Photo -> EntityResultInitializer(org.hungrybadger.entity.Photo)@1058155740 (SingleTableEntityPersister(org.hungrybadger.entity.Photo))

[DEBUG] 2025-10-15 12:02:54.654 [main] SQL - select p1_0.id,p1_0.image_path,p1_0.review_id,r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from photo p1_0 join review r1_0 on r1_0.id=p1_0.review_id where p1_0.id=?
[DEBUG] 2025-10-15 12:02:54.677 [main] results - Extracted JDBC value [3] - [2]
[DEBUG] 2025-10-15 12:02:54.678 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.hungrybadger.entity.Photo.review): 2
[DEBUG] 2025-10-15 12:02:54.678 [main] results - Extracted JDBC value [2] - [2]
[DEBUG] 2025-10-15 12:02:54.678 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Photo): 2
[DEBUG] 2025-10-15 12:02:54.679 [main] collection - (SelectEagerCollectionInitializer) Current row collection key : org.hungrybadger.entity.Photo.review.photos#2
[DEBUG] 2025-10-15 12:02:54.682 [main] entity - (EntityJoinedFetchInitializer) Created new entity instance [org.hungrybadger.entity.Photo.review#2] : 363103401
[DEBUG] 2025-10-15 12:02:54.682 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Photo#2] : 1308079276
[DEBUG] 2025-10-15 12:02:54.689 [main] results - Extracted JDBC value [4] - [American]
[DEBUG] 2025-10-15 12:02:54.689 [main] results - Extracted JDBC value [5] - [Wraps, good after a long day]
[DEBUG] 2025-10-15 12:02:54.689 [main] results - Extracted JDBC value [6] - [4]
[DEBUG] 2025-10-15 12:02:54.690 [main] results - Extracted JDBC value [7] - [Conrads]
[DEBUG] 2025-10-15 12:02:54.694 [main] entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.hungrybadger.entity.Photo.review#2
[DEBUG] 2025-10-15 12:02:54.695 [main] results - Extracted JDBC value [1] - [images/conrads_wrap.jpg]
[DEBUG] 2025-10-15 12:02:54.695 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Photo#2
[DEBUG] 2025-10-15 12:02:54.695 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4946485c
[DEBUG] 2025-10-15 12:02:54.700 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2025-10-15 12:02:54.716 [main] results - Initializer list:
	  org.hungrybadger.entity.Review.photos.{element} -> EntityJoinedFetchInitializer(org.hungrybadger.entity.Review.photos.{element})@390994841 (EntityCollectionPart(org.hungrybadger.entity.Review.photos#{element})@1403032934)
	  org.hungrybadger.entity.Review.photos.{element}.review -> EntitySelectFetchInitializer(org.hungrybadger.entity.Review.photos.{element}.review)@478238740 (ToOneAttributeMapping(NavigableRole[org.hungrybadger.entity.Photo.review])@45681857)
	  org.hungrybadger.entity.Review.photos -> BagInitializer(org.hungrybadger.entity.Review.photos)@347042785 (PluralAttribute(org.hungrybadger.entity.Review.photos))

[DEBUG] 2025-10-15 12:02:54.716 [main] SQL - select p1_0.review_id,p1_0.id,p1_0.image_path from photo p1_0 where p1_0.review_id=?
[DEBUG] 2025-10-15 12:02:54.718 [main] results - Extracted JDBC value [1] - [2]
[DEBUG] 2025-10-15 12:02:54.718 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review.photos.{element}): 2
[DEBUG] 2025-10-15 12:02:54.718 [main] results - Extracted JDBC value [0] - [2]
[DEBUG] 2025-10-15 12:02:54.718 [main] collection - (BagInitializer) Current row collection key : org.hungrybadger.entity.Review.photos#2
[DEBUG] 2025-10-15 12:02:54.718 [main] results - Extracted JDBC value [0] - [2]
[DEBUG] 2025-10-15 12:02:54.720 [main] collection - (BagInitializer) Responsible for loading collection [org.hungrybadger.entity.Review.photos#2] : org.hibernate.collection.spi.PersistentBag@70061633
[DEBUG] 2025-10-15 12:02:54.720 [main] collection - (BagInitializer) Reading element from row for collection [org.hungrybadger.entity.Review.photos#2] -> org.hibernate.collection.spi.PersistentBag@70061633
[DEBUG] 2025-10-15 12:02:54.720 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@93f15f6
[DEBUG] 2025-10-15 12:02:54.725 [main] ResultsHelper - Collection fully initialized: [org.hungrybadger.entity.Review.photos#2]
[DEBUG] 2025-10-15 12:02:54.726 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 12:02:54.728 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 12:02:54.730 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2025-10-15 12:02:54.730 [main] TransactionImpl - begin
[DEBUG] 2025-10-15 12:02:54.741 [main] TransactionImpl - committing
[DEBUG] 2025-10-15 12:02:54.741 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2025-10-15 12:02:54.742 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2025-10-15 12:02:54.746 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
[DEBUG] 2025-10-15 12:02:54.747 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2025-10-15 12:02:54.748 [main] EntityPrinter - Listing entities:
[DEBUG] 2025-10-15 12:02:54.748 [main] EntityPrinter - org.hungrybadger.entity.Photo{imagePath=images/conrads_wrap.jpg, review=org.hungrybadger.entity.Review#2, id=2}
[DEBUG] 2025-10-15 12:02:54.756 [main] SQL - delete from photo where id=?
[DEBUG] 2025-10-15 12:02:54.762 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 12:02:54.763 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 12:02:54.763 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2025-10-15 12:02:54.763 [main] results - Initializer list:
	  org.hungrybadger.entity.Photo.review -> EntityJoinedFetchInitializer(org.hungrybadger.entity.Photo.review)@623742454 (ToOneAttributeMapping(NavigableRole[org.hungrybadger.entity.Photo.review])@45681857)
	  org.hungrybadger.entity.Photo.review.photos -> SelectEagerCollectionInitializer(org.hungrybadger.entity.Photo.review.photos)@912493401 (PluralAttribute(org.hungrybadger.entity.Review.photos))
	  org.hungrybadger.entity.Photo -> EntityResultInitializer(org.hungrybadger.entity.Photo)@797917388 (SingleTableEntityPersister(org.hungrybadger.entity.Photo))

[DEBUG] 2025-10-15 12:02:54.763 [main] SQL - select p1_0.id,p1_0.image_path,p1_0.review_id,r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from photo p1_0 join review r1_0 on r1_0.id=p1_0.review_id where p1_0.id=?
[DEBUG] 2025-10-15 12:02:54.765 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 12:02:54.993 [main] create - Created new SQL alias : p1_0
[DEBUG] 2025-10-15 12:02:54.993 [main] create - Registration of TableGroup [StandardTableGroup(org.hungrybadger.entity.Photo(13492793740200))] with identifierForTableGroup [org.hungrybadger.entity.Photo] for NavigablePath [org.hungrybadger.entity.Photo] 
[DEBUG] 2025-10-15 12:02:55.002 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7e20f4e3] with identifierForTableGroup [org.hungrybadger.entity.Photo.review] for NavigablePath [org.hungrybadger.entity.Photo.review] 
[DEBUG] 2025-10-15 12:02:55.004 [main] AST - DomainResult Graph:
 \-EntityResultImpl [org.hungrybadger.entity.Photo(13492793740200)]
 |  +-BasicFetch [org.hungrybadger.entity.Photo(13492793740200).imagePath]
 |  \-CircularFetchImpl [org.hungrybadger.entity.Photo(13492793740200).review]

[DEBUG] 2025-10-15 12:02:55.004 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.hungrybadger.entity.Photo(13492793740200)) {
          primaryTableReference : photo as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (r1 : org.hungrybadger.entity.Photo(13492793740200).review) {
            }
          }
        }
      }
    }

[DEBUG] 2025-10-15 12:02:55.005 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
[DEBUG] 2025-10-15 12:02:55.005 [main] results - Initializer list:
	  org.hungrybadger.entity.Photo(13492793740200).review -> EntitySelectFetchInitializer(org.hungrybadger.entity.Photo(13492793740200).review)@1445947009 (ToOneAttributeMapping(NavigableRole[org.hungrybadger.entity.Photo.review])@45681857)
	  org.hungrybadger.entity.Photo(13492793740200) -> EntityResultInitializer(org.hungrybadger.entity.Photo(13492793740200))@1869571492 (SingleTableEntityPersister(org.hungrybadger.entity.Photo))

[DEBUG] 2025-10-15 12:02:55.006 [main] SQL - select p1_0.id,p1_0.image_path,p1_0.review_id from photo p1_0
[DEBUG] 2025-10-15 12:02:55.007 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2025-10-15 12:02:55.008 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Photo(13492793740200)): 1
[DEBUG] 2025-10-15 12:02:55.008 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Photo(13492793740200)#1] : 1733902203
[DEBUG] 2025-10-15 12:02:55.008 [main] results - Extracted JDBC value [2] - [1]
[DEBUG] 2025-10-15 12:02:55.008 [main] entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.hungrybadger.entity.Photo(13492793740200).review#1) : 1
[DEBUG] 2025-10-15 12:02:55.008 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2025-10-15 12:02:55.009 [main] results - Initializer list:
	  org.hungrybadger.entity.Review.photos -> BagInitializer(org.hungrybadger.entity.Review.photos)@1402047326 (PluralAttribute(org.hungrybadger.entity.Review.photos))
	  org.hungrybadger.entity.Review.photos.{element} -> EntityJoinedFetchInitializer(org.hungrybadger.entity.Review.photos.{element})@1399215965 (EntityCollectionPart(org.hungrybadger.entity.Review.photos#{element})@1403032934)
	  org.hungrybadger.entity.Review -> EntityResultInitializer(org.hungrybadger.entity.Review)@460107127 (SingleTableEntityPersister(org.hungrybadger.entity.Review))

[DEBUG] 2025-10-15 12:02:55.009 [main] SQL - select r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name,p1_0.review_id,p1_0.id,p1_0.image_path from review r1_0 left join photo p1_0 on r1_0.id=p1_0.review_id where r1_0.id=?
[DEBUG] 2025-10-15 12:02:55.012 [main] results - Extracted JDBC value [6] - [1]
[DEBUG] 2025-10-15 12:02:55.012 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review.photos.{element}): 1
[DEBUG] 2025-10-15 12:02:55.012 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review): 1
[DEBUG] 2025-10-15 12:02:55.012 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2025-10-15 12:02:55.012 [main] collection - (BagInitializer) Current row collection key : org.hungrybadger.entity.Review.photos#1
[DEBUG] 2025-10-15 12:02:55.012 [main] results - Extracted JDBC value [5] - [1]
[DEBUG] 2025-10-15 12:02:55.012 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Review#1] : 320305128
[DEBUG] 2025-10-15 12:02:55.012 [main] collection - (BagInitializer) Created new collection wrapper [org.hungrybadger.entity.Review.photos#1] : org.hibernate.collection.spi.PersistentBag@72847563
[DEBUG] 2025-10-15 12:02:55.012 [main] collection - (BagInitializer) Responsible for loading collection [org.hungrybadger.entity.Review.photos#1] : org.hibernate.collection.spi.PersistentBag@72847563
[DEBUG] 2025-10-15 12:02:55.013 [main] collection - (BagInitializer) Reading element from row for collection [org.hungrybadger.entity.Review.photos#1] -> org.hibernate.collection.spi.PersistentBag@72847563
[DEBUG] 2025-10-15 12:02:55.013 [main] results - Extracted JDBC value [1] - [Japanese]
[DEBUG] 2025-10-15 12:02:55.013 [main] results - Extracted JDBC value [2] - [Good cheap rolls. Togo or sit down are both great]
[DEBUG] 2025-10-15 12:02:55.013 [main] results - Extracted JDBC value [3] - [5]
[DEBUG] 2025-10-15 12:02:55.013 [main] results - Extracted JDBC value [4] - [Sushi Express]
[DEBUG] 2025-10-15 12:02:55.013 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Review#1
[DEBUG] 2025-10-15 12:02:55.013 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2cf88901
[DEBUG] 2025-10-15 12:02:55.014 [main] ResultsHelper - Collection fully initialized: [org.hungrybadger.entity.Review.photos#1]
[DEBUG] 2025-10-15 12:02:55.014 [main] entity - (EntitySelectFetchInitializer) Entity [org.hungrybadger.entity.Photo(13492793740200).review#1] : 1 has being loaded by session.internalLoad.
[DEBUG] 2025-10-15 12:02:55.014 [main] results - Extracted JDBC value [1] - [images/sushi_express_rolls.jpg]
[DEBUG] 2025-10-15 12:02:55.014 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Photo(13492793740200)#1
[DEBUG] 2025-10-15 12:02:55.014 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3c910acd
[DEBUG] 2025-10-15 12:02:55.014 [main] results - Extracted JDBC value [0] - [2]
[DEBUG] 2025-10-15 12:02:55.014 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Photo(13492793740200)): 2
[DEBUG] 2025-10-15 12:02:55.014 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Photo(13492793740200)#2] : 1630192523
[DEBUG] 2025-10-15 12:02:55.014 [main] results - Extracted JDBC value [2] - [2]
[DEBUG] 2025-10-15 12:02:55.015 [main] entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.hungrybadger.entity.Photo(13492793740200).review#2) : 2
[DEBUG] 2025-10-15 12:02:55.015 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2025-10-15 12:02:55.015 [main] results - Initializer list:
	  org.hungrybadger.entity.Review.photos -> BagInitializer(org.hungrybadger.entity.Review.photos)@166919726 (PluralAttribute(org.hungrybadger.entity.Review.photos))
	  org.hungrybadger.entity.Review.photos.{element} -> EntityJoinedFetchInitializer(org.hungrybadger.entity.Review.photos.{element})@1305777754 (EntityCollectionPart(org.hungrybadger.entity.Review.photos#{element})@1403032934)
	  org.hungrybadger.entity.Review -> EntityResultInitializer(org.hungrybadger.entity.Review)@2032613967 (SingleTableEntityPersister(org.hungrybadger.entity.Review))

[DEBUG] 2025-10-15 12:02:55.015 [main] SQL - select r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name,p1_0.review_id,p1_0.id,p1_0.image_path from review r1_0 left join photo p1_0 on r1_0.id=p1_0.review_id where r1_0.id=?
[DEBUG] 2025-10-15 12:02:55.016 [main] results - Extracted JDBC value [6] - [2]
[DEBUG] 2025-10-15 12:02:55.016 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review.photos.{element}): 2
[DEBUG] 2025-10-15 12:02:55.016 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review): 2
[DEBUG] 2025-10-15 12:02:55.016 [main] results - Extracted JDBC value [0] - [2]
[DEBUG] 2025-10-15 12:02:55.016 [main] collection - (BagInitializer) Current row collection key : org.hungrybadger.entity.Review.photos#2
[DEBUG] 2025-10-15 12:02:55.016 [main] results - Extracted JDBC value [5] - [2]
[DEBUG] 2025-10-15 12:02:55.017 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Review#2] : 189629356
[DEBUG] 2025-10-15 12:02:55.017 [main] collection - (BagInitializer) Created new collection wrapper [org.hungrybadger.entity.Review.photos#2] : org.hibernate.collection.spi.PersistentBag@332464215
[DEBUG] 2025-10-15 12:02:55.017 [main] collection - (BagInitializer) Responsible for loading collection [org.hungrybadger.entity.Review.photos#2] : org.hibernate.collection.spi.PersistentBag@332464215
[DEBUG] 2025-10-15 12:02:55.017 [main] collection - (BagInitializer) Reading element from row for collection [org.hungrybadger.entity.Review.photos#2] -> org.hibernate.collection.spi.PersistentBag@332464215
[DEBUG] 2025-10-15 12:02:55.017 [main] results - Extracted JDBC value [1] - [American]
[DEBUG] 2025-10-15 12:02:55.017 [main] results - Extracted JDBC value [2] - [Wraps, good after a long day]
[DEBUG] 2025-10-15 12:02:55.017 [main] results - Extracted JDBC value [3] - [4]
[DEBUG] 2025-10-15 12:02:55.017 [main] results - Extracted JDBC value [4] - [Conrads]
[DEBUG] 2025-10-15 12:02:55.017 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Review#2
[DEBUG] 2025-10-15 12:02:55.017 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@66944c7c
[DEBUG] 2025-10-15 12:02:55.017 [main] ResultsHelper - Collection fully initialized: [org.hungrybadger.entity.Review.photos#2]
[DEBUG] 2025-10-15 12:02:55.017 [main] entity - (EntitySelectFetchInitializer) Entity [org.hungrybadger.entity.Photo(13492793740200).review#2] : 2 has being loaded by session.internalLoad.
[DEBUG] 2025-10-15 12:02:55.017 [main] results - Extracted JDBC value [1] - [images/conrads_wrap.jpg]
[DEBUG] 2025-10-15 12:02:55.017 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Photo(13492793740200)#2
[DEBUG] 2025-10-15 12:02:55.017 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3c910acd
[DEBUG] 2025-10-15 12:02:55.017 [main] results - Extracted JDBC value [0] - [3]
[DEBUG] 2025-10-15 12:02:55.017 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Photo(13492793740200)): 3
[DEBUG] 2025-10-15 12:02:55.018 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Photo(13492793740200)#3] : 345584390
[DEBUG] 2025-10-15 12:02:55.018 [main] results - Extracted JDBC value [2] - [3]
[DEBUG] 2025-10-15 12:02:55.018 [main] entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.hungrybadger.entity.Photo(13492793740200).review#3) : 3
[DEBUG] 2025-10-15 12:02:55.018 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2025-10-15 12:02:55.018 [main] results - Initializer list:
	  org.hungrybadger.entity.Review.photos -> BagInitializer(org.hungrybadger.entity.Review.photos)@1940816602 (PluralAttribute(org.hungrybadger.entity.Review.photos))
	  org.hungrybadger.entity.Review.photos.{element} -> EntityJoinedFetchInitializer(org.hungrybadger.entity.Review.photos.{element})@1751574336 (EntityCollectionPart(org.hungrybadger.entity.Review.photos#{element})@1403032934)
	  org.hungrybadger.entity.Review -> EntityResultInitializer(org.hungrybadger.entity.Review)@752202140 (SingleTableEntityPersister(org.hungrybadger.entity.Review))

[DEBUG] 2025-10-15 12:02:55.018 [main] SQL - select r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name,p1_0.review_id,p1_0.id,p1_0.image_path from review r1_0 left join photo p1_0 on r1_0.id=p1_0.review_id where r1_0.id=?
[DEBUG] 2025-10-15 12:02:55.019 [main] results - Extracted JDBC value [6] - [3]
[DEBUG] 2025-10-15 12:02:55.019 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review.photos.{element}): 3
[DEBUG] 2025-10-15 12:02:55.019 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review): 3
[DEBUG] 2025-10-15 12:02:55.019 [main] results - Extracted JDBC value [0] - [3]
[DEBUG] 2025-10-15 12:02:55.019 [main] collection - (BagInitializer) Current row collection key : org.hungrybadger.entity.Review.photos#3
[DEBUG] 2025-10-15 12:02:55.019 [main] results - Extracted JDBC value [5] - [3]
[DEBUG] 2025-10-15 12:02:55.019 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Review#3] : 1351568309
[DEBUG] 2025-10-15 12:02:55.019 [main] collection - (BagInitializer) Created new collection wrapper [org.hungrybadger.entity.Review.photos#3] : org.hibernate.collection.spi.PersistentBag@1443030336
[DEBUG] 2025-10-15 12:02:55.019 [main] collection - (BagInitializer) Responsible for loading collection [org.hungrybadger.entity.Review.photos#3] : org.hibernate.collection.spi.PersistentBag@1443030336
[DEBUG] 2025-10-15 12:02:55.019 [main] collection - (BagInitializer) Reading element from row for collection [org.hungrybadger.entity.Review.photos#3] -> org.hibernate.collection.spi.PersistentBag@1443030336
[DEBUG] 2025-10-15 12:02:55.019 [main] results - Extracted JDBC value [1] - [American]
[DEBUG] 2025-10-15 12:02:55.020 [main] results - Extracted JDBC value [2] - [Mac and Cheese Slice for the win!]
[DEBUG] 2025-10-15 12:02:55.020 [main] results - Extracted JDBC value [3] - [5]
[DEBUG] 2025-10-15 12:02:55.020 [main] results - Extracted JDBC value [4] - [Ians Pizza]
[DEBUG] 2025-10-15 12:02:55.020 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Review#3
[DEBUG] 2025-10-15 12:02:55.020 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@11f9b95a
[DEBUG] 2025-10-15 12:02:55.020 [main] results - Extracted JDBC value [6] - [4]
[DEBUG] 2025-10-15 12:02:55.020 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review.photos.{element}): 4
[DEBUG] 2025-10-15 12:02:55.020 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review): 3
[DEBUG] 2025-10-15 12:02:55.020 [main] results - Extracted JDBC value [0] - [3]
[DEBUG] 2025-10-15 12:02:55.020 [main] collection - (BagInitializer) Current row collection key : org.hungrybadger.entity.Review.photos#3
[DEBUG] 2025-10-15 12:02:55.020 [main] results - Extracted JDBC value [5] - [3]
[DEBUG] 2025-10-15 12:02:55.020 [main] entity - (EntityJoinedFetchInitializer) Created new entity instance [org.hungrybadger.entity.Review.photos.{element}#4] : 1107717901
[DEBUG] 2025-10-15 12:02:55.020 [main] collection - (BagInitializer) Found existing loading collection entry [org.hungrybadger.entity.Review.photos#3]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@1443030336
[DEBUG] 2025-10-15 12:02:55.020 [main] collection - (BagInitializer) Responsible for loading collection [org.hungrybadger.entity.Review.photos#3] : org.hibernate.collection.spi.PersistentBag@1443030336
[DEBUG] 2025-10-15 12:02:55.020 [main] results - Extracted JDBC value [7] - [images/ians_inside.jpg]
[DEBUG] 2025-10-15 12:02:55.020 [main] results - Extracted JDBC value [5] - [3]
[DEBUG] 2025-10-15 12:02:55.020 [main] entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.hungrybadger.entity.Review.photos.{element}#4
[DEBUG] 2025-10-15 12:02:55.020 [main] collection - (BagInitializer) Reading element from row for collection [org.hungrybadger.entity.Review.photos#3] -> org.hibernate.collection.spi.PersistentBag@1443030336
[DEBUG] 2025-10-15 12:02:55.020 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@11f9b95a
[DEBUG] 2025-10-15 12:02:55.021 [main] ResultsHelper - Collection fully initialized: [org.hungrybadger.entity.Review.photos#3]
[DEBUG] 2025-10-15 12:02:55.021 [main] entity - (EntitySelectFetchInitializer) Entity [org.hungrybadger.entity.Photo(13492793740200).review#3] : 3 has being loaded by session.internalLoad.
[DEBUG] 2025-10-15 12:02:55.021 [main] results - Extracted JDBC value [1] - [images/ians_mac_slice.jpg]
[DEBUG] 2025-10-15 12:02:55.021 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Photo(13492793740200)#3
[DEBUG] 2025-10-15 12:02:55.021 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3c910acd
[DEBUG] 2025-10-15 12:02:55.021 [main] results - Extracted JDBC value [0] - [4]
[DEBUG] 2025-10-15 12:02:55.021 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Photo(13492793740200)): 4
[DEBUG] 2025-10-15 12:02:55.021 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3c910acd
[DEBUG] 2025-10-15 12:02:55.022 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 12:02:55.022 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 12:02:55.136 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2025-10-15 12:02:55.137 [main] results - Initializer list:
	  org.hungrybadger.entity.Review.photos -> BagInitializer(org.hungrybadger.entity.Review.photos)@700973385 (PluralAttribute(org.hungrybadger.entity.Review.photos))
	  org.hungrybadger.entity.Review.photos.{element} -> EntityJoinedFetchInitializer(org.hungrybadger.entity.Review.photos.{element})@1355074 (EntityCollectionPart(org.hungrybadger.entity.Review.photos#{element})@1403032934)
	  org.hungrybadger.entity.Review -> EntityResultInitializer(org.hungrybadger.entity.Review)@1619759213 (SingleTableEntityPersister(org.hungrybadger.entity.Review))

[DEBUG] 2025-10-15 12:02:55.137 [main] SQL - select r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name,p1_0.review_id,p1_0.id,p1_0.image_path from review r1_0 left join photo p1_0 on r1_0.id=p1_0.review_id where r1_0.id=?
[DEBUG] 2025-10-15 12:02:55.139 [main] results - Extracted JDBC value [6] - [3]
[DEBUG] 2025-10-15 12:02:55.139 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review.photos.{element}): 3
[DEBUG] 2025-10-15 12:02:55.139 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review): 3
[DEBUG] 2025-10-15 12:02:55.139 [main] results - Extracted JDBC value [0] - [3]
[DEBUG] 2025-10-15 12:02:55.139 [main] collection - (BagInitializer) Current row collection key : org.hungrybadger.entity.Review.photos#3
[DEBUG] 2025-10-15 12:02:55.139 [main] results - Extracted JDBC value [5] - [3]
[DEBUG] 2025-10-15 12:02:55.139 [main] entity - (EntityJoinedFetchInitializer) Created new entity instance [org.hungrybadger.entity.Review.photos.{element}#3] : 1814943883
[DEBUG] 2025-10-15 12:02:55.140 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Review#3] : 1238989252
[DEBUG] 2025-10-15 12:02:55.140 [main] collection - (BagInitializer) Created new collection wrapper [org.hungrybadger.entity.Review.photos#3] : org.hibernate.collection.spi.PersistentBag@1018262491
[DEBUG] 2025-10-15 12:02:55.140 [main] collection - (BagInitializer) Responsible for loading collection [org.hungrybadger.entity.Review.photos#3] : org.hibernate.collection.spi.PersistentBag@1018262491
[DEBUG] 2025-10-15 12:02:55.140 [main] results - Extracted JDBC value [7] - [images/ians_mac_slice.jpg]
[DEBUG] 2025-10-15 12:02:55.140 [main] results - Extracted JDBC value [5] - [3]
[DEBUG] 2025-10-15 12:02:55.140 [main] entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.hungrybadger.entity.Review.photos.{element}#3
[DEBUG] 2025-10-15 12:02:55.140 [main] collection - (BagInitializer) Reading element from row for collection [org.hungrybadger.entity.Review.photos#3] -> org.hibernate.collection.spi.PersistentBag@1018262491
[DEBUG] 2025-10-15 12:02:55.140 [main] results - Extracted JDBC value [1] - [American]
[DEBUG] 2025-10-15 12:02:55.140 [main] results - Extracted JDBC value [2] - [Mac and Cheese Slice for the win!]
[DEBUG] 2025-10-15 12:02:55.140 [main] results - Extracted JDBC value [3] - [5]
[DEBUG] 2025-10-15 12:02:55.140 [main] results - Extracted JDBC value [4] - [Ians Pizza]
[DEBUG] 2025-10-15 12:02:55.140 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Review#3
[DEBUG] 2025-10-15 12:02:55.140 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@26712838
[DEBUG] 2025-10-15 12:02:55.140 [main] results - Extracted JDBC value [6] - [4]
[DEBUG] 2025-10-15 12:02:55.140 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review.photos.{element}): 4
[DEBUG] 2025-10-15 12:02:55.140 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review): 3
[DEBUG] 2025-10-15 12:02:55.140 [main] results - Extracted JDBC value [0] - [3]
[DEBUG] 2025-10-15 12:02:55.140 [main] collection - (BagInitializer) Current row collection key : org.hungrybadger.entity.Review.photos#3
[DEBUG] 2025-10-15 12:02:55.140 [main] results - Extracted JDBC value [5] - [3]
[DEBUG] 2025-10-15 12:02:55.140 [main] entity - (EntityJoinedFetchInitializer) Created new entity instance [org.hungrybadger.entity.Review.photos.{element}#4] : 614090237
[DEBUG] 2025-10-15 12:02:55.141 [main] collection - (BagInitializer) Found existing loading collection entry [org.hungrybadger.entity.Review.photos#3]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@1018262491
[DEBUG] 2025-10-15 12:02:55.141 [main] collection - (BagInitializer) Responsible for loading collection [org.hungrybadger.entity.Review.photos#3] : org.hibernate.collection.spi.PersistentBag@1018262491
[DEBUG] 2025-10-15 12:02:55.141 [main] results - Extracted JDBC value [7] - [images/ians_inside.jpg]
[DEBUG] 2025-10-15 12:02:55.141 [main] results - Extracted JDBC value [5] - [3]
[DEBUG] 2025-10-15 12:02:55.141 [main] entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.hungrybadger.entity.Review.photos.{element}#4
[DEBUG] 2025-10-15 12:02:55.141 [main] collection - (BagInitializer) Reading element from row for collection [org.hungrybadger.entity.Review.photos#3] -> org.hibernate.collection.spi.PersistentBag@1018262491
[DEBUG] 2025-10-15 12:02:55.141 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@26712838
[DEBUG] 2025-10-15 12:02:55.141 [main] ResultsHelper - Collection fully initialized: [org.hungrybadger.entity.Review.photos#3]
[DEBUG] 2025-10-15 12:02:55.141 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 12:02:55.143 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2025-10-15 12:02:55.143 [main] TransactionImpl - begin
[DEBUG] 2025-10-15 12:02:55.146 [main] TransactionImpl - committing
[DEBUG] 2025-10-15 12:02:55.146 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2025-10-15 12:02:55.146 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2025-10-15 12:02:55.149 [main] Collections - Collection dereferenced: [org.hungrybadger.entity.Review.photos#3]
[DEBUG] 2025-10-15 12:02:55.150 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 3 deletions to 3 objects
[DEBUG] 2025-10-15 12:02:55.150 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 1 removals to 1 collections
[DEBUG] 2025-10-15 12:02:55.150 [main] EntityPrinter - Listing entities:
[DEBUG] 2025-10-15 12:02:55.150 [main] EntityPrinter - org.hungrybadger.entity.Photo{imagePath=images/ians_mac_slice.jpg, review=org.hungrybadger.entity.Review#3, id=3}
[DEBUG] 2025-10-15 12:02:55.150 [main] EntityPrinter - org.hungrybadger.entity.Photo{imagePath=images/ians_inside.jpg, review=org.hungrybadger.entity.Review#3, id=4}
[DEBUG] 2025-10-15 12:02:55.150 [main] EntityPrinter - org.hungrybadger.entity.Review{personalNotes=Mac and Cheese Slice for the win!, personalRating=5, restaurantName=Ians Pizza, id=3, cuisineType=American, photos=[org.hungrybadger.entity.Photo#3, org.hungrybadger.entity.Photo#4]}
[DEBUG] 2025-10-15 12:02:55.152 [main] SQL - delete from photo where id=?
[DEBUG] 2025-10-15 12:02:55.152 [main] SQL - delete from photo where id=?
[DEBUG] 2025-10-15 12:02:55.153 [main] SQL - delete from review where id=?
[DEBUG] 2025-10-15 12:02:55.155 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 12:02:55.156 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 12:02:55.156 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2025-10-15 12:02:55.156 [main] results - Initializer list:
	  org.hungrybadger.entity.Review.photos -> BagInitializer(org.hungrybadger.entity.Review.photos)@2022055326 (PluralAttribute(org.hungrybadger.entity.Review.photos))
	  org.hungrybadger.entity.Review.photos.{element} -> EntityJoinedFetchInitializer(org.hungrybadger.entity.Review.photos.{element})@1787266936 (EntityCollectionPart(org.hungrybadger.entity.Review.photos#{element})@1403032934)
	  org.hungrybadger.entity.Review -> EntityResultInitializer(org.hungrybadger.entity.Review)@514587349 (SingleTableEntityPersister(org.hungrybadger.entity.Review))

[DEBUG] 2025-10-15 12:02:55.156 [main] SQL - select r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name,p1_0.review_id,p1_0.id,p1_0.image_path from review r1_0 left join photo p1_0 on r1_0.id=p1_0.review_id where r1_0.id=?
[DEBUG] 2025-10-15 12:02:55.157 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 12:02:55.158 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2025-10-15 12:02:55.158 [main] results - Initializer list:
	  org.hungrybadger.entity.Photo.review -> EntityJoinedFetchInitializer(org.hungrybadger.entity.Photo.review)@1712597146 (ToOneAttributeMapping(NavigableRole[org.hungrybadger.entity.Photo.review])@45681857)
	  org.hungrybadger.entity.Photo.review.photos -> SelectEagerCollectionInitializer(org.hungrybadger.entity.Photo.review.photos)@1095290435 (PluralAttribute(org.hungrybadger.entity.Review.photos))
	  org.hungrybadger.entity.Photo -> EntityResultInitializer(org.hungrybadger.entity.Photo)@1190892929 (SingleTableEntityPersister(org.hungrybadger.entity.Photo))

[DEBUG] 2025-10-15 12:02:55.158 [main] SQL - select p1_0.id,p1_0.image_path,p1_0.review_id,r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from photo p1_0 join review r1_0 on r1_0.id=p1_0.review_id where p1_0.id=?
[DEBUG] 2025-10-15 12:02:55.159 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 12:02:55.160 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2025-10-15 12:02:55.160 [main] results - Initializer list:
	  org.hungrybadger.entity.Photo.review -> EntityJoinedFetchInitializer(org.hungrybadger.entity.Photo.review)@1425169218 (ToOneAttributeMapping(NavigableRole[org.hungrybadger.entity.Photo.review])@45681857)
	  org.hungrybadger.entity.Photo.review.photos -> SelectEagerCollectionInitializer(org.hungrybadger.entity.Photo.review.photos)@1377593328 (PluralAttribute(org.hungrybadger.entity.Review.photos))
	  org.hungrybadger.entity.Photo -> EntityResultInitializer(org.hungrybadger.entity.Photo)@2098556815 (SingleTableEntityPersister(org.hungrybadger.entity.Photo))

[DEBUG] 2025-10-15 12:02:55.160 [main] SQL - select p1_0.id,p1_0.image_path,p1_0.review_id,r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from photo p1_0 join review r1_0 on r1_0.id=p1_0.review_id where p1_0.id=?
[DEBUG] 2025-10-15 12:02:55.161 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 12:02:55.291 [main] create - Created new SQL alias : p1_0
[DEBUG] 2025-10-15 12:02:55.292 [main] create - Registration of TableGroup [StandardTableGroup(org.hungrybadger.entity.Photo(13493153028400))] with identifierForTableGroup [org.hungrybadger.entity.Photo] for NavigablePath [org.hungrybadger.entity.Photo] 
[DEBUG] 2025-10-15 12:02:55.292 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@24d7657b] with identifierForTableGroup [org.hungrybadger.entity.Photo.review] for NavigablePath [org.hungrybadger.entity.Photo.review] 
[DEBUG] 2025-10-15 12:02:55.296 [main] BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4ad3969
[DEBUG] 2025-10-15 12:02:55.297 [main] BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.hungrybadger.entity.Photo(13493153028400).imagePath) 
[DEBUG] 2025-10-15 12:02:55.300 [main] AST - DomainResult Graph:
 \-EntityResultImpl [org.hungrybadger.entity.Photo(13493153028400)]
 |  +-BasicFetch [org.hungrybadger.entity.Photo(13493153028400).imagePath]
 |  \-CircularFetchImpl [org.hungrybadger.entity.Photo(13493153028400).review]

[DEBUG] 2025-10-15 12:02:55.300 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.hungrybadger.entity.Photo(13493153028400)) {
          primaryTableReference : photo as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (r1 : org.hungrybadger.entity.Photo(13493153028400).review) {
            }
          }
        }
      }
    }

[DEBUG] 2025-10-15 12:02:55.301 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
[DEBUG] 2025-10-15 12:02:55.301 [main] results - Initializer list:
	  org.hungrybadger.entity.Photo(13493153028400).review -> EntitySelectFetchInitializer(org.hungrybadger.entity.Photo(13493153028400).review)@1307655632 (ToOneAttributeMapping(NavigableRole[org.hungrybadger.entity.Photo.review])@45681857)
	  org.hungrybadger.entity.Photo(13493153028400) -> EntityResultInitializer(org.hungrybadger.entity.Photo(13493153028400))@785880972 (SingleTableEntityPersister(org.hungrybadger.entity.Photo))

[DEBUG] 2025-10-15 12:02:55.301 [main] SQL - select p1_0.id,p1_0.image_path,p1_0.review_id from photo p1_0 where p1_0.image_path like ? escape ''
[DEBUG] 2025-10-15 12:02:55.303 [main] results - Extracted JDBC value [0] - [3]
[DEBUG] 2025-10-15 12:02:55.303 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Photo(13493153028400)): 3
[DEBUG] 2025-10-15 12:02:55.303 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Photo(13493153028400)#3] : 1731894708
[DEBUG] 2025-10-15 12:02:55.303 [main] results - Extracted JDBC value [2] - [3]
[DEBUG] 2025-10-15 12:02:55.304 [main] entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.hungrybadger.entity.Photo(13493153028400).review#3) : 3
[DEBUG] 2025-10-15 12:02:55.304 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2025-10-15 12:02:55.304 [main] results - Initializer list:
	  org.hungrybadger.entity.Review.photos -> BagInitializer(org.hungrybadger.entity.Review.photos)@406780058 (PluralAttribute(org.hungrybadger.entity.Review.photos))
	  org.hungrybadger.entity.Review.photos.{element} -> EntityJoinedFetchInitializer(org.hungrybadger.entity.Review.photos.{element})@41495592 (EntityCollectionPart(org.hungrybadger.entity.Review.photos#{element})@1403032934)
	  org.hungrybadger.entity.Review -> EntityResultInitializer(org.hungrybadger.entity.Review)@117079268 (SingleTableEntityPersister(org.hungrybadger.entity.Review))

[DEBUG] 2025-10-15 12:02:55.304 [main] SQL - select r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name,p1_0.review_id,p1_0.id,p1_0.image_path from review r1_0 left join photo p1_0 on r1_0.id=p1_0.review_id where r1_0.id=?
[DEBUG] 2025-10-15 12:02:55.306 [main] results - Extracted JDBC value [6] - [3]
[DEBUG] 2025-10-15 12:02:55.306 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review.photos.{element}): 3
[DEBUG] 2025-10-15 12:02:55.306 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review): 3
[DEBUG] 2025-10-15 12:02:55.306 [main] results - Extracted JDBC value [0] - [3]
[DEBUG] 2025-10-15 12:02:55.306 [main] collection - (BagInitializer) Current row collection key : org.hungrybadger.entity.Review.photos#3
[DEBUG] 2025-10-15 12:02:55.306 [main] results - Extracted JDBC value [5] - [3]
[DEBUG] 2025-10-15 12:02:55.306 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Review#3] : 90480469
[DEBUG] 2025-10-15 12:02:55.306 [main] collection - (BagInitializer) Created new collection wrapper [org.hungrybadger.entity.Review.photos#3] : org.hibernate.collection.spi.PersistentBag@1434527698
[DEBUG] 2025-10-15 12:02:55.306 [main] collection - (BagInitializer) Responsible for loading collection [org.hungrybadger.entity.Review.photos#3] : org.hibernate.collection.spi.PersistentBag@1434527698
[DEBUG] 2025-10-15 12:02:55.306 [main] collection - (BagInitializer) Reading element from row for collection [org.hungrybadger.entity.Review.photos#3] -> org.hibernate.collection.spi.PersistentBag@1434527698
[DEBUG] 2025-10-15 12:02:55.306 [main] results - Extracted JDBC value [1] - [American]
[DEBUG] 2025-10-15 12:02:55.306 [main] results - Extracted JDBC value [2] - [Mac and Cheese Slice for the win!]
[DEBUG] 2025-10-15 12:02:55.306 [main] results - Extracted JDBC value [3] - [5]
[DEBUG] 2025-10-15 12:02:55.306 [main] results - Extracted JDBC value [4] - [Ians Pizza]
[DEBUG] 2025-10-15 12:02:55.306 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Review#3
[DEBUG] 2025-10-15 12:02:55.307 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@12270a01
[DEBUG] 2025-10-15 12:02:55.307 [main] results - Extracted JDBC value [6] - [4]
[DEBUG] 2025-10-15 12:02:55.307 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review.photos.{element}): 4
[DEBUG] 2025-10-15 12:02:55.307 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review): 3
[DEBUG] 2025-10-15 12:02:55.307 [main] results - Extracted JDBC value [0] - [3]
[DEBUG] 2025-10-15 12:02:55.307 [main] collection - (BagInitializer) Current row collection key : org.hungrybadger.entity.Review.photos#3
[DEBUG] 2025-10-15 12:02:55.307 [main] results - Extracted JDBC value [5] - [3]
[DEBUG] 2025-10-15 12:02:55.307 [main] entity - (EntityJoinedFetchInitializer) Created new entity instance [org.hungrybadger.entity.Review.photos.{element}#4] : 1163065605
[DEBUG] 2025-10-15 12:02:55.307 [main] collection - (BagInitializer) Found existing loading collection entry [org.hungrybadger.entity.Review.photos#3]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@1434527698
[DEBUG] 2025-10-15 12:02:55.307 [main] collection - (BagInitializer) Responsible for loading collection [org.hungrybadger.entity.Review.photos#3] : org.hibernate.collection.spi.PersistentBag@1434527698
[DEBUG] 2025-10-15 12:02:55.307 [main] results - Extracted JDBC value [7] - [images/ians_inside.jpg]
[DEBUG] 2025-10-15 12:02:55.307 [main] results - Extracted JDBC value [5] - [3]
[DEBUG] 2025-10-15 12:02:55.307 [main] entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.hungrybadger.entity.Review.photos.{element}#4
[DEBUG] 2025-10-15 12:02:55.307 [main] collection - (BagInitializer) Reading element from row for collection [org.hungrybadger.entity.Review.photos#3] -> org.hibernate.collection.spi.PersistentBag@1434527698
[DEBUG] 2025-10-15 12:02:55.307 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@12270a01
[DEBUG] 2025-10-15 12:02:55.307 [main] ResultsHelper - Collection fully initialized: [org.hungrybadger.entity.Review.photos#3]
[DEBUG] 2025-10-15 12:02:55.307 [main] entity - (EntitySelectFetchInitializer) Entity [org.hungrybadger.entity.Photo(13493153028400).review#3] : 3 has being loaded by session.internalLoad.
[DEBUG] 2025-10-15 12:02:55.307 [main] results - Extracted JDBC value [1] - [images/ians_mac_slice.jpg]
[DEBUG] 2025-10-15 12:02:55.307 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Photo(13493153028400)#3
[DEBUG] 2025-10-15 12:02:55.307 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@646d58cd
[DEBUG] 2025-10-15 12:02:55.308 [main] results - Extracted JDBC value [0] - [4]
[DEBUG] 2025-10-15 12:02:55.308 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Photo(13493153028400)): 4
[DEBUG] 2025-10-15 12:02:55.308 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@646d58cd
[DEBUG] 2025-10-15 12:02:55.308 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 12:02:55.308 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 12:02:55.413 [main] create - Created new SQL alias : p1_0
[DEBUG] 2025-10-15 12:02:55.414 [main] create - Registration of TableGroup [StandardTableGroup(org.hungrybadger.entity.Photo(13493284826400))] with identifierForTableGroup [org.hungrybadger.entity.Photo] for NavigablePath [org.hungrybadger.entity.Photo] 
[DEBUG] 2025-10-15 12:02:55.414 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7846913f] with identifierForTableGroup [org.hungrybadger.entity.Photo.review] for NavigablePath [org.hungrybadger.entity.Photo.review] 
[DEBUG] 2025-10-15 12:02:55.414 [main] BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@72585e83
[DEBUG] 2025-10-15 12:02:55.414 [main] BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.hungrybadger.entity.Photo(13493284826400).imagePath) 
[DEBUG] 2025-10-15 12:02:55.415 [main] AST - DomainResult Graph:
 \-EntityResultImpl [org.hungrybadger.entity.Photo(13493284826400)]
 |  +-BasicFetch [org.hungrybadger.entity.Photo(13493284826400).imagePath]
 |  \-CircularFetchImpl [org.hungrybadger.entity.Photo(13493284826400).review]

[DEBUG] 2025-10-15 12:02:55.415 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.hungrybadger.entity.Photo(13493284826400)) {
          primaryTableReference : photo as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (r1 : org.hungrybadger.entity.Photo(13493284826400).review) {
            }
          }
        }
      }
    }

[DEBUG] 2025-10-15 12:02:55.416 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
[DEBUG] 2025-10-15 12:02:55.416 [main] results - Initializer list:
	  org.hungrybadger.entity.Photo(13493284826400).review -> EntitySelectFetchInitializer(org.hungrybadger.entity.Photo(13493284826400).review)@1895373539 (ToOneAttributeMapping(NavigableRole[org.hungrybadger.entity.Photo.review])@45681857)
	  org.hungrybadger.entity.Photo(13493284826400) -> EntityResultInitializer(org.hungrybadger.entity.Photo(13493284826400))@1612554042 (SingleTableEntityPersister(org.hungrybadger.entity.Photo))

[DEBUG] 2025-10-15 12:02:55.416 [main] SQL - select p1_0.id,p1_0.image_path,p1_0.review_id from photo p1_0 where p1_0.image_path=?
[DEBUG] 2025-10-15 12:02:55.418 [main] results - Extracted JDBC value [0] - [2]
[DEBUG] 2025-10-15 12:02:55.418 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Photo(13493284826400)): 2
[DEBUG] 2025-10-15 12:02:55.419 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Photo(13493284826400)#2] : 615280623
[DEBUG] 2025-10-15 12:02:55.419 [main] results - Extracted JDBC value [2] - [2]
[DEBUG] 2025-10-15 12:02:55.419 [main] entity - (EntitySelectFetchInitializer) Invoking session#internalLoad for entity (org.hungrybadger.entity.Photo(13493284826400).review#2) : 2
[DEBUG] 2025-10-15 12:02:55.419 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2025-10-15 12:02:55.419 [main] results - Initializer list:
	  org.hungrybadger.entity.Review.photos -> BagInitializer(org.hungrybadger.entity.Review.photos)@1018466593 (PluralAttribute(org.hungrybadger.entity.Review.photos))
	  org.hungrybadger.entity.Review.photos.{element} -> EntityJoinedFetchInitializer(org.hungrybadger.entity.Review.photos.{element})@578523767 (EntityCollectionPart(org.hungrybadger.entity.Review.photos#{element})@1403032934)
	  org.hungrybadger.entity.Review -> EntityResultInitializer(org.hungrybadger.entity.Review)@1279399383 (SingleTableEntityPersister(org.hungrybadger.entity.Review))

[DEBUG] 2025-10-15 12:02:55.419 [main] SQL - select r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name,p1_0.review_id,p1_0.id,p1_0.image_path from review r1_0 left join photo p1_0 on r1_0.id=p1_0.review_id where r1_0.id=?
[DEBUG] 2025-10-15 12:02:55.421 [main] results - Extracted JDBC value [6] - [2]
[DEBUG] 2025-10-15 12:02:55.421 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review.photos.{element}): 2
[DEBUG] 2025-10-15 12:02:55.421 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review): 2
[DEBUG] 2025-10-15 12:02:55.421 [main] results - Extracted JDBC value [0] - [2]
[DEBUG] 2025-10-15 12:02:55.421 [main] collection - (BagInitializer) Current row collection key : org.hungrybadger.entity.Review.photos#2
[DEBUG] 2025-10-15 12:02:55.421 [main] results - Extracted JDBC value [5] - [2]
[DEBUG] 2025-10-15 12:02:55.421 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Review#2] : 82565330
[DEBUG] 2025-10-15 12:02:55.421 [main] collection - (BagInitializer) Created new collection wrapper [org.hungrybadger.entity.Review.photos#2] : org.hibernate.collection.spi.PersistentBag@1151617540
[DEBUG] 2025-10-15 12:02:55.421 [main] collection - (BagInitializer) Responsible for loading collection [org.hungrybadger.entity.Review.photos#2] : org.hibernate.collection.spi.PersistentBag@1151617540
[DEBUG] 2025-10-15 12:02:55.421 [main] collection - (BagInitializer) Reading element from row for collection [org.hungrybadger.entity.Review.photos#2] -> org.hibernate.collection.spi.PersistentBag@1151617540
[DEBUG] 2025-10-15 12:02:55.421 [main] results - Extracted JDBC value [1] - [American]
[DEBUG] 2025-10-15 12:02:55.422 [main] results - Extracted JDBC value [2] - [Wraps, good after a long day]
[DEBUG] 2025-10-15 12:02:55.422 [main] results - Extracted JDBC value [3] - [4]
[DEBUG] 2025-10-15 12:02:55.422 [main] results - Extracted JDBC value [4] - [Conrads]
[DEBUG] 2025-10-15 12:02:55.422 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Review#2
[DEBUG] 2025-10-15 12:02:55.422 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5a63fa71
[DEBUG] 2025-10-15 12:02:55.422 [main] ResultsHelper - Collection fully initialized: [org.hungrybadger.entity.Review.photos#2]
[DEBUG] 2025-10-15 12:02:55.422 [main] entity - (EntitySelectFetchInitializer) Entity [org.hungrybadger.entity.Photo(13493284826400).review#2] : 2 has being loaded by session.internalLoad.
[DEBUG] 2025-10-15 12:02:55.422 [main] results - Extracted JDBC value [1] - [images/conrads_wrap.jpg]
[DEBUG] 2025-10-15 12:02:55.422 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Photo(13493284826400)#2
[DEBUG] 2025-10-15 12:02:55.422 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@a6fc1bc
[DEBUG] 2025-10-15 12:02:55.422 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 12:02:55.423 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 12:02:55.513 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2025-10-15 12:02:55.513 [main] results - Initializer list:
	  org.hungrybadger.entity.Photo.review -> EntityJoinedFetchInitializer(org.hungrybadger.entity.Photo.review)@1937765828 (ToOneAttributeMapping(NavigableRole[org.hungrybadger.entity.Photo.review])@45681857)
	  org.hungrybadger.entity.Photo.review.photos -> SelectEagerCollectionInitializer(org.hungrybadger.entity.Photo.review.photos)@132753462 (PluralAttribute(org.hungrybadger.entity.Review.photos))
	  org.hungrybadger.entity.Photo -> EntityResultInitializer(org.hungrybadger.entity.Photo)@307230285 (SingleTableEntityPersister(org.hungrybadger.entity.Photo))

[DEBUG] 2025-10-15 12:02:55.513 [main] SQL - select p1_0.id,p1_0.image_path,p1_0.review_id,r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from photo p1_0 join review r1_0 on r1_0.id=p1_0.review_id where p1_0.id=?
[DEBUG] 2025-10-15 12:02:55.515 [main] results - Extracted JDBC value [3] - [1]
[DEBUG] 2025-10-15 12:02:55.515 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.hungrybadger.entity.Photo.review): 1
[DEBUG] 2025-10-15 12:02:55.515 [main] results - Extracted JDBC value [2] - [1]
[DEBUG] 2025-10-15 12:02:55.515 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Photo): 1
[DEBUG] 2025-10-15 12:02:55.516 [main] collection - (SelectEagerCollectionInitializer) Current row collection key : org.hungrybadger.entity.Photo.review.photos#1
[DEBUG] 2025-10-15 12:02:55.516 [main] entity - (EntityJoinedFetchInitializer) Created new entity instance [org.hungrybadger.entity.Photo.review#1] : 661941342
[DEBUG] 2025-10-15 12:02:55.516 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Photo#1] : 1413136929
[DEBUG] 2025-10-15 12:02:55.516 [main] results - Extracted JDBC value [4] - [Japanese]
[DEBUG] 2025-10-15 12:02:55.516 [main] results - Extracted JDBC value [5] - [Good cheap rolls. Togo or sit down are both great]
[DEBUG] 2025-10-15 12:02:55.516 [main] results - Extracted JDBC value [6] - [5]
[DEBUG] 2025-10-15 12:02:55.516 [main] results - Extracted JDBC value [7] - [Sushi Express]
[DEBUG] 2025-10-15 12:02:55.516 [main] entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.hungrybadger.entity.Photo.review#1
[DEBUG] 2025-10-15 12:02:55.516 [main] results - Extracted JDBC value [1] - [images/sushi_express_rolls.jpg]
[DEBUG] 2025-10-15 12:02:55.516 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Photo#1
[DEBUG] 2025-10-15 12:02:55.516 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@50e1f3fc
[DEBUG] 2025-10-15 12:02:55.516 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2025-10-15 12:02:55.517 [main] results - Initializer list:
	  org.hungrybadger.entity.Review.photos.{element} -> EntityJoinedFetchInitializer(org.hungrybadger.entity.Review.photos.{element})@1416852258 (EntityCollectionPart(org.hungrybadger.entity.Review.photos#{element})@1403032934)
	  org.hungrybadger.entity.Review.photos.{element}.review -> EntitySelectFetchInitializer(org.hungrybadger.entity.Review.photos.{element}.review)@1457162311 (ToOneAttributeMapping(NavigableRole[org.hungrybadger.entity.Photo.review])@45681857)
	  org.hungrybadger.entity.Review.photos -> BagInitializer(org.hungrybadger.entity.Review.photos)@1931723660 (PluralAttribute(org.hungrybadger.entity.Review.photos))

[DEBUG] 2025-10-15 12:02:55.517 [main] SQL - select p1_0.review_id,p1_0.id,p1_0.image_path from photo p1_0 where p1_0.review_id=?
[DEBUG] 2025-10-15 12:02:55.517 [main] results - Extracted JDBC value [1] - [1]
[DEBUG] 2025-10-15 12:02:55.517 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review.photos.{element}): 1
[DEBUG] 2025-10-15 12:02:55.517 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2025-10-15 12:02:55.517 [main] collection - (BagInitializer) Current row collection key : org.hungrybadger.entity.Review.photos#1
[DEBUG] 2025-10-15 12:02:55.517 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2025-10-15 12:02:55.517 [main] collection - (BagInitializer) Responsible for loading collection [org.hungrybadger.entity.Review.photos#1] : org.hibernate.collection.spi.PersistentBag@577828237
[DEBUG] 2025-10-15 12:02:55.517 [main] collection - (BagInitializer) Reading element from row for collection [org.hungrybadger.entity.Review.photos#1] -> org.hibernate.collection.spi.PersistentBag@577828237
[DEBUG] 2025-10-15 12:02:55.518 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@6f4fc83f
[DEBUG] 2025-10-15 12:02:55.518 [main] ResultsHelper - Collection fully initialized: [org.hungrybadger.entity.Review.photos#1]
[DEBUG] 2025-10-15 12:02:55.518 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 12:02:55.518 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 12:02:55.620 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2025-10-15 12:02:55.620 [main] results - Initializer list:
	  org.hungrybadger.entity.Photo.review -> EntityJoinedFetchInitializer(org.hungrybadger.entity.Photo.review)@1535729270 (ToOneAttributeMapping(NavigableRole[org.hungrybadger.entity.Photo.review])@45681857)
	  org.hungrybadger.entity.Photo.review.photos -> SelectEagerCollectionInitializer(org.hungrybadger.entity.Photo.review.photos)@1948456514 (PluralAttribute(org.hungrybadger.entity.Review.photos))
	  org.hungrybadger.entity.Photo -> EntityResultInitializer(org.hungrybadger.entity.Photo)@1248832688 (SingleTableEntityPersister(org.hungrybadger.entity.Photo))

[DEBUG] 2025-10-15 12:02:55.620 [main] SQL - select p1_0.id,p1_0.image_path,p1_0.review_id,r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from photo p1_0 join review r1_0 on r1_0.id=p1_0.review_id where p1_0.id=?
[DEBUG] 2025-10-15 12:02:55.622 [main] results - Extracted JDBC value [3] - [1]
[DEBUG] 2025-10-15 12:02:55.622 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.hungrybadger.entity.Photo.review): 1
[DEBUG] 2025-10-15 12:02:55.623 [main] results - Extracted JDBC value [2] - [1]
[DEBUG] 2025-10-15 12:02:55.623 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Photo): 1
[DEBUG] 2025-10-15 12:02:55.623 [main] collection - (SelectEagerCollectionInitializer) Current row collection key : org.hungrybadger.entity.Photo.review.photos#1
[DEBUG] 2025-10-15 12:02:55.623 [main] entity - (EntityJoinedFetchInitializer) Created new entity instance [org.hungrybadger.entity.Photo.review#1] : 1015503057
[DEBUG] 2025-10-15 12:02:55.623 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Photo#1] : 376299447
[DEBUG] 2025-10-15 12:02:55.623 [main] results - Extracted JDBC value [4] - [Japanese]
[DEBUG] 2025-10-15 12:02:55.623 [main] results - Extracted JDBC value [5] - [Good cheap rolls. Togo or sit down are both great]
[DEBUG] 2025-10-15 12:02:55.623 [main] results - Extracted JDBC value [6] - [5]
[DEBUG] 2025-10-15 12:02:55.623 [main] results - Extracted JDBC value [7] - [Sushi Express]
[DEBUG] 2025-10-15 12:02:55.623 [main] entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.hungrybadger.entity.Photo.review#1
[DEBUG] 2025-10-15 12:02:55.623 [main] results - Extracted JDBC value [1] - [images/sushi_express_rolls.jpg]
[DEBUG] 2025-10-15 12:02:55.623 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Photo#1
[DEBUG] 2025-10-15 12:02:55.623 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@57b3d869
[DEBUG] 2025-10-15 12:02:55.623 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2025-10-15 12:02:55.624 [main] results - Initializer list:
	  org.hungrybadger.entity.Review.photos.{element} -> EntityJoinedFetchInitializer(org.hungrybadger.entity.Review.photos.{element})@1374962590 (EntityCollectionPart(org.hungrybadger.entity.Review.photos#{element})@1403032934)
	  org.hungrybadger.entity.Review.photos.{element}.review -> EntitySelectFetchInitializer(org.hungrybadger.entity.Review.photos.{element}.review)@689749616 (ToOneAttributeMapping(NavigableRole[org.hungrybadger.entity.Photo.review])@45681857)
	  org.hungrybadger.entity.Review.photos -> BagInitializer(org.hungrybadger.entity.Review.photos)@1810113242 (PluralAttribute(org.hungrybadger.entity.Review.photos))

[DEBUG] 2025-10-15 12:02:55.624 [main] SQL - select p1_0.review_id,p1_0.id,p1_0.image_path from photo p1_0 where p1_0.review_id=?
[DEBUG] 2025-10-15 12:02:55.624 [main] results - Extracted JDBC value [1] - [1]
[DEBUG] 2025-10-15 12:02:55.624 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review.photos.{element}): 1
[DEBUG] 2025-10-15 12:02:55.624 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2025-10-15 12:02:55.624 [main] collection - (BagInitializer) Current row collection key : org.hungrybadger.entity.Review.photos#1
[DEBUG] 2025-10-15 12:02:55.624 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2025-10-15 12:02:55.624 [main] collection - (BagInitializer) Responsible for loading collection [org.hungrybadger.entity.Review.photos#1] : org.hibernate.collection.spi.PersistentBag@1571025706
[DEBUG] 2025-10-15 12:02:55.624 [main] collection - (BagInitializer) Reading element from row for collection [org.hungrybadger.entity.Review.photos#1] -> org.hibernate.collection.spi.PersistentBag@1571025706
[DEBUG] 2025-10-15 12:02:55.625 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@7e94de5f
[DEBUG] 2025-10-15 12:02:55.625 [main] ResultsHelper - Collection fully initialized: [org.hungrybadger.entity.Review.photos#1]
[DEBUG] 2025-10-15 12:02:55.625 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 12:02:55.625 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 12:02:55.625 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2025-10-15 12:02:55.625 [main] TransactionImpl - begin
[DEBUG] 2025-10-15 12:02:55.629 [main] create - Created new SQL alias : p1_0
[DEBUG] 2025-10-15 12:02:55.629 [main] create - Registration of TableGroup [StandardTableGroup(org.hungrybadger.entity.Photo)] with identifierForTableGroup [org.hungrybadger.entity.Photo] for NavigablePath [org.hungrybadger.entity.Photo] 
[DEBUG] 2025-10-15 12:02:55.629 [main] create - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4b511e61] with identifierForTableGroup [org.hungrybadger.entity.Photo.review] for NavigablePath [org.hungrybadger.entity.Photo.review] 
[DEBUG] 2025-10-15 12:02:55.629 [main] create - Created new SQL alias : r1_0
[DEBUG] 2025-10-15 12:02:55.629 [main] AST - DomainResult Graph:
 \-EntityResultImpl [org.hungrybadger.entity.Photo]
 |  +-BasicFetch [org.hungrybadger.entity.Photo.imagePath]
 |  \-EntityFetchJoinedImpl [org.hungrybadger.entity.Photo.review]

[DEBUG] 2025-10-15 12:02:55.629 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : org.hungrybadger.entity.Photo) {
          primaryTableReference : photo as p1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : org.hungrybadger.entity.Photo.review) {
              primaryTableReference : review as r1_0
            }
          }
        }
      }
    }

[DEBUG] 2025-10-15 12:02:55.630 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2025-10-15 12:02:55.630 [main] results - Initializer list:
	  org.hungrybadger.entity.Photo.review -> EntityJoinedFetchInitializer(org.hungrybadger.entity.Photo.review)@1818827263 (ToOneAttributeMapping(NavigableRole[org.hungrybadger.entity.Photo.review])@45681857)
	  org.hungrybadger.entity.Photo.review.photos -> SelectEagerCollectionInitializer(org.hungrybadger.entity.Photo.review.photos)@1575171535 (PluralAttribute(org.hungrybadger.entity.Review.photos))
	  org.hungrybadger.entity.Photo -> EntityResultInitializer(org.hungrybadger.entity.Photo)@503486980 (SingleTableEntityPersister(org.hungrybadger.entity.Photo))

[DEBUG] 2025-10-15 12:02:55.630 [main] SQL - select p1_0.id,p1_0.image_path,p1_0.review_id,r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from photo p1_0 join review r1_0 on r1_0.id=p1_0.review_id where p1_0.id=?
[DEBUG] 2025-10-15 12:02:55.631 [main] results - Extracted JDBC value [3] - [1]
[DEBUG] 2025-10-15 12:02:55.631 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.hungrybadger.entity.Photo.review): 1
[DEBUG] 2025-10-15 12:02:55.631 [main] results - Extracted JDBC value [2] - [1]
[DEBUG] 2025-10-15 12:02:55.631 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Photo): 1
[DEBUG] 2025-10-15 12:02:55.631 [main] collection - (SelectEagerCollectionInitializer) Current row collection key : org.hungrybadger.entity.Photo.review.photos#1
[DEBUG] 2025-10-15 12:02:55.631 [main] entity - (EntityJoinedFetchInitializer) Created new entity instance [org.hungrybadger.entity.Photo.review#1] : 208108926
[DEBUG] 2025-10-15 12:02:55.631 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Photo#1] : 559546980
[DEBUG] 2025-10-15 12:02:55.631 [main] results - Extracted JDBC value [4] - [Japanese]
[DEBUG] 2025-10-15 12:02:55.631 [main] results - Extracted JDBC value [5] - [Good cheap rolls. Togo or sit down are both great]
[DEBUG] 2025-10-15 12:02:55.631 [main] results - Extracted JDBC value [6] - [5]
[DEBUG] 2025-10-15 12:02:55.631 [main] results - Extracted JDBC value [7] - [Sushi Express]
[DEBUG] 2025-10-15 12:02:55.631 [main] entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.hungrybadger.entity.Photo.review#1
[DEBUG] 2025-10-15 12:02:55.631 [main] results - Extracted JDBC value [1] - [images/sushi_express_rolls.jpg]
[DEBUG] 2025-10-15 12:02:55.632 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Photo#1
[DEBUG] 2025-10-15 12:02:55.632 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@103478b8
[DEBUG] 2025-10-15 12:02:55.632 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2025-10-15 12:02:55.632 [main] results - Initializer list:
	  org.hungrybadger.entity.Review.photos.{element} -> EntityJoinedFetchInitializer(org.hungrybadger.entity.Review.photos.{element})@655326029 (EntityCollectionPart(org.hungrybadger.entity.Review.photos#{element})@1403032934)
	  org.hungrybadger.entity.Review.photos.{element}.review -> EntitySelectFetchInitializer(org.hungrybadger.entity.Review.photos.{element}.review)@1454834922 (ToOneAttributeMapping(NavigableRole[org.hungrybadger.entity.Photo.review])@45681857)
	  org.hungrybadger.entity.Review.photos -> BagInitializer(org.hungrybadger.entity.Review.photos)@179622586 (PluralAttribute(org.hungrybadger.entity.Review.photos))

[DEBUG] 2025-10-15 12:02:55.632 [main] SQL - select p1_0.review_id,p1_0.id,p1_0.image_path from photo p1_0 where p1_0.review_id=?
[DEBUG] 2025-10-15 12:02:55.633 [main] results - Extracted JDBC value [1] - [1]
[DEBUG] 2025-10-15 12:02:55.633 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review.photos.{element}): 1
[DEBUG] 2025-10-15 12:02:55.633 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2025-10-15 12:02:55.633 [main] collection - (BagInitializer) Current row collection key : org.hungrybadger.entity.Review.photos#1
[DEBUG] 2025-10-15 12:02:55.633 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2025-10-15 12:02:55.633 [main] collection - (BagInitializer) Responsible for loading collection [org.hungrybadger.entity.Review.photos#1] : org.hibernate.collection.spi.PersistentBag@1166224261
[DEBUG] 2025-10-15 12:02:55.633 [main] collection - (BagInitializer) Reading element from row for collection [org.hungrybadger.entity.Review.photos#1] -> org.hibernate.collection.spi.PersistentBag@1166224261
[DEBUG] 2025-10-15 12:02:55.633 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@351c6341
[DEBUG] 2025-10-15 12:02:55.633 [main] ResultsHelper - Collection fully initialized: [org.hungrybadger.entity.Review.photos#1]
[DEBUG] 2025-10-15 12:02:55.634 [main] TransactionImpl - committing
[DEBUG] 2025-10-15 12:02:55.635 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2025-10-15 12:02:55.635 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2025-10-15 12:02:55.636 [main] Collections - Collection found: [org.hungrybadger.entity.Review.photos#1], was: [org.hungrybadger.entity.Review.photos#1] (initialized)
[DEBUG] 2025-10-15 12:02:55.637 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 2 objects
[DEBUG] 2025-10-15 12:02:55.637 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2025-10-15 12:02:55.637 [main] EntityPrinter - Listing entities:
[DEBUG] 2025-10-15 12:02:55.637 [main] EntityPrinter - org.hungrybadger.entity.Photo{imagePath=/images/sushi_updated.jpg, review=org.hungrybadger.entity.Review#1, id=1}
[DEBUG] 2025-10-15 12:02:55.637 [main] EntityPrinter - org.hungrybadger.entity.Review{personalNotes=Good cheap rolls. Togo or sit down are both great, personalRating=5, restaurantName=Sushi Express, id=1, cuisineType=Japanese, photos=[org.hungrybadger.entity.Photo#1]}
[DEBUG] 2025-10-15 12:02:55.640 [main] SQL - update photo set image_path=?,review_id=? where id=?
[DEBUG] 2025-10-15 12:02:55.644 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 12:02:55.644 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 12:02:55.644 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2025-10-15 12:02:55.644 [main] results - Initializer list:
	  org.hungrybadger.entity.Photo.review -> EntityJoinedFetchInitializer(org.hungrybadger.entity.Photo.review)@1173897563 (ToOneAttributeMapping(NavigableRole[org.hungrybadger.entity.Photo.review])@45681857)
	  org.hungrybadger.entity.Photo.review.photos -> SelectEagerCollectionInitializer(org.hungrybadger.entity.Photo.review.photos)@282850912 (PluralAttribute(org.hungrybadger.entity.Review.photos))
	  org.hungrybadger.entity.Photo -> EntityResultInitializer(org.hungrybadger.entity.Photo)@1772825962 (SingleTableEntityPersister(org.hungrybadger.entity.Photo))

[DEBUG] 2025-10-15 12:02:55.644 [main] SQL - select p1_0.id,p1_0.image_path,p1_0.review_id,r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from photo p1_0 join review r1_0 on r1_0.id=p1_0.review_id where p1_0.id=?
[DEBUG] 2025-10-15 12:02:55.645 [main] results - Extracted JDBC value [3] - [1]
[DEBUG] 2025-10-15 12:02:55.645 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.hungrybadger.entity.Photo.review): 1
[DEBUG] 2025-10-15 12:02:55.645 [main] results - Extracted JDBC value [2] - [1]
[DEBUG] 2025-10-15 12:02:55.646 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Photo): 1
[DEBUG] 2025-10-15 12:02:55.646 [main] collection - (SelectEagerCollectionInitializer) Current row collection key : org.hungrybadger.entity.Photo.review.photos#1
[DEBUG] 2025-10-15 12:02:55.646 [main] entity - (EntityJoinedFetchInitializer) Created new entity instance [org.hungrybadger.entity.Photo.review#1] : 1610429917
[DEBUG] 2025-10-15 12:02:55.646 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Photo#1] : 823790002
[DEBUG] 2025-10-15 12:02:55.646 [main] results - Extracted JDBC value [4] - [Japanese]
[DEBUG] 2025-10-15 12:02:55.646 [main] results - Extracted JDBC value [5] - [Good cheap rolls. Togo or sit down are both great]
[DEBUG] 2025-10-15 12:02:55.646 [main] results - Extracted JDBC value [6] - [5]
[DEBUG] 2025-10-15 12:02:55.646 [main] results - Extracted JDBC value [7] - [Sushi Express]
[DEBUG] 2025-10-15 12:02:55.646 [main] entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.hungrybadger.entity.Photo.review#1
[DEBUG] 2025-10-15 12:02:55.646 [main] results - Extracted JDBC value [1] - [/images/sushi_updated.jpg]
[DEBUG] 2025-10-15 12:02:55.646 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Photo#1
[DEBUG] 2025-10-15 12:02:55.646 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@301d84f6
[DEBUG] 2025-10-15 12:02:55.646 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2025-10-15 12:02:55.646 [main] results - Initializer list:
	  org.hungrybadger.entity.Review.photos.{element} -> EntityJoinedFetchInitializer(org.hungrybadger.entity.Review.photos.{element})@116919541 (EntityCollectionPart(org.hungrybadger.entity.Review.photos#{element})@1403032934)
	  org.hungrybadger.entity.Review.photos.{element}.review -> EntitySelectFetchInitializer(org.hungrybadger.entity.Review.photos.{element}.review)@1733218817 (ToOneAttributeMapping(NavigableRole[org.hungrybadger.entity.Photo.review])@45681857)
	  org.hungrybadger.entity.Review.photos -> BagInitializer(org.hungrybadger.entity.Review.photos)@1303192419 (PluralAttribute(org.hungrybadger.entity.Review.photos))

[DEBUG] 2025-10-15 12:02:55.646 [main] SQL - select p1_0.review_id,p1_0.id,p1_0.image_path from photo p1_0 where p1_0.review_id=?
[DEBUG] 2025-10-15 12:02:55.647 [main] results - Extracted JDBC value [1] - [1]
[DEBUG] 2025-10-15 12:02:55.647 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review.photos.{element}): 1
[DEBUG] 2025-10-15 12:02:55.647 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2025-10-15 12:02:55.647 [main] collection - (BagInitializer) Current row collection key : org.hungrybadger.entity.Review.photos#1
[DEBUG] 2025-10-15 12:02:55.647 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2025-10-15 12:02:55.647 [main] collection - (BagInitializer) Responsible for loading collection [org.hungrybadger.entity.Review.photos#1] : org.hibernate.collection.spi.PersistentBag@1286393023
[DEBUG] 2025-10-15 12:02:55.647 [main] collection - (BagInitializer) Reading element from row for collection [org.hungrybadger.entity.Review.photos#1] -> org.hibernate.collection.spi.PersistentBag@1286393023
[DEBUG] 2025-10-15 12:02:55.647 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@6dd2e453
[DEBUG] 2025-10-15 12:02:55.647 [main] ResultsHelper - Collection fully initialized: [org.hungrybadger.entity.Review.photos#1]
[DEBUG] 2025-10-15 12:02:55.647 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 12:02:55.648 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 12:02:55.747 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2025-10-15 12:02:55.748 [main] results - Initializer list:
	  org.hungrybadger.entity.Review.photos -> BagInitializer(org.hungrybadger.entity.Review.photos)@1458088096 (PluralAttribute(org.hungrybadger.entity.Review.photos))
	  org.hungrybadger.entity.Review.photos.{element} -> EntityJoinedFetchInitializer(org.hungrybadger.entity.Review.photos.{element})@1618043679 (EntityCollectionPart(org.hungrybadger.entity.Review.photos#{element})@1403032934)
	  org.hungrybadger.entity.Review -> EntityResultInitializer(org.hungrybadger.entity.Review)@748761773 (SingleTableEntityPersister(org.hungrybadger.entity.Review))

[DEBUG] 2025-10-15 12:02:55.748 [main] SQL - select r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name,p1_0.review_id,p1_0.id,p1_0.image_path from review r1_0 left join photo p1_0 on r1_0.id=p1_0.review_id where r1_0.id=?
[DEBUG] 2025-10-15 12:02:55.751 [main] results - Extracted JDBC value [6] - [1]
[DEBUG] 2025-10-15 12:02:55.751 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review.photos.{element}): 1
[DEBUG] 2025-10-15 12:02:55.751 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review): 1
[DEBUG] 2025-10-15 12:02:55.751 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2025-10-15 12:02:55.751 [main] collection - (BagInitializer) Current row collection key : org.hungrybadger.entity.Review.photos#1
[DEBUG] 2025-10-15 12:02:55.751 [main] results - Extracted JDBC value [5] - [1]
[DEBUG] 2025-10-15 12:02:55.752 [main] entity - (EntityJoinedFetchInitializer) Created new entity instance [org.hungrybadger.entity.Review.photos.{element}#1] : 1900120650
[DEBUG] 2025-10-15 12:02:55.752 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Review#1] : 1743583213
[DEBUG] 2025-10-15 12:02:55.753 [main] collection - (BagInitializer) Created new collection wrapper [org.hungrybadger.entity.Review.photos#1] : org.hibernate.collection.spi.PersistentBag@1775247809
[DEBUG] 2025-10-15 12:02:55.753 [main] collection - (BagInitializer) Responsible for loading collection [org.hungrybadger.entity.Review.photos#1] : org.hibernate.collection.spi.PersistentBag@1775247809
[DEBUG] 2025-10-15 12:02:55.753 [main] results - Extracted JDBC value [7] - [images/sushi_express_rolls.jpg]
[DEBUG] 2025-10-15 12:02:55.753 [main] results - Extracted JDBC value [5] - [1]
[DEBUG] 2025-10-15 12:02:55.753 [main] entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.hungrybadger.entity.Review.photos.{element}#1
[DEBUG] 2025-10-15 12:02:55.753 [main] collection - (BagInitializer) Reading element from row for collection [org.hungrybadger.entity.Review.photos#1] -> org.hibernate.collection.spi.PersistentBag@1775247809
[DEBUG] 2025-10-15 12:02:55.753 [main] results - Extracted JDBC value [1] - [Japanese]
[DEBUG] 2025-10-15 12:02:55.753 [main] results - Extracted JDBC value [2] - [Good cheap rolls. Togo or sit down are both great]
[DEBUG] 2025-10-15 12:02:55.753 [main] results - Extracted JDBC value [3] - [5]
[DEBUG] 2025-10-15 12:02:55.754 [main] results - Extracted JDBC value [4] - [Sushi Express]
[DEBUG] 2025-10-15 12:02:55.754 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Review#1
[DEBUG] 2025-10-15 12:02:55.754 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6d5508a5
[DEBUG] 2025-10-15 12:02:55.754 [main] ResultsHelper - Collection fully initialized: [org.hungrybadger.entity.Review.photos#1]
[DEBUG] 2025-10-15 12:02:55.754 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 12:02:55.755 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2025-10-15 12:02:55.755 [main] TransactionImpl - begin
[DEBUG] 2025-10-15 12:02:55.759 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2025-10-15 12:02:55.761 [main] SQL - insert into photo (image_path,review_id) values (?,?)
[DEBUG] 2025-10-15 12:02:55.767 [main] IdentifierGeneratorHelper - Natively generated identity (org.hungrybadger.entity.Photo) : 5
[DEBUG] 2025-10-15 12:02:55.767 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2025-10-15 12:02:55.768 [main] ResourceRegistryStandardImpl - Exception clearing maxRows/queryTimeout [You can't operate on a closed Statement!!!]
[DEBUG] 2025-10-15 12:02:55.770 [main] TransactionImpl - committing
[DEBUG] 2025-10-15 12:02:55.770 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2025-10-15 12:02:55.770 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2025-10-15 12:02:55.770 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2025-10-15 12:02:55.770 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2025-10-15 12:02:55.770 [main] EntityPrinter - Listing entities:
[DEBUG] 2025-10-15 12:02:55.771 [main] EntityPrinter - org.hungrybadger.entity.Photo{imagePath=images/new_photo.jpg, review=org.hungrybadger.entity.Review#1, id=5}
[DEBUG] 2025-10-15 12:02:55.773 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 12:02:55.773 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 12:02:55.774 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2025-10-15 12:02:55.774 [main] results - Initializer list:
	  org.hungrybadger.entity.Photo.review -> EntityJoinedFetchInitializer(org.hungrybadger.entity.Photo.review)@273401463 (ToOneAttributeMapping(NavigableRole[org.hungrybadger.entity.Photo.review])@45681857)
	  org.hungrybadger.entity.Photo.review.photos -> SelectEagerCollectionInitializer(org.hungrybadger.entity.Photo.review.photos)@62759408 (PluralAttribute(org.hungrybadger.entity.Review.photos))
	  org.hungrybadger.entity.Photo -> EntityResultInitializer(org.hungrybadger.entity.Photo)@571598641 (SingleTableEntityPersister(org.hungrybadger.entity.Photo))

[DEBUG] 2025-10-15 12:02:55.774 [main] SQL - select p1_0.id,p1_0.image_path,p1_0.review_id,r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from photo p1_0 join review r1_0 on r1_0.id=p1_0.review_id where p1_0.id=?
[DEBUG] 2025-10-15 12:02:55.776 [main] results - Extracted JDBC value [3] - [1]
[DEBUG] 2025-10-15 12:02:55.776 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.hungrybadger.entity.Photo.review): 1
[DEBUG] 2025-10-15 12:02:55.776 [main] results - Extracted JDBC value [2] - [1]
[DEBUG] 2025-10-15 12:02:55.776 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Photo): 5
[DEBUG] 2025-10-15 12:02:55.776 [main] collection - (SelectEagerCollectionInitializer) Current row collection key : org.hungrybadger.entity.Photo.review.photos#1
[DEBUG] 2025-10-15 12:02:55.776 [main] entity - (EntityJoinedFetchInitializer) Created new entity instance [org.hungrybadger.entity.Photo.review#1] : 456897159
[DEBUG] 2025-10-15 12:02:55.776 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Photo#5] : 132930221
[DEBUG] 2025-10-15 12:02:55.776 [main] results - Extracted JDBC value [4] - [Japanese]
[DEBUG] 2025-10-15 12:02:55.776 [main] results - Extracted JDBC value [5] - [Good cheap rolls. Togo or sit down are both great]
[DEBUG] 2025-10-15 12:02:55.776 [main] results - Extracted JDBC value [6] - [5]
[DEBUG] 2025-10-15 12:02:55.776 [main] results - Extracted JDBC value [7] - [Sushi Express]
[DEBUG] 2025-10-15 12:02:55.776 [main] entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.hungrybadger.entity.Photo.review#1
[DEBUG] 2025-10-15 12:02:55.776 [main] results - Extracted JDBC value [1] - [images/new_photo.jpg]
[DEBUG] 2025-10-15 12:02:55.776 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Photo#5
[DEBUG] 2025-10-15 12:02:55.776 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5e62ca19
[DEBUG] 2025-10-15 12:02:55.777 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2025-10-15 12:02:55.777 [main] results - Initializer list:
	  org.hungrybadger.entity.Review.photos.{element} -> EntityJoinedFetchInitializer(org.hungrybadger.entity.Review.photos.{element})@411825368 (EntityCollectionPart(org.hungrybadger.entity.Review.photos#{element})@1403032934)
	  org.hungrybadger.entity.Review.photos.{element}.review -> EntitySelectFetchInitializer(org.hungrybadger.entity.Review.photos.{element}.review)@2111302742 (ToOneAttributeMapping(NavigableRole[org.hungrybadger.entity.Photo.review])@45681857)
	  org.hungrybadger.entity.Review.photos -> BagInitializer(org.hungrybadger.entity.Review.photos)@1697174329 (PluralAttribute(org.hungrybadger.entity.Review.photos))

[DEBUG] 2025-10-15 12:02:55.777 [main] SQL - select p1_0.review_id,p1_0.id,p1_0.image_path from photo p1_0 where p1_0.review_id=?
[DEBUG] 2025-10-15 12:02:55.778 [main] results - Extracted JDBC value [1] - [1]
[DEBUG] 2025-10-15 12:02:55.778 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review.photos.{element}): 1
[DEBUG] 2025-10-15 12:02:55.778 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2025-10-15 12:02:55.778 [main] collection - (BagInitializer) Current row collection key : org.hungrybadger.entity.Review.photos#1
[DEBUG] 2025-10-15 12:02:55.778 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2025-10-15 12:02:55.778 [main] entity - (EntityJoinedFetchInitializer) Created new entity instance [org.hungrybadger.entity.Review.photos.{element}#1] : 474094351
[DEBUG] 2025-10-15 12:02:55.778 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2025-10-15 12:02:55.778 [main] entity - (EntitySelectFetchInitializer) Found existing loading entry [org.hungrybadger.entity.Review.photos.{element}.review#1] - using loading instance
[DEBUG] 2025-10-15 12:02:55.778 [main] collection - (BagInitializer) Responsible for loading collection [org.hungrybadger.entity.Review.photos#1] : org.hibernate.collection.spi.PersistentBag@1650415378
[DEBUG] 2025-10-15 12:02:55.778 [main] results - Extracted JDBC value [2] - [images/sushi_express_rolls.jpg]
[DEBUG] 2025-10-15 12:02:55.778 [main] entity - (EntityJoinedFetchInitializer) Done materializing entityInstance : org.hungrybadger.entity.Review.photos.{element}#1
[DEBUG] 2025-10-15 12:02:55.778 [main] collection - (BagInitializer) Reading element from row for collection [org.hungrybadger.entity.Review.photos#1] -> org.hibernate.collection.spi.PersistentBag@1650415378
[DEBUG] 2025-10-15 12:02:55.778 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@4ce18cec
[DEBUG] 2025-10-15 12:02:55.778 [main] results - Extracted JDBC value [1] - [5]
[DEBUG] 2025-10-15 12:02:55.778 [main] entity - (EntityJoinedFetchInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review.photos.{element}): 5
[DEBUG] 2025-10-15 12:02:55.778 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2025-10-15 12:02:55.778 [main] collection - (BagInitializer) Current row collection key : org.hungrybadger.entity.Review.photos#1
[DEBUG] 2025-10-15 12:02:55.778 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2025-10-15 12:02:55.778 [main] collection - (BagInitializer) Found existing loading collection entry [org.hungrybadger.entity.Review.photos#1]; using loading collection instance - org.hibernate.collection.spi.PersistentBag@1650415378
[DEBUG] 2025-10-15 12:02:55.778 [main] collection - (BagInitializer) Responsible for loading collection [org.hungrybadger.entity.Review.photos#1] : org.hibernate.collection.spi.PersistentBag@1650415378
[DEBUG] 2025-10-15 12:02:55.778 [main] collection - (BagInitializer) Reading element from row for collection [org.hungrybadger.entity.Review.photos#1] -> org.hibernate.collection.spi.PersistentBag@1650415378
[DEBUG] 2025-10-15 12:02:55.778 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.EagerCollectionAssembler@4ce18cec
[DEBUG] 2025-10-15 12:02:55.778 [main] ResultsHelper - Collection fully initialized: [org.hungrybadger.entity.Review.photos#1]
[DEBUG] 2025-10-15 12:02:55.779 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-15 12:02:55.779 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
