[DEBUG] 2025-10-10 17:57:08.507 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2025-10-10 17:57:08.517 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2025-10-10 17:57:08.562 [main] Version - HHH000412: Hibernate ORM core version 6.4.3.Final
[DEBUG] 2025-10-10 17:57:08.564 [main] Environment - HHH000206: 'hibernate.properties' not found
[DEBUG] 2025-10-10 17:57:08.629 [main] LocalXmlResourceResolver - Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
[DEBUG] 2025-10-10 17:57:08.638 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2025-10-10 17:57:08.909 [main] factory - Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2025-10-10 17:57:08.914 [main] factory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2025-10-10 17:57:08.914 [main] factory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2025-10-10 17:57:08.915 [main] factory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2025-10-10 17:57:08.915 [main] factory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2025-10-10 17:57:08.916 [main] factory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2025-10-10 17:57:08.917 [main] factory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2025-10-10 17:57:08.917 [main] factory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2025-10-10 17:57:08.918 [main] factory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2025-10-10 17:57:08.919 [main] factory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2025-10-10 17:57:08.919 [main] factory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2025-10-10 17:57:08.919 [main] factory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2025-10-10 17:57:08.920 [main] factory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2025-10-10 17:57:08.929 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[INFO ] 2025-10-10 17:57:08.930 [main] RegionFactoryInitiator - HHH000026: Second-level cache disabled
[DEBUG] 2025-10-10 17:57:09.061 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3a22bad6
[DEBUG] 2025-10-10 17:57:09.061 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3a22bad6
[DEBUG] 2025-10-10 17:57:09.061 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@3a22bad6
[DEBUG] 2025-10-10 17:57:09.061 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@56afdf9a
[DEBUG] 2025-10-10 17:57:09.061 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@56afdf9a
[DEBUG] 2025-10-10 17:57:09.061 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@64fe9da7
[DEBUG] 2025-10-10 17:57:09.061 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@64fe9da7
[DEBUG] 2025-10-10 17:57:09.061 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@70cccd8f
[DEBUG] 2025-10-10 17:57:09.061 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@70cccd8f
[DEBUG] 2025-10-10 17:57:09.062 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@5f172d4a
[DEBUG] 2025-10-10 17:57:09.062 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@5f172d4a
[DEBUG] 2025-10-10 17:57:09.062 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@5f172d4a
[DEBUG] 2025-10-10 17:57:09.062 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@77ec6a3d
[DEBUG] 2025-10-10 17:57:09.062 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@77ec6a3d
[DEBUG] 2025-10-10 17:57:09.062 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@77ec6a3d
[DEBUG] 2025-10-10 17:57:09.062 [main] BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@67efd2c2
[DEBUG] 2025-10-10 17:57:09.062 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@67efd2c2
[DEBUG] 2025-10-10 17:57:09.062 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@71d9cb05
[DEBUG] 2025-10-10 17:57:09.062 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@17c2d509
[DEBUG] 2025-10-10 17:57:09.062 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@17c2d509
[DEBUG] 2025-10-10 17:57:09.062 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@36bf84e
[DEBUG] 2025-10-10 17:57:09.062 [main] BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@1a0b5323
[DEBUG] 2025-10-10 17:57:09.063 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@25b52284
[DEBUG] 2025-10-10 17:57:09.063 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@25b52284
[DEBUG] 2025-10-10 17:57:09.063 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@25b52284
[DEBUG] 2025-10-10 17:57:09.063 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@245ec1a6
[DEBUG] 2025-10-10 17:57:09.063 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@245ec1a6
[DEBUG] 2025-10-10 17:57:09.063 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@245ec1a6
[DEBUG] 2025-10-10 17:57:09.063 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@782be4eb
[DEBUG] 2025-10-10 17:57:09.063 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@782be4eb
[DEBUG] 2025-10-10 17:57:09.063 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@782be4eb
[DEBUG] 2025-10-10 17:57:09.063 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@38792286
[DEBUG] 2025-10-10 17:57:09.063 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@38792286
[DEBUG] 2025-10-10 17:57:09.063 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@38792286
[DEBUG] 2025-10-10 17:57:09.063 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@34d4860f
[DEBUG] 2025-10-10 17:57:09.064 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@34d4860f
[DEBUG] 2025-10-10 17:57:09.064 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@34d4860f
[DEBUG] 2025-10-10 17:57:09.064 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@665522c2
[DEBUG] 2025-10-10 17:57:09.064 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@665522c2
[DEBUG] 2025-10-10 17:57:09.064 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@41fe8e5f
[DEBUG] 2025-10-10 17:57:09.064 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@41fe8e5f
[DEBUG] 2025-10-10 17:57:09.064 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@3062f9f4
[DEBUG] 2025-10-10 17:57:09.064 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@3062f9f4
[DEBUG] 2025-10-10 17:57:09.064 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@3062f9f4
[DEBUG] 2025-10-10 17:57:09.064 [main] BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@2016f509
[DEBUG] 2025-10-10 17:57:09.064 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@6f1a80fb
[DEBUG] 2025-10-10 17:57:09.064 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@6f1a80fb
[DEBUG] 2025-10-10 17:57:09.065 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@5a237731
[DEBUG] 2025-10-10 17:57:09.065 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@7d2998d8
[DEBUG] 2025-10-10 17:57:09.065 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@7d2998d8
[DEBUG] 2025-10-10 17:57:09.065 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@7d2998d8
[DEBUG] 2025-10-10 17:57:09.065 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@6a0094c9
[DEBUG] 2025-10-10 17:57:09.065 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@51a6cc2a
[DEBUG] 2025-10-10 17:57:09.065 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@10fda3d0
[DEBUG] 2025-10-10 17:57:09.065 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@2123064f
[DEBUG] 2025-10-10 17:57:09.065 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@2123064f
[DEBUG] 2025-10-10 17:57:09.065 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@4f6b687e
[DEBUG] 2025-10-10 17:57:09.065 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@4f6b687e
[DEBUG] 2025-10-10 17:57:09.065 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@28cb3a25
[DEBUG] 2025-10-10 17:57:09.065 [main] BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@5555ffcf
[DEBUG] 2025-10-10 17:57:09.066 [main] BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6cfd9a54
[DEBUG] 2025-10-10 17:57:09.066 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@78c1372d
[DEBUG] 2025-10-10 17:57:09.066 [main] BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@9aa2002
[DEBUG] 2025-10-10 17:57:09.066 [main] BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@73fb1d7f
[DEBUG] 2025-10-10 17:57:09.066 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@73d4066e
[DEBUG] 2025-10-10 17:57:09.066 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@73d4066e
[DEBUG] 2025-10-10 17:57:09.066 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@25d2f66
[DEBUG] 2025-10-10 17:57:09.066 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@25d2f66
[DEBUG] 2025-10-10 17:57:09.066 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@5a2fa51f
[DEBUG] 2025-10-10 17:57:09.066 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@5a2fa51f
[DEBUG] 2025-10-10 17:57:09.066 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@71945bc0
[DEBUG] 2025-10-10 17:57:09.066 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@71945bc0
[DEBUG] 2025-10-10 17:57:09.066 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@22a0d4ea
[DEBUG] 2025-10-10 17:57:09.066 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@22a0d4ea
[DEBUG] 2025-10-10 17:57:09.067 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@49ede9c7
[DEBUG] 2025-10-10 17:57:09.067 [main] BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6ecdbab8
[DEBUG] 2025-10-10 17:57:09.067 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@3dd4a6fa
[DEBUG] 2025-10-10 17:57:09.067 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@3dd4a6fa
[DEBUG] 2025-10-10 17:57:09.067 [main] BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@19f7222e
[DEBUG] 2025-10-10 17:57:09.067 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3f725306
[DEBUG] 2025-10-10 17:57:09.067 [main] BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3c69362a
[DEBUG] 2025-10-10 17:57:09.067 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@2412a42b
[DEBUG] 2025-10-10 17:57:09.067 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@2412a42b
[DEBUG] 2025-10-10 17:57:09.067 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@45404d5
[DEBUG] 2025-10-10 17:57:09.067 [main] BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@29138d3a
[DEBUG] 2025-10-10 17:57:09.067 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@5cbe2654
[DEBUG] 2025-10-10 17:57:09.068 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@5cbe2654
[DEBUG] 2025-10-10 17:57:09.068 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@6dbcf214
[DEBUG] 2025-10-10 17:57:09.068 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@6dbcf214
[DEBUG] 2025-10-10 17:57:09.068 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@496a31da
[DEBUG] 2025-10-10 17:57:09.068 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@496a31da
[DEBUG] 2025-10-10 17:57:09.068 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@496a31da
[DEBUG] 2025-10-10 17:57:09.068 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@7c251f90
[DEBUG] 2025-10-10 17:57:09.068 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@7c251f90
[DEBUG] 2025-10-10 17:57:09.068 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@7c251f90
[DEBUG] 2025-10-10 17:57:09.068 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@51841ac6
[DEBUG] 2025-10-10 17:57:09.068 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@5ba26eb0
[DEBUG] 2025-10-10 17:57:09.068 [main] BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@435e60ff
[DEBUG] 2025-10-10 17:57:09.068 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@435e60ff
[DEBUG] 2025-10-10 17:57:09.068 [main] BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@17d32e9b
[DEBUG] 2025-10-10 17:57:09.069 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@17d32e9b
[DEBUG] 2025-10-10 17:57:09.069 [main] BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@17d32e9b
[DEBUG] 2025-10-10 17:57:09.069 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@66f0548d
[DEBUG] 2025-10-10 17:57:09.069 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@2e6f610d
[DEBUG] 2025-10-10 17:57:09.069 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@1e86a5a7
[DEBUG] 2025-10-10 17:57:09.069 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@1e86a5a7
[DEBUG] 2025-10-10 17:57:09.069 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@10afe71a
[DEBUG] 2025-10-10 17:57:09.069 [main] BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@10afe71a
[DEBUG] 2025-10-10 17:57:09.069 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@10afe71a
[DEBUG] 2025-10-10 17:57:09.069 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@741f8dbe
[DEBUG] 2025-10-10 17:57:09.069 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@741f8dbe
[DEBUG] 2025-10-10 17:57:09.069 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@212dfd39
[DEBUG] 2025-10-10 17:57:09.069 [main] BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@212dfd39
[DEBUG] 2025-10-10 17:57:09.070 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@a2ddf26
[DEBUG] 2025-10-10 17:57:09.070 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@a2ddf26
[DEBUG] 2025-10-10 17:57:09.070 [main] BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@65d57e4e
[DEBUG] 2025-10-10 17:57:09.070 [main] BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@65d57e4e
[DEBUG] 2025-10-10 17:57:09.070 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@6daf7d37
[DEBUG] 2025-10-10 17:57:09.070 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@6daf7d37
[DEBUG] 2025-10-10 17:57:09.070 [main] BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@23a5818e
[DEBUG] 2025-10-10 17:57:09.070 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@4715ae33
[DEBUG] 2025-10-10 17:57:09.077 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@109a2025
[DEBUG] 2025-10-10 17:57:09.077 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@109a2025
[DEBUG] 2025-10-10 17:57:09.078 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@7915bca3
[DEBUG] 2025-10-10 17:57:09.079 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@68d651f2
[DEBUG] 2025-10-10 17:57:09.079 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@3ad4a7d6
[DEBUG] 2025-10-10 17:57:09.079 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@1e43e323
[DEBUG] 2025-10-10 17:57:09.079 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@4a67b4ec
[DEBUG] 2025-10-10 17:57:09.079 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@10643593
[DEBUG] 2025-10-10 17:57:09.079 [main] BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@f91da5e
[DEBUG] 2025-10-10 17:57:09.079 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@eca6a74
[DEBUG] 2025-10-10 17:57:09.079 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@79fd6f95
[INFO ] 2025-10-10 17:57:09.115 [main] c3p0 - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3307/hungryBadger_test
[INFO ] 2025-10-10 17:57:09.115 [main] c3p0 - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2025-10-10 17:57:09.116 [main] c3p0 - HHH10001003: Autocommit mode: false
[INFO ] 2025-10-10 17:57:09.232 [main] c3p0 - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2025-10-10 17:57:09.325 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 9.4.0
      major : 9
      minor : 4
[DEBUG] 2025-10-10 17:57:09.325 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2025-10-10 17:57:09.325 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[DEBUG] 2025-10-10 17:57:09.390 [main] dialect - HHH035001: Using dialect: org.hibernate.dialect.MySQLDialect, version: 9.4
[DEBUG] 2025-10-10 17:57:09.400 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2025-10-10 17:57:09.400 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2025-10-10 17:57:09.422 [main] DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@60a19573) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@44a085e5)
[DEBUG] 2025-10-10 17:57:09.423 [main] DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@134ff8f8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@619f2afc)
[DEBUG] 2025-10-10 17:57:09.423 [main] DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@df921b1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4db60246)
[DEBUG] 2025-10-10 17:57:09.423 [main] DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2152ab30) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3902bd2c)
[DEBUG] 2025-10-10 17:57:09.423 [main] DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7d32e714) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@eb6ec6)
[DEBUG] 2025-10-10 17:57:09.423 [main] DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@34d45ec0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@18137eab)
[DEBUG] 2025-10-10 17:57:09.423 [main] DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@727320fa) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2935fd2c)
[DEBUG] 2025-10-10 17:57:09.423 [main] DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3f018494) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3ce443f9)
[DEBUG] 2025-10-10 17:57:09.423 [main] DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@57fbc06f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@51a18b21)
[DEBUG] 2025-10-10 17:57:09.425 [main] JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2025-10-10 17:57:09.425 [main] JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2025-10-10 17:57:09.426 [main] JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2025-10-10 17:57:09.429 [main] JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2025-10-10 17:57:09.429 [main] JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2025-10-10 17:57:09.433 [main] BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@2b38b1f
[DEBUG] 2025-10-10 17:57:09.433 [main] BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@7915bca3`
[DEBUG] 2025-10-10 17:57:09.442 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
[DEBUG] 2025-10-10 17:57:09.442 [main] BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2025-10-10 17:57:09.442 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
[DEBUG] 2025-10-10 17:57:09.446 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2025-10-10 17:57:09.446 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2025-10-10 17:57:09.446 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
[DEBUG] 2025-10-10 17:57:09.446 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2025-10-10 17:57:09.446 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2025-10-10 17:57:09.447 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
[DEBUG] 2025-10-10 17:57:09.448 [main] BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2025-10-10 17:57:09.448 [main] BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2025-10-10 17:57:09.448 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
[DEBUG] 2025-10-10 17:57:09.449 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@77f905e3] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@221a2068]
[DEBUG] 2025-10-10 17:57:09.506 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2025-10-10 17:57:09.541 [main] EntityBinder - Binding entity from annotated class: org.hungrybadger.entity.Review
[DEBUG] 2025-10-10 17:57:09.554 [main] EntityBinder - Import with entity name Review
[DEBUG] 2025-10-10 17:57:09.563 [main] EntityBinder - Bind entity org.hungrybadger.entity.Review on table review
[DEBUG] 2025-10-10 17:57:09.575 [main] AnnotatedColumn - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2025-10-10 17:57:09.597 [main] AnnotatedColumn - Binding column: AnnotatedColumn()
[DEBUG] 2025-10-10 17:57:09.598 [main] ClassLoaderAccessImpl - Not known whether passed class name [org.hungrybadger.entity.Review] is safe
[DEBUG] 2025-10-10 17:57:09.598 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.hungrybadger.entity.Review
[DEBUG] 2025-10-10 17:57:09.601 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2025-10-10 17:57:09.606 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.hungrybadger.entity.Review:id]
[DEBUG] 2025-10-10 17:57:09.612 [main] BasicValueBinder - building BasicValue for id
[DEBUG] 2025-10-10 17:57:09.617 [main] BasicValue - Skipping column re-registration: review.id
[DEBUG] 2025-10-10 17:57:09.618 [main] PropertyBinder - Building property id
[DEBUG] 2025-10-10 17:57:09.622 [main] BinderHelper - #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2025-10-10 17:57:09.628 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='cuisine_type')
[DEBUG] 2025-10-10 17:57:09.628 [main] PropertyBinder - MetadataSourceProcessor property cuisineType with lazy=false
[DEBUG] 2025-10-10 17:57:09.628 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.hungrybadger.entity.Review:cuisineType]
[DEBUG] 2025-10-10 17:57:09.629 [main] BasicValueBinder - building BasicValue for cuisineType
[DEBUG] 2025-10-10 17:57:09.629 [main] BasicValue - Skipping column re-registration: review.cuisine_type
[DEBUG] 2025-10-10 17:57:09.629 [main] PropertyBinder - Building property cuisineType
[DEBUG] 2025-10-10 17:57:09.629 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='personal_notes')
[DEBUG] 2025-10-10 17:57:09.630 [main] PropertyBinder - MetadataSourceProcessor property personalNotes with lazy=false
[DEBUG] 2025-10-10 17:57:09.630 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.hungrybadger.entity.Review:personalNotes]
[DEBUG] 2025-10-10 17:57:09.630 [main] BasicValueBinder - building BasicValue for personalNotes
[DEBUG] 2025-10-10 17:57:09.630 [main] BasicValue - Skipping column re-registration: review.personal_notes
[DEBUG] 2025-10-10 17:57:09.630 [main] PropertyBinder - Building property personalNotes
[DEBUG] 2025-10-10 17:57:09.630 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='personal_rating')
[DEBUG] 2025-10-10 17:57:09.630 [main] PropertyBinder - MetadataSourceProcessor property personalRating with lazy=false
[DEBUG] 2025-10-10 17:57:09.630 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.hungrybadger.entity.Review:personalRating]
[DEBUG] 2025-10-10 17:57:09.630 [main] BasicValueBinder - building BasicValue for personalRating
[DEBUG] 2025-10-10 17:57:09.630 [main] BasicValue - Skipping column re-registration: review.personal_rating
[DEBUG] 2025-10-10 17:57:09.631 [main] PropertyBinder - Building property personalRating
[DEBUG] 2025-10-10 17:57:09.631 [main] AnnotatedColumn - Binding column: AnnotatedColumn(column='restaurant_name')
[DEBUG] 2025-10-10 17:57:09.631 [main] PropertyBinder - MetadataSourceProcessor property restaurantName with lazy=false
[DEBUG] 2025-10-10 17:57:09.631 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [org.hungrybadger.entity.Review:restaurantName]
[DEBUG] 2025-10-10 17:57:09.631 [main] BasicValueBinder - building BasicValue for restaurantName
[DEBUG] 2025-10-10 17:57:09.631 [main] BasicValue - Skipping column re-registration: review.restaurant_name
[DEBUG] 2025-10-10 17:57:09.631 [main] PropertyBinder - Building property restaurantName
[DEBUG] 2025-10-10 17:57:09.633 [main] ClassLoaderServiceImpl - HHH000194: Package not found or wo package-info.java: org.hungrybadger.entity
[DEBUG] 2025-10-10 17:57:09.640 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2025-10-10 17:57:09.640 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for cuisineType
[DEBUG] 2025-10-10 17:57:09.642 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for personalNotes
[DEBUG] 2025-10-10 17:57:09.642 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for personalRating
[DEBUG] 2025-10-10 17:57:09.642 [main] BasicValueBinder - Starting `BasicValueBinder#fillSimpleValue` for restaurantName
[DEBUG] 2025-10-10 17:57:09.646 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [review]
[DEBUG] 2025-10-10 17:57:09.874 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2025-10-10 17:57:09.928 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2025-10-10 17:57:09.929 [main] SessionFactoryImpl - Instantiating SessionFactory with settings: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=11, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, java.class.path=C:\Program Files\JetBrains\IntelliJ IDEA 2025.2.1\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2025.2.1\plugins\junit\lib\junit5-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2025.2.1\plugins\junit\lib\junit-rt.jar;C:\Users\mamcc\IdeaProjects\PersonalFoodReviewer\target\test-classes;C:\Users\mamcc\IdeaProjects\PersonalFoodReviewer\target\classes;C:\Users\mamcc\.m2\repository\org\hibernate\orm\hibernate-core\6.4.3.Final\hibernate-core-6.4.3.Final.jar;C:\Users\mamcc\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\mamcc\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\mamcc\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\mamcc\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\mamcc\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\mamcc\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\mamcc\.m2\repository\net\bytebuddy\byte-buddy\1.14.7\byte-buddy-1.14.7.jar;C:\Users\mamcc\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\mamcc\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\mamcc\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\mamcc\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\mamcc\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\mamcc\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\mamcc\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\mamcc\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\mamcc\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\mamcc\.m2\repository\org\hibernate\orm\hibernate-c3p0\6.4.3.Final\hibernate-c3p0-6.4.3.Final.jar;C:\Users\mamcc\.m2\repository\com\mchange\c3p0\0.9.5.5\c3p0-0.9.5.5.jar;C:\Users\mamcc\.m2\repository\com\mchange\mchange-commons-java\0.2.19\mchange-commons-java-0.2.19.jar;C:\Users\mamcc\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\mamcc\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\mamcc\.m2\repository\javax\javaee-web-api\7.0\javaee-web-api-7.0.jar;C:\Users\mamcc\.m2\repository\mysql\mysql-connector-java\8.0.16\mysql-connector-java-8.0.16.jar;C:\Users\mamcc\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\mamcc\.m2\repository\org\apache\logging\log4j\log4j-api\2.17.1\log4j-api-2.17.1.jar;C:\Users\mamcc\.m2\repository\org\apache\logging\log4j\log4j-core\2.17.1\log4j-core-2.17.1.jar;C:\Users\mamcc\.m2\repository\jstl\jstl\1.2\jstl-1.2.jar;C:\Users\mamcc\.m2\repository\org\junit\platform\junit-platform-runner\1.0.0\junit-platform-runner-1.0.0.jar;C:\Users\mamcc\.m2\repository\org\apiguardian\apiguardian-api\1.0.0\apiguardian-api-1.0.0.jar;C:\Users\mamcc\.m2\repository\org\junit\platform\junit-platform-launcher\1.0.0\junit-platform-launcher-1.0.0.jar;C:\Users\mamcc\.m2\repository\org\junit\platform\junit-platform-suite-api\1.0.0\junit-platform-suite-api-1.0.0.jar;C:\Users\mamcc\.m2\repository\org\junit\platform\junit-platform-commons\1.0.0\junit-platform-commons-1.0.0.jar;C:\Users\mamcc\.m2\repository\org\junit\vintage\junit-vintage-engine\4.12.0\junit-vintage-engine-4.12.0.jar;C:\Users\mamcc\.m2\repository\org\junit\platform\junit-platform-engine\1.0.0\junit-platform-engine-1.0.0.jar;C:\Users\mamcc\.m2\repository\org\opentest4j\opentest4j\1.0.0\opentest4j-1.0.0.jar;C:\Users\mamcc\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.0.0\junit-jupiter-engine-5.0.0.jar;C:\Users\mamcc\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.0.0\junit-jupiter-api-5.0.0.jar, kotlinx.coroutines.debug.enable.mutable.state.flows.stack.trace=true, java.vm.vendor=Eclipse Adoptium, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=https://adoptium.net/, user.timezone=America/Chicago, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Eclipse Adoptium\jdk-11.0.28.6-hotspot\bin, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 org.hungrybadger.persistence.ReviewDaoTest, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\mamcc, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2025-07-15, java.home=C:\Program Files\Eclipse Adoptium\jdk-11.0.28.6-hotspot, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, intellij.debug.agent=true, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, user.script=, connection.password=Marthacodes, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=11.0.28+6, user.name=Test, path.separator=;, kotlinx.coroutines.debug.enable.creation.stack.trace=false, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3307/hungryBadger_test, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, java.vendor.version=Temurin-11.0.28+6, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=C:\Users\mamcc\AppData\Local\Temp\, java.version=11.0.28, jboss.modules.system.pkgs=com.intellij.rt, user.dir=C:\Users\mamcc\IdeaProjects\PersonalFoodReviewer, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7ab2a07e, kotlinx.coroutines.debug.enable.flows.stack.trace=true, java.library.path=C:\Program Files\Eclipse Adoptium\jdk-11.0.28.6-hotspot\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Microsoft\jdk-21.0.2.13-hotspot\bin;C:\Program Files\Eclipse Adoptium\jdk-11.0.28.6-hotspot\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\dotnet\;C:\Program Files\Amazon\AWSCLIV2\;C:\Program Files\nodejs\;C:\Program Files\MySQL\MySQL Server 9.0\bin;C:\Program Files\NVIDIA Corporation\NVIDIA app\NvDLISR;C:\Program Files\Git\cmd;C:\Users\mamcc\AppData\Local\Microsoft\WindowsApps;;C:\Users\mamcc\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\mamcc\AppData\Roaming\npm;., java.vendor=Eclipse Adoptium, java.vm.info=mixed mode, java.vm.version=11.0.28+6, java.specification.maintenance.version=3, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3307/hungryBadger_test, debugger.agent.enable.coroutines=true, java.class.version=55.0}
[DEBUG] 2025-10-10 17:57:09.934 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2025-10-10 17:57:09.942 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2025-10-10 17:57:09.990 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2025-10-10 17:57:09.990 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2025-10-10 17:57:09.990 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2025-10-10 17:57:09.991 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2025-10-10 17:57:09.993 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@45037e16] under count; prior registration was null
[DEBUG] 2025-10-10 17:57:09.994 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@14b4340c] under every; prior registration was null
[DEBUG] 2025-10-10 17:57:09.994 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@12abcd1e] under any; prior registration was null
[DEBUG] 2025-10-10 17:57:09.995 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2025-10-10 17:57:09.995 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2025-10-10 17:57:09.995 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2025-10-10 17:57:09.995 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2025-10-10 17:57:09.995 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2025-10-10 17:57:09.995 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2025-10-10 17:57:09.995 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2025-10-10 17:57:09.995 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2025-10-10 17:57:09.995 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2025-10-10 17:57:09.996 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2025-10-10 17:57:09.996 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2025-10-10 17:57:09.996 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2025-10-10 17:57:09.996 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2025-10-10 17:57:09.996 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2025-10-10 17:57:09.996 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2025-10-10 17:57:09.996 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2025-10-10 17:57:09.996 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2025-10-10 17:57:09.998 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5a592c70] under sinh; prior registration was null
[DEBUG] 2025-10-10 17:57:09.999 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@252ec02e] under cosh; prior registration was null
[DEBUG] 2025-10-10 17:57:09.999 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@11e9ac24] under tanh; prior registration was null
[DEBUG] 2025-10-10 17:57:09.999 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@74f280bd] under pi; prior registration was null
[DEBUG] 2025-10-10 17:57:09.999 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@675b18ff] under log; prior registration was null
[DEBUG] 2025-10-10 17:57:10.000 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2025-10-10 17:57:10.000 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2025-10-10 17:57:10.000 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2025-10-10 17:57:10.000 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2025-10-10 17:57:10.000 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2025-10-10 17:57:10.000 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2025-10-10 17:57:10.000 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2025-10-10 17:57:10.000 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2025-10-10 17:57:10.000 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2025-10-10 17:57:10.001 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2025-10-10 17:57:10.001 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2025-10-10 17:57:10.001 [main] SqmFunctionRegistry - Registering alternate key : length -> character_length
[DEBUG] 2025-10-10 17:57:10.001 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@4ffced4e] under position; prior registration was null
[DEBUG] 2025-10-10 17:57:10.003 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@3caee3a8] under overlay; prior registration was null
[DEBUG] 2025-10-10 17:57:10.004 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@2dd178f3] under trim; prior registration was null
[DEBUG] 2025-10-10 17:57:10.005 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@2dfa02c1] under cast; prior registration was null
[DEBUG] 2025-10-10 17:57:10.005 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6314df3c] under collate; prior registration was null
[DEBUG] 2025-10-10 17:57:10.006 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@2801827a] under extract; prior registration was null
[DEBUG] 2025-10-10 17:57:10.006 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2025-10-10 17:57:10.006 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2025-10-10 17:57:10.007 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@64f4f12] under ifnull; prior registration was null
[DEBUG] 2025-10-10 17:57:10.007 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2025-10-10 17:57:10.007 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2025-10-10 17:57:10.007 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@6b0f266e] under pad; prior registration was null
[DEBUG] 2025-10-10 17:57:10.008 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@70881123] under str; prior registration was null
[DEBUG] 2025-10-10 17:57:10.009 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@7b9088f2] under format; prior registration was null
[DEBUG] 2025-10-10 17:57:10.009 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@350323a0] under timestampadd; prior registration was null
[DEBUG] 2025-10-10 17:57:10.010 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@5111de7c] under timestampdiff; prior registration was null
[DEBUG] 2025-10-10 17:57:10.010 [main] SqmFunctionRegistry - Registering alternate key : dateadd -> timestampadd
[DEBUG] 2025-10-10 17:57:10.010 [main] SqmFunctionRegistry - Registering alternate key : datediff -> timestampdiff
[DEBUG] 2025-10-10 17:57:10.011 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@342ee097] under current_date; prior registration was null
[DEBUG] 2025-10-10 17:57:10.011 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6ac45c0c] under current_time; prior registration was null
[DEBUG] 2025-10-10 17:57:10.011 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@12192604] under current_timestamp; prior registration was null
[DEBUG] 2025-10-10 17:57:10.011 [main] SqmFunctionRegistry - Registering alternate key : current date -> current_date
[DEBUG] 2025-10-10 17:57:10.011 [main] SqmFunctionRegistry - Registering alternate key : current time -> current_time
[DEBUG] 2025-10-10 17:57:10.011 [main] SqmFunctionRegistry - Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2025-10-10 17:57:10.011 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6075b369] under local_date; prior registration was null
[DEBUG] 2025-10-10 17:57:10.011 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@231cdda8] under local_time; prior registration was null
[DEBUG] 2025-10-10 17:57:10.011 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6b70d1fb] under local_datetime; prior registration was null
[DEBUG] 2025-10-10 17:57:10.011 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3002e397] under offset_datetime; prior registration was null
[DEBUG] 2025-10-10 17:57:10.011 [main] SqmFunctionRegistry - Registering alternate key : local date -> local_date
[DEBUG] 2025-10-10 17:57:10.011 [main] SqmFunctionRegistry - Registering alternate key : local time -> local_time
[DEBUG] 2025-10-10 17:57:10.011 [main] SqmFunctionRegistry - Registering alternate key : local datetime -> local_datetime
[DEBUG] 2025-10-10 17:57:10.011 [main] SqmFunctionRegistry - Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2025-10-10 17:57:10.012 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7da1e005] under instant; prior registration was null
[DEBUG] 2025-10-10 17:57:10.012 [main] SqmFunctionRegistry - Registering alternate key : current_instant -> instant
[DEBUG] 2025-10-10 17:57:10.012 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@6d4a82] under sql; prior registration was null
[DEBUG] 2025-10-10 17:57:10.012 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2025-10-10 17:57:10.012 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2025-10-10 17:57:10.012 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2025-10-10 17:57:10.012 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2025-10-10 17:57:10.012 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@675b18ff
[DEBUG] 2025-10-10 17:57:10.012 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
[DEBUG] 2025-10-10 17:57:10.013 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2025-10-10 17:57:10.013 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2025-10-10 17:57:10.013 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2025-10-10 17:57:10.013 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2025-10-10 17:57:10.013 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
[DEBUG] 2025-10-10 17:57:10.013 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2025-10-10 17:57:10.013 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2025-10-10 17:57:10.013 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@130cfc47] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
[DEBUG] 2025-10-10 17:57:10.014 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@4eeab3e] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
[DEBUG] 2025-10-10 17:57:10.014 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
[DEBUG] 2025-10-10 17:57:10.014 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2025-10-10 17:57:10.014 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2025-10-10 17:57:10.014 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2025-10-10 17:57:10.014 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2025-10-10 17:57:10.014 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2025-10-10 17:57:10.014 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2025-10-10 17:57:10.014 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2025-10-10 17:57:10.014 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
[DEBUG] 2025-10-10 17:57:10.014 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
[DEBUG] 2025-10-10 17:57:10.014 [main] SqmFunctionRegistry - Registering alternate key : day -> dayofmonth
[DEBUG] 2025-10-10 17:57:10.014 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
[DEBUG] 2025-10-10 17:57:10.014 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2025-10-10 17:57:10.014 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2025-10-10 17:57:10.015 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2025-10-10 17:57:10.015 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2025-10-10 17:57:10.015 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
[DEBUG] 2025-10-10 17:57:10.015 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
[DEBUG] 2025-10-10 17:57:10.015 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
[DEBUG] 2025-10-10 17:57:10.015 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
[DEBUG] 2025-10-10 17:57:10.015 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
[DEBUG] 2025-10-10 17:57:10.015 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
[DEBUG] 2025-10-10 17:57:10.015 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
[DEBUG] 2025-10-10 17:57:10.015 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2025-10-10 17:57:10.015 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
[DEBUG] 2025-10-10 17:57:10.015 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
[DEBUG] 2025-10-10 17:57:10.015 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
[DEBUG] 2025-10-10 17:57:10.015 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
[DEBUG] 2025-10-10 17:57:10.015 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2025-10-10 17:57:10.015 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2025-10-10 17:57:10.016 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2025-10-10 17:57:10.016 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2025-10-10 17:57:10.016 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2025-10-10 17:57:10.016 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2b6fb197] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@4ffced4e
[DEBUG] 2025-10-10 17:57:10.016 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2025-10-10 17:57:10.016 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2025-10-10 17:57:10.016 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2025-10-10 17:57:10.020 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@10d18696] under trunc; prior registration was null
[DEBUG] 2025-10-10 17:57:10.020 [main] SqmFunctionRegistry - Registering alternate key : truncate -> trunc
[DEBUG] 2025-10-10 17:57:10.020 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2025-10-10 17:57:10.021 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6b8b5020] under bitand; prior registration was null
[DEBUG] 2025-10-10 17:57:10.021 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7d37ee0c] under bitor; prior registration was null
[DEBUG] 2025-10-10 17:57:10.021 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5a7b309b] under bitxor; prior registration was null
[DEBUG] 2025-10-10 17:57:10.021 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4602f874] under bitnot; prior registration was null
[DEBUG] 2025-10-10 17:57:10.021 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2025-10-10 17:57:10.021 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2025-10-10 17:57:10.021 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
[DEBUG] 2025-10-10 17:57:10.021 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2025-10-10 17:57:10.021 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2025-10-10 17:57:10.021 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
[DEBUG] 2025-10-10 17:57:10.021 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2025-10-10 17:57:10.022 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2025-10-10 17:57:10.022 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
[DEBUG] 2025-10-10 17:57:10.022 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
[DEBUG] 2025-10-10 17:57:10.022 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
[DEBUG] 2025-10-10 17:57:10.022 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
[DEBUG] 2025-10-10 17:57:10.022 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
[DEBUG] 2025-10-10 17:57:10.022 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@7739aac4] under format; prior registration was org.hibernate.dialect.function.FormatFunction@7b9088f2
[DEBUG] 2025-10-10 17:57:10.022 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
[DEBUG] 2025-10-10 17:57:10.022 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
[DEBUG] 2025-10-10 17:57:10.022 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2025-10-10 17:57:10.022 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2025-10-10 17:57:10.022 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@231cdda8
[DEBUG] 2025-10-10 17:57:10.022 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@6b70d1fb
[DEBUG] 2025-10-10 17:57:10.022 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
[DEBUG] 2025-10-10 17:57:10.023 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@353c6da1] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@74f280bd
[DEBUG] 2025-10-10 17:57:10.023 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@36c07c75] under chr; prior registration was null
[DEBUG] 2025-10-10 17:57:10.023 [main] SqmFunctionRegistry - Registering alternate key : char -> chr
[DEBUG] 2025-10-10 17:57:10.023 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6750e381] under sysdate; prior registration was null
[DEBUG] 2025-10-10 17:57:10.023 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2025-10-10 17:57:10.023 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2025-10-10 17:57:10.023 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2025-10-10 17:57:10.023 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2025-10-10 17:57:10.023 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2025-10-10 17:57:10.023 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2025-10-10 17:57:10.025 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@3a3f96ab] under rank; prior registration was null
[DEBUG] 2025-10-10 17:57:10.025 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@4def7d36] under dense_rank; prior registration was null
[DEBUG] 2025-10-10 17:57:10.025 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@43c7fe8a] under percent_rank; prior registration was null
[DEBUG] 2025-10-10 17:57:10.025 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@67f946c3] under cume_dist; prior registration was null
[DEBUG] 2025-10-10 17:57:10.026 [main] SqmFunctionRegistry - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@46a8c2b4] under listagg; prior registration was null
[DEBUG] 2025-10-10 17:57:10.030 [main] HQL_FUNCTIONS - abs(NUMERIC arg)
[DEBUG] 2025-10-10 17:57:10.030 [main] HQL_FUNCTIONS - Double acos(NUMERIC arg)
[DEBUG] 2025-10-10 17:57:10.030 [main] HQL_FUNCTIONS - adddate(DATE datetime, INTEGER days)
[DEBUG] 2025-10-10 17:57:10.030 [main] HQL_FUNCTIONS - addtime(TIME datetime, TIME time)
[DEBUG] 2025-10-10 17:57:10.030 [main] HQL_FUNCTIONS - Boolean any(BOOLEAN arg)
[DEBUG] 2025-10-10 17:57:10.031 [main] HQL_FUNCTIONS - Integer ascii(STRING arg)
[DEBUG] 2025-10-10 17:57:10.031 [main] HQL_FUNCTIONS - Double asin(NUMERIC arg)
[DEBUG] 2025-10-10 17:57:10.031 [main] HQL_FUNCTIONS - Double atan(NUMERIC arg)
[DEBUG] 2025-10-10 17:57:10.031 [main] HQL_FUNCTIONS - Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2025-10-10 17:57:10.031 [main] HQL_FUNCTIONS - avg(arg)
[DEBUG] 2025-10-10 17:57:10.031 [main] HQL_FUNCTIONS - bit_and(arg)
[DEBUG] 2025-10-10 17:57:10.031 [main] HQL_FUNCTIONS - Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2025-10-10 17:57:10.031 [main] HQL_FUNCTIONS - bit_or(arg)
[DEBUG] 2025-10-10 17:57:10.031 [main] HQL_FUNCTIONS - bitand(arg0, arg1)
[DEBUG] 2025-10-10 17:57:10.031 [main] HQL_FUNCTIONS - bitnot(arg)
[DEBUG] 2025-10-10 17:57:10.031 [main] HQL_FUNCTIONS - bitor(arg0, arg1)
[DEBUG] 2025-10-10 17:57:10.031 [main] HQL_FUNCTIONS - bitxor(arg0, arg1)
[DEBUG] 2025-10-10 17:57:10.031 [main] HQL_FUNCTIONS - cast(arg as Type)
[DEBUG] 2025-10-10 17:57:10.031 [main] HQL_FUNCTIONS - ceiling(NUMERIC arg)
[DEBUG] 2025-10-10 17:57:10.031 [main] HQL_FUNCTIONS - Character char(INTEGER arg)
[DEBUG] 2025-10-10 17:57:10.031 [main] HQL_FUNCTIONS - Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2025-10-10 17:57:10.031 [main] HQL_FUNCTIONS - Character chr(INTEGER arg)
[DEBUG] 2025-10-10 17:57:10.031 [main] HQL_FUNCTIONS - coalesce(arg0[, arg1[, ...]])
[DEBUG] 2025-10-10 17:57:10.031 [main] HQL_FUNCTIONS - String collate(STRING string as COLLATION collation)
[DEBUG] 2025-10-10 17:57:10.031 [main] HQL_FUNCTIONS - String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2025-10-10 17:57:10.031 [main] HQL_FUNCTIONS - Double cos(NUMERIC arg)
[DEBUG] 2025-10-10 17:57:10.032 [main] HQL_FUNCTIONS - Double cosh(NUMERIC arg)
[DEBUG] 2025-10-10 17:57:10.032 [main] HQL_FUNCTIONS - Double cot(NUMERIC arg)
[DEBUG] 2025-10-10 17:57:10.032 [main] HQL_FUNCTIONS - Long count([distinct ]{arg|*})
[DEBUG] 2025-10-10 17:57:10.032 [main] HQL_FUNCTIONS - Integer crc32(arg)
[DEBUG] 2025-10-10 17:57:10.032 [main] HQL_FUNCTIONS - Double cume_dist([arg0[, ...]])
[DEBUG] 2025-10-10 17:57:10.032 [main] HQL_FUNCTIONS - Date curdate()
[DEBUG] 2025-10-10 17:57:10.032 [main] HQL_FUNCTIONS - Date current date
[DEBUG] 2025-10-10 17:57:10.032 [main] HQL_FUNCTIONS - Time current time
[DEBUG] 2025-10-10 17:57:10.032 [main] HQL_FUNCTIONS - Timestamp current timestamp
[DEBUG] 2025-10-10 17:57:10.032 [main] HQL_FUNCTIONS - Date current_date
[DEBUG] 2025-10-10 17:57:10.032 [main] HQL_FUNCTIONS - Instant current_instant
[DEBUG] 2025-10-10 17:57:10.032 [main] HQL_FUNCTIONS - Time current_time
[DEBUG] 2025-10-10 17:57:10.032 [main] HQL_FUNCTIONS - Timestamp current_timestamp
[DEBUG] 2025-10-10 17:57:10.032 [main] HQL_FUNCTIONS - Time curtime()
[DEBUG] 2025-10-10 17:57:10.032 [main] HQL_FUNCTIONS - Date date(arg)
[DEBUG] 2025-10-10 17:57:10.032 [main] HQL_FUNCTIONS - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2025-10-10 17:57:10.032 [main] HQL_FUNCTIONS - Integer datediff(DATE end, DATE start)
[DEBUG] 2025-10-10 17:57:10.032 [main] HQL_FUNCTIONS - Integer day(DATE arg)
[DEBUG] 2025-10-10 17:57:10.032 [main] HQL_FUNCTIONS - String dayname(DATE arg)
[DEBUG] 2025-10-10 17:57:10.032 [main] HQL_FUNCTIONS - Integer dayofmonth(DATE arg)
[DEBUG] 2025-10-10 17:57:10.032 [main] HQL_FUNCTIONS - Integer dayofweek(DATE arg)
[DEBUG] 2025-10-10 17:57:10.032 [main] HQL_FUNCTIONS - Integer dayofyear(DATE arg)
[DEBUG] 2025-10-10 17:57:10.032 [main] HQL_FUNCTIONS - Double degrees(NUMERIC arg)
[DEBUG] 2025-10-10 17:57:10.032 [main] HQL_FUNCTIONS - Long dense_rank([arg0[, ...]])
[DEBUG] 2025-10-10 17:57:10.032 [main] HQL_FUNCTIONS - Boolean every(BOOLEAN arg)
[DEBUG] 2025-10-10 17:57:10.032 [main] HQL_FUNCTIONS - Double exp(NUMERIC arg)
[DEBUG] 2025-10-10 17:57:10.032 [main] HQL_FUNCTIONS - extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2025-10-10 17:57:10.032 [main] HQL_FUNCTIONS - first_valueANY value
[DEBUG] 2025-10-10 17:57:10.033 [main] HQL_FUNCTIONS - floor(NUMERIC arg)
[DEBUG] 2025-10-10 17:57:10.033 [main] HQL_FUNCTIONS - String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2025-10-10 17:57:10.033 [main] HQL_FUNCTIONS - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2025-10-10 17:57:10.033 [main] HQL_FUNCTIONS - Integer hour(TIME arg)
[DEBUG] 2025-10-10 17:57:10.033 [main] HQL_FUNCTIONS - ifnull(arg0, arg1)
[DEBUG] 2025-10-10 17:57:10.033 [main] HQL_FUNCTIONS - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2025-10-10 17:57:10.033 [main] HQL_FUNCTIONS - Instant instant
[DEBUG] 2025-10-10 17:57:10.033 [main] HQL_FUNCTIONS - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2025-10-10 17:57:10.033 [main] HQL_FUNCTIONS - lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2025-10-10 17:57:10.033 [main] HQL_FUNCTIONS - Date last_day(DATE arg)
[DEBUG] 2025-10-10 17:57:10.033 [main] HQL_FUNCTIONS - last_valueANY value
[DEBUG] 2025-10-10 17:57:10.033 [main] HQL_FUNCTIONS - leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2025-10-10 17:57:10.033 [main] HQL_FUNCTIONS - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2025-10-10 17:57:10.033 [main] HQL_FUNCTIONS - String left(STRING string, INTEGER length)
[DEBUG] 2025-10-10 17:57:10.033 [main] HQL_FUNCTIONS - Integer length(STRING_OR_CLOB arg)
[DEBUG] 2025-10-10 17:57:10.033 [main] HQL_FUNCTIONS - String listagg(STRING arg0, STRING arg1)
[DEBUG] 2025-10-10 17:57:10.033 [main] HQL_FUNCTIONS - Double ln(NUMERIC arg)
[DEBUG] 2025-10-10 17:57:10.033 [main] HQL_FUNCTIONS - LocalDate local date
[DEBUG] 2025-10-10 17:57:10.033 [main] HQL_FUNCTIONS - LocalDateTime local datetime
[DEBUG] 2025-10-10 17:57:10.033 [main] HQL_FUNCTIONS - LocalTime local time
[DEBUG] 2025-10-10 17:57:10.033 [main] HQL_FUNCTIONS - LocalDate local_date
[DEBUG] 2025-10-10 17:57:10.033 [main] HQL_FUNCTIONS - LocalDateTime local_datetime
[DEBUG] 2025-10-10 17:57:10.033 [main] HQL_FUNCTIONS - LocalTime local_time
[DEBUG] 2025-10-10 17:57:10.033 [main] HQL_FUNCTIONS - Timestamp localtime
[DEBUG] 2025-10-10 17:57:10.033 [main] HQL_FUNCTIONS - Timestamp localtimestamp
[DEBUG] 2025-10-10 17:57:10.033 [main] HQL_FUNCTIONS - Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2025-10-10 17:57:10.033 [main] HQL_FUNCTIONS - Double log(NUMERIC arg0[, NUMERIC arg1])
[DEBUG] 2025-10-10 17:57:10.033 [main] HQL_FUNCTIONS - Double log10(NUMERIC arg)
[DEBUG] 2025-10-10 17:57:10.034 [main] HQL_FUNCTIONS - Double log2(NUMERIC arg)
[DEBUG] 2025-10-10 17:57:10.034 [main] HQL_FUNCTIONS - String lower(STRING string)
[DEBUG] 2025-10-10 17:57:10.034 [main] HQL_FUNCTIONS - String lpad(string, length[, padding])
[DEBUG] 2025-10-10 17:57:10.034 [main] HQL_FUNCTIONS - String ltrim(STRING string[, STRING characters])
[DEBUG] 2025-10-10 17:57:10.034 [main] HQL_FUNCTIONS - Date makedate(INTEGER year, INTEGER dayofyear)
[DEBUG] 2025-10-10 17:57:10.034 [main] HQL_FUNCTIONS - Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
[DEBUG] 2025-10-10 17:57:10.034 [main] HQL_FUNCTIONS - max(COMPARABLE arg)
[DEBUG] 2025-10-10 17:57:10.034 [main] HQL_FUNCTIONS - String md5(arg)
[DEBUG] 2025-10-10 17:57:10.034 [main] HQL_FUNCTIONS - Integer microsecond(TIME arg)
[DEBUG] 2025-10-10 17:57:10.034 [main] HQL_FUNCTIONS - min(COMPARABLE arg)
[DEBUG] 2025-10-10 17:57:10.034 [main] HQL_FUNCTIONS - Integer minute(TIME arg)
[DEBUG] 2025-10-10 17:57:10.034 [main] HQL_FUNCTIONS - Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2025-10-10 17:57:10.034 [main] HQL_FUNCTIONS - Integer month(DATE arg)
[DEBUG] 2025-10-10 17:57:10.034 [main] HQL_FUNCTIONS - String monthname(DATE arg)
[DEBUG] 2025-10-10 17:57:10.034 [main] HQL_FUNCTIONS - Timestamp now()
[DEBUG] 2025-10-10 17:57:10.034 [main] HQL_FUNCTIONS - nth_valueANY value, INTEGER nth
[DEBUG] 2025-10-10 17:57:10.034 [main] HQL_FUNCTIONS - nullif(arg0, arg1)
[DEBUG] 2025-10-10 17:57:10.034 [main] HQL_FUNCTIONS - Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2025-10-10 17:57:10.034 [main] HQL_FUNCTIONS - OffsetDateTime offset datetime
[DEBUG] 2025-10-10 17:57:10.034 [main] HQL_FUNCTIONS - OffsetDateTime offset_datetime
[DEBUG] 2025-10-10 17:57:10.034 [main] HQL_FUNCTIONS - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2025-10-10 17:57:10.035 [main] HQL_FUNCTIONS - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2025-10-10 17:57:10.035 [main] HQL_FUNCTIONS - Double percent_rank([arg0[, ...]])
[DEBUG] 2025-10-10 17:57:10.035 [main] HQL_FUNCTIONS - Double pi
[DEBUG] 2025-10-10 17:57:10.035 [main] HQL_FUNCTIONS - Integer position(STRING pattern in STRING string)
[DEBUG] 2025-10-10 17:57:10.035 [main] HQL_FUNCTIONS - Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2025-10-10 17:57:10.035 [main] HQL_FUNCTIONS - Integer quarter(DATE arg)
[DEBUG] 2025-10-10 17:57:10.035 [main] HQL_FUNCTIONS - Double radians(NUMERIC arg)
[DEBUG] 2025-10-10 17:57:10.035 [main] HQL_FUNCTIONS - Double rand([INTEGER seed])
[DEBUG] 2025-10-10 17:57:10.035 [main] HQL_FUNCTIONS - Long rank([arg0[, ...]])
[DEBUG] 2025-10-10 17:57:10.035 [main] HQL_FUNCTIONS - String repeat(STRING string, INTEGER times)
[DEBUG] 2025-10-10 17:57:10.035 [main] HQL_FUNCTIONS - String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2025-10-10 17:57:10.035 [main] HQL_FUNCTIONS - String reverse(STRING arg)
[DEBUG] 2025-10-10 17:57:10.035 [main] HQL_FUNCTIONS - String right(STRING string, INTEGER length)
[DEBUG] 2025-10-10 17:57:10.035 [main] HQL_FUNCTIONS - round(NUMERIC number[, INTEGER places])
[DEBUG] 2025-10-10 17:57:10.035 [main] HQL_FUNCTIONS - Long row_number()
[DEBUG] 2025-10-10 17:57:10.035 [main] HQL_FUNCTIONS - String rpad(string, length[, padding])
[DEBUG] 2025-10-10 17:57:10.035 [main] HQL_FUNCTIONS - String rtrim(STRING string[, STRING characters])
[DEBUG] 2025-10-10 17:57:10.035 [main] HQL_FUNCTIONS - Integer second(TIME arg)
[DEBUG] 2025-10-10 17:57:10.035 [main] HQL_FUNCTIONS - String sha(arg)
[DEBUG] 2025-10-10 17:57:10.035 [main] HQL_FUNCTIONS - String sha1(arg)
[DEBUG] 2025-10-10 17:57:10.035 [main] HQL_FUNCTIONS - String sha2(arg0, arg1)
[DEBUG] 2025-10-10 17:57:10.035 [main] HQL_FUNCTIONS - Integer sign(NUMERIC arg)
[DEBUG] 2025-10-10 17:57:10.035 [main] HQL_FUNCTIONS - Double sin(NUMERIC arg)
[DEBUG] 2025-10-10 17:57:10.035 [main] HQL_FUNCTIONS - Double sinh(NUMERIC arg)
[DEBUG] 2025-10-10 17:57:10.035 [main] HQL_FUNCTIONS - String soundex(arg)
[DEBUG] 2025-10-10 17:57:10.035 [main] HQL_FUNCTIONS - String space(INTEGER arg)
[DEBUG] 2025-10-10 17:57:10.035 [main] HQL_FUNCTIONS - Object sql
[DEBUG] 2025-10-10 17:57:10.035 [main] HQL_FUNCTIONS - Double sqrt(NUMERIC arg)
[DEBUG] 2025-10-10 17:57:10.036 [main] HQL_FUNCTIONS - Double stddev(NUMERIC arg)
[DEBUG] 2025-10-10 17:57:10.036 [main] HQL_FUNCTIONS - Double stddev_pop(NUMERIC arg)
[DEBUG] 2025-10-10 17:57:10.036 [main] HQL_FUNCTIONS - Double stddev_samp(NUMERIC arg)
[DEBUG] 2025-10-10 17:57:10.036 [main] HQL_FUNCTIONS - String str(arg)
[DEBUG] 2025-10-10 17:57:10.036 [main] HQL_FUNCTIONS - subdate(DATE datetime, INTEGER days)
[DEBUG] 2025-10-10 17:57:10.036 [main] HQL_FUNCTIONS - String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2025-10-10 17:57:10.036 [main] HQL_FUNCTIONS - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2025-10-10 17:57:10.036 [main] HQL_FUNCTIONS - subtime(TIME datetime, TIME time)
[DEBUG] 2025-10-10 17:57:10.036 [main] HQL_FUNCTIONS - sum(arg)
[DEBUG] 2025-10-10 17:57:10.036 [main] HQL_FUNCTIONS - Timestamp sysdate()
[DEBUG] 2025-10-10 17:57:10.036 [main] HQL_FUNCTIONS - Double tan(NUMERIC arg)
[DEBUG] 2025-10-10 17:57:10.036 [main] HQL_FUNCTIONS - Double tanh(NUMERIC arg)
[DEBUG] 2025-10-10 17:57:10.036 [main] HQL_FUNCTIONS - String time(arg)
[DEBUG] 2025-10-10 17:57:10.036 [main] HQL_FUNCTIONS - Timestamp timestamp(arg0[, arg1])
[DEBUG] 2025-10-10 17:57:10.036 [main] HQL_FUNCTIONS - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2025-10-10 17:57:10.036 [main] HQL_FUNCTIONS - basicType@14(java.lang.Long,-5)|basicType@17(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2025-10-10 17:57:10.037 [main] HQL_FUNCTIONS - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2025-10-10 17:57:10.037 [main] HQL_FUNCTIONS - trunc( ... )
[DEBUG] 2025-10-10 17:57:10.037 [main] HQL_FUNCTIONS - truncate( ... )
[DEBUG] 2025-10-10 17:57:10.037 [main] HQL_FUNCTIONS - String upper(STRING string)
[DEBUG] 2025-10-10 17:57:10.037 [main] HQL_FUNCTIONS - Date utc_date
[DEBUG] 2025-10-10 17:57:10.037 [main] HQL_FUNCTIONS - Time utc_time
[DEBUG] 2025-10-10 17:57:10.037 [main] HQL_FUNCTIONS - Timestamp utc_timestamp
[DEBUG] 2025-10-10 17:57:10.037 [main] HQL_FUNCTIONS - Double var_pop(NUMERIC arg)
[DEBUG] 2025-10-10 17:57:10.037 [main] HQL_FUNCTIONS - Double var_samp(NUMERIC arg)
[DEBUG] 2025-10-10 17:57:10.037 [main] HQL_FUNCTIONS - Double variance(NUMERIC arg)
[DEBUG] 2025-10-10 17:57:10.037 [main] HQL_FUNCTIONS - Integer week(DATE arg)
[DEBUG] 2025-10-10 17:57:10.037 [main] HQL_FUNCTIONS - Integer year(DATE arg)
[DEBUG] 2025-10-10 17:57:10.049 [main] cache - Starting QueryInterpretationCache(2048)
[DEBUG] 2025-10-10 17:57:10.158 [main] SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2025-10-10 17:57:10.159 [main] EntityCopyObserverFactoryInitiator - Configured EntityCopyObserver strategy: disallow
[DEBUG] 2025-10-10 17:57:10.265 [main] ClassLoaderAccessImpl - Not known whether passed class name [org.hungrybadger.entity.Review] is safe
[DEBUG] 2025-10-10 17:57:10.265 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : org.hungrybadger.entity.Review
[DEBUG] 2025-10-10 17:57:10.480 [main] BytecodeProviderImpl - HHH000513: Unable to create the ReflectionOptimizer for [org.hungrybadger.entity.Review]: private accessor [cuisineType]
[DEBUG] 2025-10-10 17:57:10.532 [main] creation - Starting post-init callbacks
[DEBUG] 2025-10-10 17:57:10.532 [main] creation - Starting PostInitCallbackEntry : Entity(org.hungrybadger.entity.Review) `staticFetchableList` generator
[DEBUG] 2025-10-10 17:57:10.620 [main] create - Created new SQL alias : r1_0
[DEBUG] 2025-10-10 17:57:10.623 [main] create - Registration of TableGroup [StandardTableGroup(org.hungrybadger.entity.Review)] with identifierForTableGroup [org.hungrybadger.entity.Review] for NavigablePath [org.hungrybadger.entity.Review] 
[DEBUG] 2025-10-10 17:57:10.641 [main] AST - DomainResult Graph:
 \-EntityResultImpl [org.hungrybadger.entity.Review]
 |  +-BasicFetch [org.hungrybadger.entity.Review.cuisineType]
 |  +-BasicFetch [org.hungrybadger.entity.Review.personalNotes]
 |  +-BasicFetch [org.hungrybadger.entity.Review.personalRating]
 |  \-BasicFetch [org.hungrybadger.entity.Review.restaurantName]

[DEBUG] 2025-10-10 17:57:10.651 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.hungrybadger.entity.Review) {
          primaryTableReference : review as r1_0
        }
      }
    }

[DEBUG] 2025-10-10 17:57:10.662 [main] AbstractEntityPersister - Static SQL for entity: org.hungrybadger.entity.Review
[DEBUG] 2025-10-10 17:57:10.663 [main] AbstractEntityPersister -  Version select: select id from review where id=?
[DEBUG] 2025-10-10 17:57:10.663 [main] AbstractEntityPersister -  Insert (0): insert into review (cuisine_type,personal_notes,personal_rating,restaurant_name) values (?,?,?,?)
[DEBUG] 2025-10-10 17:57:10.663 [main] AbstractEntityPersister -  Update (0): update review set cuisine_type=?,personal_notes=?,personal_rating=?,restaurant_name=? where id=?
[DEBUG] 2025-10-10 17:57:10.663 [main] AbstractEntityPersister -  Delete (0): delete from review where id=?
[DEBUG] 2025-10-10 17:57:10.697 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2025-10-10 17:57:10.698 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2025-10-10 17:57:10.705 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2025-10-10 17:57:10.705 [main] JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
[DEBUG] 2025-10-10 17:57:10.706 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@77f905e3] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@11180750]
[DEBUG] 2025-10-10 17:57:10.707 [main] NamedObjectRepository - Checking 0 named HQL queries
[DEBUG] 2025-10-10 17:57:10.707 [main] NamedObjectRepository - Checking 0 named SQL queries
[DEBUG] 2025-10-10 17:57:10.708 [main] SchemaManagementToolCoordinator - No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2025-10-10 17:57:10.708 [main] SchemaManagementToolCoordinator - No actions found; doing nothing
[DEBUG] 2025-10-10 17:57:10.711 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2e159116
[DEBUG] 2025-10-10 17:57:10.711 [main] SessionFactoryRegistry - Registering SessionFactory: 9a87c49d-a901-45c1-bb6d-5821ea10e6d0 (<unnamed>)
[DEBUG] 2025-10-10 17:57:10.711 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2025-10-10 17:57:10.711 [main] SessionFactoryImpl - Instantiated SessionFactory
[DEBUG] 2025-10-10 17:57:10.759 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2025-10-10 17:57:10.782 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2025-10-10 17:57:10.795 [main] results - Initializer list:
	  org.hungrybadger.entity.Review -> EntityResultInitializer(org.hungrybadger.entity.Review)@1451757974 (SingleTableEntityPersister(org.hungrybadger.entity.Review))

[DEBUG] 2025-10-10 17:57:10.802 [main] SQL - select r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from review r1_0 where r1_0.id=?
[DEBUG] 2025-10-10 17:57:10.825 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review): 2
[DEBUG] 2025-10-10 17:57:10.827 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Review#2] : 531204642
[DEBUG] 2025-10-10 17:57:10.828 [main] results - Extracted JDBC value [1] - [American]
[DEBUG] 2025-10-10 17:57:10.828 [main] results - Extracted JDBC value [2] - [Wraps, good after a long day]
[DEBUG] 2025-10-10 17:57:10.828 [main] results - Extracted JDBC value [3] - [4]
[DEBUG] 2025-10-10 17:57:10.828 [main] results - Extracted JDBC value [4] - [Conrads]
[DEBUG] 2025-10-10 17:57:10.833 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Review#2
[DEBUG] 2025-10-10 17:57:10.833 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4c41a177
[DEBUG] 2025-10-10 17:57:10.836 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-10 17:57:10.838 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2025-10-10 17:57:10.839 [main] TransactionImpl - begin
[DEBUG] 2025-10-10 17:57:10.849 [main] TransactionImpl - committing
[DEBUG] 2025-10-10 17:57:10.850 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2025-10-10 17:57:10.851 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2025-10-10 17:57:10.855 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
[DEBUG] 2025-10-10 17:57:10.855 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2025-10-10 17:57:10.857 [main] EntityPrinter - Listing entities:
[DEBUG] 2025-10-10 17:57:10.858 [main] EntityPrinter - org.hungrybadger.entity.Review{personalNotes=Wraps, good after a long day, personalRating=4, restaurantName=Conrads, id=2, cuisineType=American}
[DEBUG] 2025-10-10 17:57:10.866 [main] SQL - delete from review where id=?
[DEBUG] 2025-10-10 17:57:10.873 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-10 17:57:10.873 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-10 17:57:10.874 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2025-10-10 17:57:10.874 [main] results - Initializer list:
	  org.hungrybadger.entity.Review -> EntityResultInitializer(org.hungrybadger.entity.Review)@1332177152 (SingleTableEntityPersister(org.hungrybadger.entity.Review))

[DEBUG] 2025-10-10 17:57:10.874 [main] SQL - select r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from review r1_0 where r1_0.id=?
[DEBUG] 2025-10-10 17:57:10.876 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-10 17:57:11.035 [main] create - Created new SQL alias : r1_0
[DEBUG] 2025-10-10 17:57:11.035 [main] create - Registration of TableGroup [StandardTableGroup(org.hungrybadger.entity.Review(30436840120400))] with identifierForTableGroup [org.hungrybadger.entity.Review] for NavigablePath [org.hungrybadger.entity.Review] 
[DEBUG] 2025-10-10 17:57:11.052 [main] AST - DomainResult Graph:
 \-EntityResultImpl [org.hungrybadger.entity.Review(30436840120400)]
 |  +-BasicFetch [org.hungrybadger.entity.Review(30436840120400).cuisineType]
 |  +-BasicFetch [org.hungrybadger.entity.Review(30436840120400).personalNotes]
 |  +-BasicFetch [org.hungrybadger.entity.Review(30436840120400).personalRating]
 |  \-BasicFetch [org.hungrybadger.entity.Review(30436840120400).restaurantName]

[DEBUG] 2025-10-10 17:57:11.053 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.hungrybadger.entity.Review(30436840120400)) {
          primaryTableReference : review as r1_0
        }
      }
    }

[DEBUG] 2025-10-10 17:57:11.056 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
[DEBUG] 2025-10-10 17:57:11.056 [main] results - Initializer list:
	  org.hungrybadger.entity.Review(30436840120400) -> EntityResultInitializer(org.hungrybadger.entity.Review(30436840120400))@145382068 (SingleTableEntityPersister(org.hungrybadger.entity.Review))

[DEBUG] 2025-10-10 17:57:11.056 [main] SQL - select r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from review r1_0
[DEBUG] 2025-10-10 17:57:11.058 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2025-10-10 17:57:11.058 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review(30436840120400)): 1
[DEBUG] 2025-10-10 17:57:11.058 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Review(30436840120400)#1] : 2055183685
[DEBUG] 2025-10-10 17:57:11.059 [main] results - Extracted JDBC value [1] - [Japanese]
[DEBUG] 2025-10-10 17:57:11.059 [main] results - Extracted JDBC value [2] - [Good cheap rolls. Togo or sit down are both great]
[DEBUG] 2025-10-10 17:57:11.059 [main] results - Extracted JDBC value [3] - [5]
[DEBUG] 2025-10-10 17:57:11.059 [main] results - Extracted JDBC value [4] - [Sushi Express]
[DEBUG] 2025-10-10 17:57:11.059 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Review(30436840120400)#1
[DEBUG] 2025-10-10 17:57:11.059 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@949d347
[DEBUG] 2025-10-10 17:57:11.059 [main] results - Extracted JDBC value [0] - [2]
[DEBUG] 2025-10-10 17:57:11.059 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review(30436840120400)): 2
[DEBUG] 2025-10-10 17:57:11.059 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Review(30436840120400)#2] : 257614494
[DEBUG] 2025-10-10 17:57:11.059 [main] results - Extracted JDBC value [1] - [American]
[DEBUG] 2025-10-10 17:57:11.059 [main] results - Extracted JDBC value [2] - [Wraps, good after a long day]
[DEBUG] 2025-10-10 17:57:11.059 [main] results - Extracted JDBC value [3] - [4]
[DEBUG] 2025-10-10 17:57:11.059 [main] results - Extracted JDBC value [4] - [Conrads]
[DEBUG] 2025-10-10 17:57:11.059 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Review(30436840120400)#2
[DEBUG] 2025-10-10 17:57:11.060 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@949d347
[DEBUG] 2025-10-10 17:57:11.060 [main] results - Extracted JDBC value [0] - [3]
[DEBUG] 2025-10-10 17:57:11.060 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review(30436840120400)): 3
[DEBUG] 2025-10-10 17:57:11.060 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Review(30436840120400)#3] : 533053618
[DEBUG] 2025-10-10 17:57:11.060 [main] results - Extracted JDBC value [1] - [American]
[DEBUG] 2025-10-10 17:57:11.060 [main] results - Extracted JDBC value [2] - [Mac and Cheese Slice for the win!]
[DEBUG] 2025-10-10 17:57:11.060 [main] results - Extracted JDBC value [3] - [5]
[DEBUG] 2025-10-10 17:57:11.060 [main] results - Extracted JDBC value [4] - [Ians Pizza]
[DEBUG] 2025-10-10 17:57:11.060 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Review(30436840120400)#3
[DEBUG] 2025-10-10 17:57:11.060 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@949d347
[DEBUG] 2025-10-10 17:57:11.061 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-10 17:57:11.061 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-10 17:57:11.150 [main] create - Created new SQL alias : r1_0
[DEBUG] 2025-10-10 17:57:11.150 [main] create - Registration of TableGroup [StandardTableGroup(org.hungrybadger.entity.Review(30436998558800))] with identifierForTableGroup [org.hungrybadger.entity.Review] for NavigablePath [org.hungrybadger.entity.Review] 
[DEBUG] 2025-10-10 17:57:11.155 [main] BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1c411474
[DEBUG] 2025-10-10 17:57:11.155 [main] BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.hungrybadger.entity.Review(30436998558800).restaurantName) 
[DEBUG] 2025-10-10 17:57:11.158 [main] AST - DomainResult Graph:
 \-EntityResultImpl [org.hungrybadger.entity.Review(30436998558800)]
 |  +-BasicFetch [org.hungrybadger.entity.Review(30436998558800).cuisineType]
 |  +-BasicFetch [org.hungrybadger.entity.Review(30436998558800).personalNotes]
 |  +-BasicFetch [org.hungrybadger.entity.Review(30436998558800).personalRating]
 |  \-BasicFetch [org.hungrybadger.entity.Review(30436998558800).restaurantName]

[DEBUG] 2025-10-10 17:57:11.158 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.hungrybadger.entity.Review(30436998558800)) {
          primaryTableReference : review as r1_0
        }
      }
    }

[DEBUG] 2025-10-10 17:57:11.159 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
[DEBUG] 2025-10-10 17:57:11.159 [main] results - Initializer list:
	  org.hungrybadger.entity.Review(30436998558800) -> EntityResultInitializer(org.hungrybadger.entity.Review(30436998558800))@1053273441 (SingleTableEntityPersister(org.hungrybadger.entity.Review))

[DEBUG] 2025-10-10 17:57:11.159 [main] SQL - select r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from review r1_0 where r1_0.restaurant_name like ? escape ''
[DEBUG] 2025-10-10 17:57:11.162 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2025-10-10 17:57:11.162 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review(30436998558800)): 1
[DEBUG] 2025-10-10 17:57:11.162 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Review(30436998558800)#1] : 159851247
[DEBUG] 2025-10-10 17:57:11.162 [main] results - Extracted JDBC value [1] - [Japanese]
[DEBUG] 2025-10-10 17:57:11.162 [main] results - Extracted JDBC value [2] - [Good cheap rolls. Togo or sit down are both great]
[DEBUG] 2025-10-10 17:57:11.162 [main] results - Extracted JDBC value [3] - [5]
[DEBUG] 2025-10-10 17:57:11.162 [main] results - Extracted JDBC value [4] - [Sushi Express]
[DEBUG] 2025-10-10 17:57:11.162 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Review(30436998558800)#1
[DEBUG] 2025-10-10 17:57:11.162 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@459e120b
[DEBUG] 2025-10-10 17:57:11.162 [main] results - Extracted JDBC value [0] - [2]
[DEBUG] 2025-10-10 17:57:11.162 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review(30436998558800)): 2
[DEBUG] 2025-10-10 17:57:11.162 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Review(30436998558800)#2] : 265722243
[DEBUG] 2025-10-10 17:57:11.162 [main] results - Extracted JDBC value [1] - [American]
[DEBUG] 2025-10-10 17:57:11.162 [main] results - Extracted JDBC value [2] - [Wraps, good after a long day]
[DEBUG] 2025-10-10 17:57:11.163 [main] results - Extracted JDBC value [3] - [4]
[DEBUG] 2025-10-10 17:57:11.163 [main] results - Extracted JDBC value [4] - [Conrads]
[DEBUG] 2025-10-10 17:57:11.163 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Review(30436998558800)#2
[DEBUG] 2025-10-10 17:57:11.163 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@459e120b
[DEBUG] 2025-10-10 17:57:11.163 [main] results - Extracted JDBC value [0] - [3]
[DEBUG] 2025-10-10 17:57:11.163 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review(30436998558800)): 3
[DEBUG] 2025-10-10 17:57:11.163 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Review(30436998558800)#3] : 574790161
[DEBUG] 2025-10-10 17:57:11.163 [main] results - Extracted JDBC value [1] - [American]
[DEBUG] 2025-10-10 17:57:11.163 [main] results - Extracted JDBC value [2] - [Mac and Cheese Slice for the win!]
[DEBUG] 2025-10-10 17:57:11.163 [main] results - Extracted JDBC value [3] - [5]
[DEBUG] 2025-10-10 17:57:11.163 [main] results - Extracted JDBC value [4] - [Ians Pizza]
[DEBUG] 2025-10-10 17:57:11.163 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Review(30436998558800)#3
[DEBUG] 2025-10-10 17:57:11.163 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@459e120b
[DEBUG] 2025-10-10 17:57:11.163 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-10 17:57:11.164 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-10 17:57:11.214 [main] create - Created new SQL alias : r1_0
[DEBUG] 2025-10-10 17:57:11.214 [main] create - Registration of TableGroup [StandardTableGroup(org.hungrybadger.entity.Review(30437088368000))] with identifierForTableGroup [org.hungrybadger.entity.Review] for NavigablePath [org.hungrybadger.entity.Review] 
[DEBUG] 2025-10-10 17:57:11.214 [main] BaseSqmToSqlAstConverter - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2adc1e84
[DEBUG] 2025-10-10 17:57:11.214 [main] BaseSqmToSqlAstConverter - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(org.hungrybadger.entity.Review(30437088368000).restaurantName) 
[DEBUG] 2025-10-10 17:57:11.214 [main] AST - DomainResult Graph:
 \-EntityResultImpl [org.hungrybadger.entity.Review(30437088368000)]
 |  +-BasicFetch [org.hungrybadger.entity.Review(30437088368000).cuisineType]
 |  +-BasicFetch [org.hungrybadger.entity.Review(30437088368000).personalNotes]
 |  +-BasicFetch [org.hungrybadger.entity.Review(30437088368000).personalRating]
 |  \-BasicFetch [org.hungrybadger.entity.Review(30437088368000).restaurantName]

[DEBUG] 2025-10-10 17:57:11.214 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.hungrybadger.entity.Review(30437088368000)) {
          primaryTableReference : review as r1_0
        }
      }
    }

[DEBUG] 2025-10-10 17:57:11.215 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
[DEBUG] 2025-10-10 17:57:11.215 [main] results - Initializer list:
	  org.hungrybadger.entity.Review(30437088368000) -> EntityResultInitializer(org.hungrybadger.entity.Review(30437088368000))@1469217737 (SingleTableEntityPersister(org.hungrybadger.entity.Review))

[DEBUG] 2025-10-10 17:57:11.215 [main] SQL - select r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from review r1_0 where r1_0.restaurant_name like ? escape ''
[DEBUG] 2025-10-10 17:57:11.216 [main] results - Extracted JDBC value [0] - [1]
[DEBUG] 2025-10-10 17:57:11.217 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review(30437088368000)): 1
[DEBUG] 2025-10-10 17:57:11.217 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Review(30437088368000)#1] : 2006056784
[DEBUG] 2025-10-10 17:57:11.217 [main] results - Extracted JDBC value [1] - [Japanese]
[DEBUG] 2025-10-10 17:57:11.217 [main] results - Extracted JDBC value [2] - [Good cheap rolls. Togo or sit down are both great]
[DEBUG] 2025-10-10 17:57:11.217 [main] results - Extracted JDBC value [3] - [5]
[DEBUG] 2025-10-10 17:57:11.217 [main] results - Extracted JDBC value [4] - [Sushi Express]
[DEBUG] 2025-10-10 17:57:11.217 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Review(30437088368000)#1
[DEBUG] 2025-10-10 17:57:11.217 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@46de118b
[DEBUG] 2025-10-10 17:57:11.217 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-10 17:57:11.218 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-10 17:57:11.269 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2025-10-10 17:57:11.269 [main] results - Initializer list:
	  org.hungrybadger.entity.Review -> EntityResultInitializer(org.hungrybadger.entity.Review)@2040509534 (SingleTableEntityPersister(org.hungrybadger.entity.Review))

[DEBUG] 2025-10-10 17:57:11.269 [main] SQL - select r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from review r1_0 where r1_0.id=?
[DEBUG] 2025-10-10 17:57:11.271 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review): 1
[DEBUG] 2025-10-10 17:57:11.271 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Review#1] : 409957428
[DEBUG] 2025-10-10 17:57:11.271 [main] results - Extracted JDBC value [1] - [Japanese]
[DEBUG] 2025-10-10 17:57:11.271 [main] results - Extracted JDBC value [2] - [Good cheap rolls. Togo or sit down are both great]
[DEBUG] 2025-10-10 17:57:11.271 [main] results - Extracted JDBC value [3] - [5]
[DEBUG] 2025-10-10 17:57:11.271 [main] results - Extracted JDBC value [4] - [Sushi Express]
[DEBUG] 2025-10-10 17:57:11.271 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Review#1
[DEBUG] 2025-10-10 17:57:11.271 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2374452a
[DEBUG] 2025-10-10 17:57:11.272 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-10 17:57:11.325 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2025-10-10 17:57:11.325 [main] results - Initializer list:
	  org.hungrybadger.entity.Review -> EntityResultInitializer(org.hungrybadger.entity.Review)@337509625 (SingleTableEntityPersister(org.hungrybadger.entity.Review))

[DEBUG] 2025-10-10 17:57:11.325 [main] SQL - select r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from review r1_0 where r1_0.id=?
[DEBUG] 2025-10-10 17:57:11.328 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review): 1
[DEBUG] 2025-10-10 17:57:11.328 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Review#1] : 671967776
[DEBUG] 2025-10-10 17:57:11.328 [main] results - Extracted JDBC value [1] - [Japanese]
[DEBUG] 2025-10-10 17:57:11.328 [main] results - Extracted JDBC value [2] - [Good cheap rolls. Togo or sit down are both great]
[DEBUG] 2025-10-10 17:57:11.328 [main] results - Extracted JDBC value [3] - [5]
[DEBUG] 2025-10-10 17:57:11.328 [main] results - Extracted JDBC value [4] - [Sushi Express]
[DEBUG] 2025-10-10 17:57:11.328 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Review#1
[DEBUG] 2025-10-10 17:57:11.328 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@56f72909
[DEBUG] 2025-10-10 17:57:11.328 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-10 17:57:11.329 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2025-10-10 17:57:11.329 [main] TransactionImpl - begin
[DEBUG] 2025-10-10 17:57:11.333 [main] create - Created new SQL alias : r1_0
[DEBUG] 2025-10-10 17:57:11.333 [main] create - Registration of TableGroup [StandardTableGroup(org.hungrybadger.entity.Review)] with identifierForTableGroup [org.hungrybadger.entity.Review] for NavigablePath [org.hungrybadger.entity.Review] 
[DEBUG] 2025-10-10 17:57:11.334 [main] AST - DomainResult Graph:
 \-EntityResultImpl [org.hungrybadger.entity.Review]
 |  +-BasicFetch [org.hungrybadger.entity.Review.cuisineType]
 |  +-BasicFetch [org.hungrybadger.entity.Review.personalNotes]
 |  +-BasicFetch [org.hungrybadger.entity.Review.personalRating]
 |  \-BasicFetch [org.hungrybadger.entity.Review.restaurantName]

[DEBUG] 2025-10-10 17:57:11.334 [main] tree - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : org.hungrybadger.entity.Review) {
          primaryTableReference : review as r1_0
        }
      }
    }

[DEBUG] 2025-10-10 17:57:11.334 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2025-10-10 17:57:11.334 [main] results - Initializer list:
	  org.hungrybadger.entity.Review -> EntityResultInitializer(org.hungrybadger.entity.Review)@347042785 (SingleTableEntityPersister(org.hungrybadger.entity.Review))

[DEBUG] 2025-10-10 17:57:11.334 [main] SQL - select r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from review r1_0 where r1_0.id=?
[DEBUG] 2025-10-10 17:57:11.335 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review): 1
[DEBUG] 2025-10-10 17:57:11.335 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Review#1] : 1868914109
[DEBUG] 2025-10-10 17:57:11.335 [main] results - Extracted JDBC value [1] - [Japanese]
[DEBUG] 2025-10-10 17:57:11.335 [main] results - Extracted JDBC value [2] - [Good cheap rolls. Togo or sit down are both great]
[DEBUG] 2025-10-10 17:57:11.336 [main] results - Extracted JDBC value [3] - [5]
[DEBUG] 2025-10-10 17:57:11.336 [main] results - Extracted JDBC value [4] - [Sushi Express]
[DEBUG] 2025-10-10 17:57:11.336 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Review#1
[DEBUG] 2025-10-10 17:57:11.336 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@546083d6
[DEBUG] 2025-10-10 17:57:11.336 [main] TransactionImpl - committing
[DEBUG] 2025-10-10 17:57:11.336 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2025-10-10 17:57:11.336 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2025-10-10 17:57:11.338 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
[DEBUG] 2025-10-10 17:57:11.338 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2025-10-10 17:57:11.338 [main] EntityPrinter - Listing entities:
[DEBUG] 2025-10-10 17:57:11.338 [main] EntityPrinter - org.hungrybadger.entity.Review{personalNotes=Good cheap rolls. Togo or sit down are both great, personalRating=5, restaurantName=Conrads Wraps, id=1, cuisineType=Japanese}
[DEBUG] 2025-10-10 17:57:11.342 [main] SQL - update review set cuisine_type=?,personal_notes=?,personal_rating=?,restaurant_name=? where id=?
[DEBUG] 2025-10-10 17:57:11.347 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-10 17:57:11.348 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-10 17:57:11.348 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2025-10-10 17:57:11.348 [main] results - Initializer list:
	  org.hungrybadger.entity.Review -> EntityResultInitializer(org.hungrybadger.entity.Review)@293583290 (SingleTableEntityPersister(org.hungrybadger.entity.Review))

[DEBUG] 2025-10-10 17:57:11.348 [main] SQL - select r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from review r1_0 where r1_0.id=?
[DEBUG] 2025-10-10 17:57:11.349 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review): 1
[DEBUG] 2025-10-10 17:57:11.350 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Review#1] : 691200351
[DEBUG] 2025-10-10 17:57:11.350 [main] results - Extracted JDBC value [1] - [Japanese]
[DEBUG] 2025-10-10 17:57:11.350 [main] results - Extracted JDBC value [2] - [Good cheap rolls. Togo or sit down are both great]
[DEBUG] 2025-10-10 17:57:11.350 [main] results - Extracted JDBC value [3] - [5]
[DEBUG] 2025-10-10 17:57:11.350 [main] results - Extracted JDBC value [4] - [Conrads Wraps]
[DEBUG] 2025-10-10 17:57:11.350 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Review#1
[DEBUG] 2025-10-10 17:57:11.350 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3d98729a
[DEBUG] 2025-10-10 17:57:11.350 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-10 17:57:11.404 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2025-10-10 17:57:11.404 [main] TransactionImpl - begin
[DEBUG] 2025-10-10 17:57:11.407 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2025-10-10 17:57:11.410 [main] SQL - insert into review (cuisine_type,personal_notes,personal_rating,restaurant_name) values (?,?,?,?)
[DEBUG] 2025-10-10 17:57:11.416 [main] IdentifierGeneratorHelper - Natively generated identity (org.hungrybadger.entity.Review) : 4
[DEBUG] 2025-10-10 17:57:11.417 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2025-10-10 17:57:11.422 [main] ResourceRegistryStandardImpl - Exception clearing maxRows/queryTimeout [You can't operate on a closed Statement!!!]
[DEBUG] 2025-10-10 17:57:11.425 [main] TransactionImpl - committing
[DEBUG] 2025-10-10 17:57:11.425 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2025-10-10 17:57:11.425 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2025-10-10 17:57:11.425 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2025-10-10 17:57:11.425 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2025-10-10 17:57:11.425 [main] EntityPrinter - Listing entities:
[DEBUG] 2025-10-10 17:57:11.425 [main] EntityPrinter - org.hungrybadger.entity.Review{personalNotes=Worked here for 2 years, gluten free!, personalRating=4, restaurantName=Madison Chocolate Company, id=4, cuisineType=French}
[DEBUG] 2025-10-10 17:57:11.427 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-10 17:57:11.428 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2025-10-10 17:57:11.429 [main] exec - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2025-10-10 17:57:11.429 [main] results - Initializer list:
	  org.hungrybadger.entity.Review -> EntityResultInitializer(org.hungrybadger.entity.Review)@581318464 (SingleTableEntityPersister(org.hungrybadger.entity.Review))

[DEBUG] 2025-10-10 17:57:11.429 [main] SQL - select r1_0.id,r1_0.cuisine_type,r1_0.personal_notes,r1_0.personal_rating,r1_0.restaurant_name from review r1_0 where r1_0.id=?
[DEBUG] 2025-10-10 17:57:11.430 [main] entity - (EntityResultInitializer) Hydrated EntityKey (org.hungrybadger.entity.Review): 4
[DEBUG] 2025-10-10 17:57:11.431 [main] entity - (EntityResultInitializer) Created new entity instance [org.hungrybadger.entity.Review#4] : 677521178
[DEBUG] 2025-10-10 17:57:11.431 [main] results - Extracted JDBC value [1] - [French]
[DEBUG] 2025-10-10 17:57:11.431 [main] results - Extracted JDBC value [2] - [Worked here for 2 years, gluten free!]
[DEBUG] 2025-10-10 17:57:11.431 [main] results - Extracted JDBC value [3] - [4]
[DEBUG] 2025-10-10 17:57:11.431 [main] results - Extracted JDBC value [4] - [Madison Chocolate Company]
[DEBUG] 2025-10-10 17:57:11.431 [main] entity - (EntityResultInitializer) Done materializing entityInstance : org.hungrybadger.entity.Review#4
[DEBUG] 2025-10-10 17:57:11.431 [main] loading - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2419fe6f
[DEBUG] 2025-10-10 17:57:11.431 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
